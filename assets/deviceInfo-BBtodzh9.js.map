{"version":3,"mappings":";gGACA,MAAMA,EAASC,EAAe,SAAU,CACpC,IAAK,IAAKC,EAAA,IAAC,OAAO,mBAAO,4BAAE,KAAKC,GAAK,IAAIA,EAAE,SAAW,CAC1D,CAAC,ECKKC,EAAKC,EAAa,EACDC,EAAS,IAAMF,EAAG,KAAK,EAE9C,MAAMG,EAAKF,EAAgB,EACdG,EAAaF,EAAS,IAAMC,EAAG,KAAK,EAE3CE,EAAKJ,EAAiB,EACDC,EAAS,IAAMG,EAAG,KAAK,EAElD,MAAMC,EAAKL,EAAc,EACDC,EAAS,IAAMI,EAAG,KAAK,EAE/C,MAAMC,EAAYC,EAAW,EAEhBC,EAAaR,EAAI,EAAE,EACzB,SAASS,EAAcC,EAAe,CAC5CF,EAAW,MAAQE,EACnBC,EAAY,IAAI,CAAE,IAAK,aAAc,MAAAD,CAAa,CAAC,EAAE,KAAK,CAC3D,CACA,MAAME,EAAgB,SAAY,OACjC,MAAMJ,GAAc,MAAMG,EAAY,IAAI,CAAE,IAAK,aAAc,GAAG,SAASE,EAAAV,EAAW,QAAX,YAAAU,EAAkB,OAAQP,EAAU,SAC/GG,EAAcD,CAAU,CACzB,EAEaM,EAAWd,EAAI,EAAE,EACvB,SAASe,EAAYL,EAAe,CAC1CI,EAAS,MAAQJ,EACjBC,EAAY,IAAI,CAAE,IAAK,WAAY,MAAAD,CAAa,CAAC,EAAE,KAAK,CACzD,CACA,MAAMM,EAAc,SAAY,CACzBF,SAAY,MAAMH,EAAY,IAAI,CAAE,IAAK,WAAY,GAAG,OAASL,EAAU,SACjFS,EAAYD,CAAQ,CACrB,GAEC,UACGZ,EAAA,MAAQ,MAAMP,EAAO,QAAQ,EAEhC,MAAMiB,EAAc,EACpB,MAAMI,EAAY,EAEdC,EAAW,WAAW,GAAKA,EAAW,SAAS,IAC/ClB,EAAA,MAAQ,MAAMmB,EAAQ,QAAQ,EAC9Bd,EAAA,MAAQ,MAAMT,EAAO,eAAe,GAExC,MAAMuB,EAAQ,YAAY,iBAAmBC,GAAS,CACrDd,EAAG,MAAQc,CAAA,CACX","names":["Device","registerPlugin","__vitePreload","m","ai","ref","computed","di","deviceInfo","bi","as","deviceUid","createUUID","deviceName","setDeviceName","value","Preferences","getDeviceName","_a","deviceId","setDeviceId","getDeviceId","isPlatform","android","data"],"ignoreList":[0],"sources":["../../node_modules/@capacitor/device/dist/esm/index.js","../../src/store/deviceInfo.ts"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Device = registerPlugin('Device', {\n    web: () => import('./web').then(m => new m.DeviceWeb()),\n});\nexport * from './definitions';\nexport { Device };\n//# sourceMappingURL=index.js.map","import { computed, ref, toRaw } from 'vue';\n\nimport { App as android, type AppInfo, type AppState } from '@capacitor/app';\nimport { BatteryInfo, Device, DeviceInfo } from '@capacitor/device';\nimport { Preferences } from '@capacitor/preferences';\nimport { isPlatform } from '@ionic/vue';\nimport createUUID from \"@/lib/uuidHelper\";\n\nconst ai = ref<AppInfo>();\nexport const appInfo = computed(() => ai.value);\n\nconst di = ref<DeviceInfo>();\nexport const deviceInfo = computed(() => di.value);\n\nconst bi = ref<BatteryInfo>();\nexport const batteryInfo = computed(() => bi.value);\n\nconst as = ref<AppState>();\nexport const appState = computed(() => as.value);\n\nconst deviceUid = createUUID();\n\nexport const deviceName = ref('');\nexport function setDeviceName(value: string) {\n\tdeviceName.value = value;\n\tPreferences.set({ key: 'deviceName', value: value }).then();\n}\nconst getDeviceName = async () => {\n\tconst deviceName = (await Preferences.get({ key: 'deviceName' })).value ?? deviceInfo.value?.name ?? deviceUid.deviceId;\n\tsetDeviceName(deviceName);\n}\n\nexport const deviceId = ref('');\nexport function setDeviceId(value: string) {\n\tdeviceId.value = value;\n\tPreferences.set({ key: 'deviceId', value: value }).then();\n}\nconst getDeviceId = async () => {\n\tconst deviceId = (await Preferences.get({ key: 'deviceId' })).value ?? deviceUid.deviceId;\n\tsetDeviceId(deviceId);\n}\n\n(async () => {\n\tdi.value = await Device.getInfo();\n\n\tawait getDeviceName();\n\tawait getDeviceId();\n\n\tif (isPlatform('capacitor') && isPlatform('android')) {\n\t\tai.value = await android.getInfo();\n\t\tbi.value = await Device.getBatteryInfo();\n\t}\n\tawait android.addListener('appStateChange', (data) => {\n\t\tas.value = data;\n\t});\n\n\t// console.log({\n\t// \tappInfo: toRaw(appInfo.value),\n\t// \tdeviceInfo: toRaw(deviceInfo.value),\n\t// \tbatteryInfo: toRaw(batteryInfo.value)\n\t// });\n\n})();\n"],"file":"assets/deviceInfo-BBtodzh9.js"}