{"version":3,"file":"BigPlayButton.vue_vue_type_script_setup_true_lang-BDIEW5vf.js","sources":["../../src/components/Buttons/BigPlayButton.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onUnmounted, PropType, ref, watch } from 'vue';\n\nimport type { AlbumResponse, ArtistResponse, DisplayList } from '@/types/api/music/musicPlayer';\nimport audioPlayer, { currentPlaylist, currentSong, setCurrentPlaylist, isPlaying } from '@/store/audioPlayer';\n\nimport PlayerIcon from '@/components/Images/icons/PlayerIcon.vue';\nimport MusicButton from '@/components/MusicPlayer/components/MusicButton.vue';\nimport { useRoute } from 'vue-router';\n\nconst props = defineProps({\n  data: {\n    type: Object as PropType<DisplayList | ArtistResponse | AlbumResponse | undefined>,\n    required: true,\n  },\n  onkeyup: {\n    type: Function as PropType<(e: KeyboardEvent) => void>,\n    required: false,\n  },\n  className: {\n    type: String,\n    required: false,\n    default: '',\n  },\n});\n\nconst state = ref(false);\n\nconst route = useRoute();\n\nconst isCurrentPlaylist = computed(() => {\n  return currentPlaylist.value == route.path;\n});\n\nconst setCurrentList = () => {\n  setCurrentPlaylist(route.path);\n};\n\nconst handleClick = () => {\n\n  if (props.data?.tracks?.[0]) {\n    if (isCurrentPlaylist.value) {\n      if (isPlaying.value && isCurrentPlaylist.value) {\n        audioPlayer.pause();\n      } else {\n        audioPlayer.play();\n      }\n    } else {\n      audioPlayer.setQueue([]);\n      audioPlayer.setBackLog([]);\n\n      const song = props.data.tracks.find(track => track.id == currentSong.value?.id);\n\n      if (currentSong.value?.id && song) {\n        audioPlayer.playTrack(song, props.data?.tracks ?? []);\n      } else {\n        audioPlayer.playTrack(props.data?.tracks?.[0], props.data?.tracks ?? []);\n      }\n\n      setCurrentList();\n      state.value = audioPlayer.isPlaying ?? false;\n    }\n  }\n};\n\nconst setIsPlaying = () => {\n  if (isCurrentPlaylist.value) {\n    state.value = audioPlayer.isPlaying ?? false;\n  }\n};\n\nwatch(currentPlaylist, () => {\n  if (isCurrentPlaylist.value) {\n    state.value = audioPlayer.isPlaying ?? false;\n  }\n});\n\nonUnmounted(() => {\n  setIsPlaying();\n\n  audioPlayer.on?.('play', setIsPlaying);\n  audioPlayer.on?.('pause', setIsPlaying);\n});\n\nonUnmounted(() => {\n  audioPlayer.off('play', setIsPlaying);\n  audioPlayer.off('pause', setIsPlaying);\n});\n\n</script>\n\n<template>\n  <MusicButton label=\"Play\" v-if=\"audioPlayer\" id=\"playList\" :onclick=\"handleClick\" :onkeyup=\"onkeyup\"\n    :class=\"className\" class=\"h-12 w-12 min-w-12 min-h-12 max-w-12 max-h-12 relative !rounded-full overflow-clip !bg-focus transition-all duration-300\n                       shadow-[0_1px_0_0_rgba(255,255,255,0.20)_inset,0_-1px_0_0_rgba(var(--color-slate-9)/60%)_inset,0_22px_30px_-4px_rgba(var(--color-slate-9)/70%)]\n                       dark:shadow-[0_1px_0_0_rgba(255,255,255,0.20)_inset,0_-1px_0_0_rgba(var(--color-slate-1)/30%)_inset,0_22px_30px_-4px_rgba(var(--color-slate-1)/70%)]\n                       hover:shadow-[0_1px_0_0_rgba(255,255,255,0.20)_inset,0_-1px_0_0_rgba(var(--color-slate-11)/60%)_inset,0_22px_30px_-4px_rgba(var(--color-slate-11)/70%)]\n                       dark:hover:shadow-[0_1px_0_0_rgba(255,255,255,0.20)_inset,0_-1px_0_0_rgba(var(--color-slate-1)/30%)_inset,0_22px_30px_-4px_rgba(var(--color-slate-1)/70%)]\n                       active:!bg-focus focus-visible:!bg-focus hover:!bg-focus dark:active:!bg-focus dark:focus-visible:!bg-focus dark:sm:hover:!bg-focus\n                       active:!shadow-none\n                       active:!dark:shadow-none\">\n    <PlayerIcon icon=\"nmPause\" v-if=\"(isPlaying && isCurrentPlaylist)\" class=\"h-8 w-8 text-white\" />\n    <PlayerIcon icon=\"nmPlay\" v-else class=\"h-8 w-8 text-white\" />\n  </MusicButton>\n</template>\n"],"names":["props","__props","state","ref","route","useRoute","isCurrentPlaylist","computed","currentPlaylist","setCurrentList","setCurrentPlaylist","handleClick","_b","_a","isPlaying","audioPlayer","song","track","currentSong","_c","_d","_f","_e","_g","setIsPlaying","watch","onUnmounted"],"mappings":"wVAUA,MAAMA,EAAQC,EAgBRC,EAAQC,EAAI,EAAK,EAEjBC,EAAQC,EAAS,EAEjBC,EAAoBC,EAAS,IAC1BC,EAAgB,OAASJ,EAAM,IACvC,EAEKK,EAAiB,IAAM,CAC3BC,EAAmBN,EAAM,IAAI,CAC/B,EAEMO,EAAc,IAAM,mBAExB,IAAIC,GAAAC,EAAAb,EAAM,OAAN,YAAAa,EAAY,SAAZ,MAAAD,EAAqB,GACvB,GAAIN,EAAkB,MAChBQ,EAAU,OAASR,EAAkB,MACvCS,EAAY,MAAM,EAElBA,EAAY,KAAK,MAEd,CACOA,EAAA,SAAS,EAAE,EACXA,EAAA,WAAW,EAAE,EAEnB,MAAAC,EAAOhB,EAAM,KAAK,OAAO,eAAc,OAAAiB,EAAM,MAAMJ,EAAAK,EAAY,QAAZ,YAAAL,EAAmB,IAAE,GAE1EM,EAAAD,EAAY,QAAZ,MAAAC,EAAmB,IAAMH,EAC3BD,EAAY,UAAUC,IAAMI,EAAApB,EAAM,OAAN,YAAAoB,EAAY,SAAU,EAAE,EAExCL,EAAA,WAAUM,GAAAC,EAAAtB,EAAM,OAAN,YAAAsB,EAAY,SAAZ,YAAAD,EAAqB,KAAIE,EAAAvB,EAAM,OAAN,YAAAuB,EAAY,SAAU,EAAE,EAG1Dd,EAAA,EACTP,EAAA,MAAQa,EAAY,WAAa,EAAA,CAG7C,EAEMS,EAAe,IAAM,CACrBlB,EAAkB,QACdJ,EAAA,MAAQa,EAAY,WAAa,GAE3C,EAEA,OAAAU,EAAMjB,EAAiB,IAAM,CACvBF,EAAkB,QACdJ,EAAA,MAAQa,EAAY,WAAa,GACzC,CACD,EAEDW,EAAY,IAAM,aACHF,EAAA,GAEDZ,GAAAC,EAAAE,GAAA,KAAA,MAAAH,EAAA,KAAAC,EAAK,OAAQW,IACbJ,GAAAD,EAAAJ,GAAA,KAAA,MAAAK,EAAA,KAAAD,EAAK,QAASK,EAAY,CACvC,EAEDE,EAAY,IAAM,CACJX,EAAA,IAAI,OAAQS,CAAY,EACxBT,EAAA,IAAI,QAASS,CAAY,CAAA,CACtC"}