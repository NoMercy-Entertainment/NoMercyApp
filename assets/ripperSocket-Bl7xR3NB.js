import{Ai as o,Is as d,Tc as s,_c as f,ca as u,d as S,u as l,ws as m}from"./index-DO6J_9Tp.js";import{t as i}from"./HubConnection-klX5ssCm.js";m();var e=s();const R=d(()=>e.value?.connection),a=s(!1);function t(){a.value=!0,document.dispatchEvent(new Event("ripperHub-connected")),e.value?.connection&&S(e.value?.connection)}function c(n){a.value=!1,console.log("Disconnected from Ripper SignalR",n),document.dispatchEvent(new Event("ripperHub-disconnected"))}function p(n){a.value=!1,console.error("Ripper SignalR Error:",n),document.dispatchEvent(new Event("ripperHub-error"))}f(o,async n=>{const r=u.value?.accessToken;n&&a.value&&(e.value?.connection?.stop().then(),e.value?.dispose(),e.value=new l(o.value.serverBaseUrl,r,"ripperHub"),e.value?.connection?.on("connected",t),e.value?.connection?.on("disconnected",c),await v().catch(p))});async function v(){if(e.value?.connection?.state!==i.Connected)return e.value?.connection?.start().then(t)}async function k(){try{return e.value?.connection?.state===i.Disconnected?void 0:e.value?.connection?.stop().then(c).catch(c)}catch(n){console.error("Error stopping Ripper SignalR:",n),c()}}async function w(){const n=u.value?.accessToken;o.value&&(!e.value?.connection?.state||e.value?.connection?.state===i.Disconnected)&&(e.value=new l(o.value.serverBaseUrl,n,"ripperHub"),e.value?.connection?.on("connected",t),e.value?.connection?.on("disconnected",c),await v().catch(p),e.value?.connection?.onreconnecting(r=>{console.log("SignalR Disconnected.",r?.message),c()}),e.value?.connection?.onreconnected(()=>{console.log("SignalR Reconnected."),t()}))}export{k as i,a as n,w as r,R as t};
