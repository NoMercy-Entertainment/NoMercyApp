{"version":3,"file":"Desktop-Cd9W-omj.js","sources":["../../src/views/Dashboard/System/General/Desktop.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {computed, onMounted, ref, Ref, toRaw, watch} from 'vue';\nimport {IonContent, IonPage} from '@ionic/vue';\nimport {useQueryClient} from '@tanstack/vue-query';\nimport {useDebounce} from '@vueuse/core';\nimport {InputNumber, InputText} from 'primevue';\n\nimport type {ConfigurationResponse} from '@/types/api/dashboard/server';\n\nimport serverClient from '@/lib/clients/serverClient';\n\nimport DashboardLayout from '@/Layout/Desktop/DashboardLayout.vue';\nimport useServerClient from '@/lib/clients/useServerClient';\nimport {Nullable} from 'vitest';\n\nconst {data: configuration, refetch: invalidate, error} = useServerClient<ConfigurationResponse>({\n  path: '/dashboard/configuration',\n});\n\nconst ready = ref<boolean>(false);\nconst newConfig = ref<ConfigurationResponse>(configuration.value ?? <ConfigurationResponse>{});\n\nconst updateState = <T>(key: keyof T, value: any) => {\n  if (!configuration.value) return;\n\n  if (toRaw(configuration.value[key as keyof ConfigurationResponse]) == value) {\n    delete newConfig.value[key as keyof ConfigurationResponse];\n    newConfig.value = {\n      ...newConfig.value,\n    };\n    return;\n  }\n  newConfig.value = {\n    ...newConfig.value,\n    [key]: value || undefined,\n  };\n};\n\nwatch(configuration, (value) => {\n  if (!value) return;\n  newConfig.value = <ConfigurationResponse>{};\n\n  server_name.value = value?.server_name;\n  external_server_port.value = value?.external_server_port;\n  internal_server_port.value = value?.internal_server_port;\n  queue_workers.value = value?.queue_workers;\n  cron_workers.value = value?.cron_workers;\n  data_workers.value = value?.data_workers;\n  request_workers.value = value?.request_workers;\n  encoder_workers.value = value?.encoder_workers;\n  image_workers.value = value?.image_workers;\n  ready.value = true;\n});\n\nonMounted(() => {\n  if (!configuration.value) return;\n  newConfig.value = <ConfigurationResponse>{};\n\n  server_name.value = configuration.value?.server_name;\n  external_server_port.value = configuration.value?.external_server_port;\n  internal_server_port.value = configuration.value?.internal_server_port;\n  queue_workers.value = configuration.value?.queue_workers;\n  cron_workers.value = configuration.value?.cron_workers;\n  data_workers.value = configuration.value?.data_workers;\n  request_workers.value = configuration.value?.request_workers;\n  encoder_workers.value = configuration.value?.encoder_workers;\n  image_workers.value = configuration.value?.image_workers;\n  ready.value = true;\n});\n\nconst server_name = ref<Nullable<string>>(configuration.value?.server_name ?? '');\nwatch(server_name, (value) => {\n  updateState('server_name', value);\n});\n\nconst external_server_port = ref<Nullable<number>>(configuration.value?.external_server_port ?? 0);\nwatch(external_server_port, (value) => {\n  updateState('external_server_port', value);\n});\n\nconst internal_server_port = ref<Nullable<number>>(configuration.value?.internal_server_port ?? 0);\nwatch(internal_server_port, (value) => {\n  updateState('internal_server_port', value);\n});\n\nconst queue_workers = ref<Nullable<number>>(configuration.value?.queue_workers ?? 0);\nwatch(queue_workers, (value) => {\n  updateState('queue_workers', value);\n});\n\nconst cron_workers = ref<Nullable<number>>(configuration.value?.cron_workers ?? 0);\nwatch(cron_workers, (value) => {\n  updateState('cron_workers', value);\n});\n\nconst data_workers = ref<Nullable<number>>(configuration.value?.data_workers ?? 0);\nwatch(data_workers, (value) => {\n  updateState('data_workers', value);\n});\n\nconst request_workers = ref<Nullable<number>>(configuration.value?.request_workers ?? 0);\nwatch(request_workers, (value) => {\n  updateState('request_workers', value);\n});\n\nconst image_workers = ref<Nullable<number>>(configuration.value?.image_workers ?? 0);\nwatch(image_workers, (value) => {\n  updateState('image_workers', value);\n});\n\nconst encoder_workers = ref<Nullable<number>>(configuration.value?.encoder_workers ?? 0);\nwatch(encoder_workers, (value) => {\n  updateState('encoder_workers', value);\n});\n\nconst hasChanges = computed<boolean>(() => (Object.keys(newConfig.value).length > 0));\nconsole.log(newConfig.value, Object.keys(newConfig.value));\n\nwatch(newConfig, (value) => {\n  console.log(value);\n});\n\nconst query = useQueryClient();\n\nconst save = () => {\n  console.raw(newConfig.value);\n  serverClient()\n      .patch(`/dashboard/configuration`, newConfig.value)\n      .then(() => {\n        invalidate();\n        query.invalidateQueries({queryKey: ['serverInfo']});\n      });\n};\n\n</script>\n\n<template>\n  <ion-page>\n    <ion-content :fullscreen=\"true\">\n      <DashboardLayout :error=\"error\" :gridStyle=\"2\" title=\"General\" description=\"\">\n        <template v-slot:cta>\n\n        </template>\n\n        <div v-if=\"ready\" class=\"col-span-2 col-start-1 2xl:col-start-1\">\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"server_name\">Server name</label>\n            <InputText id=\"server_name\" v-model=\"server_name\" class=\"mb-4\"/>\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"secure_internal_port\">Secure internal port</label>\n            <InputNumber id=\"secure_internal_port\" v-model=\"internal_server_port\" class=\"mb-4\"\n                          :useGrouping=\"false\" showButtons :min=\"2000\"\n            />\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"secure_external_port\">Secure external port</label>\n            <InputNumber id=\"secure_external_port\" v-model=\"external_server_port\" class=\"mb-4\"\n                          :useGrouping=\"false\" showButtons  :in=\"2000\"/>\n          </div>\n        </div>\n        <div v-if=\"ready\" class=\"col-span-2 col-start-1 2xl:col-start-3\">\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"cron_workers\">Cron workers</label>\n            <InputNumber\n                id=\"cron_workers\" v-model=\"cron_workers\" class=\"mb-4\"\n                 :useGrouping=\"false\" showButtons :min=\"0\"/>\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"data_workers\">Data workers</label>\n            <InputNumber\n                id=\"data_workers\" v-model=\"data_workers\" class=\"mb-4\"\n                 :useGrouping=\"false\" showButtons :min=\"0\"/>\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"request_workers\">Request workers</label>\n            <InputNumber id=\"request_workers\" v-model=\"request_workers\" class=\"mb-4\"\n                          :useGrouping=\"false\" showButtons :min=\"0\"/>\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"encoder_workers\">Encoder workers</label>\n            <InputNumber id=\"encoder_workers\" v-model=\"encoder_workers\" class=\"mb-4\"\n                          :useGrouping=\"false\" showButtons :min=\"0\"/>\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"image_workers\">Image workers</label>\n            <InputNumber\n                id=\"image_workers\" v-model=\"image_workers\" class=\"mb-4\"\n                 :useGrouping=\"false\" showButtons :min=\"0\"/>\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"queue_workers\">Queue workers</label>\n            <InputNumber id=\"queue_workers\" v-model=\"queue_workers\" class=\"mb-4\"\n                          :useGrouping=\"false\" showButtons :min=\"0\"/>\n          </div>\n        </div>\n\n        <template v-slot:actions>\n\n          <Button type=\"submit\"\n                  id=\"save\"\n                  :disabled=\"!hasChanges\"\n                  color=\"theme\"\n                  class=\"ml-auto\"\n                  form=\"myForm\"\n                  @click=\"save()\">\n            {{ $t('Save') }}\n          </button>\n        </template>\n\n      </DashboardLayout>\n    </ion-content>\n  </ion-page>\n</template>\n\n"],"names":["configuration","invalidate","error","useServerClient","ready","ref","newConfig","updateState","key","value","toRaw","watch","server_name","external_server_port","internal_server_port","queue_workers","cron_workers","data_workers","request_workers","encoder_workers","image_workers","onMounted","_a","_b","_c","_d","_e","_f","_g","_h","_i","hasChanges","computed","query","useQueryClient","save","serverClient"],"mappings":"49BAeA,KAAM,CAAC,KAAMA,EAAe,QAASC,EAAY,MAAAC,GAASC,EAAuC,CAC/F,KAAM,0BAAA,CACP,EAEKC,EAAQC,EAAa,EAAK,EAC1BC,EAAYD,EAA2BL,EAAc,OAAgC,CAAA,CAAE,EAEvFO,EAAc,CAAIC,EAAcC,IAAe,CACnD,GAAKT,EAAc,MAEnB,IAAIU,GAAMV,EAAc,MAAMQ,CAAkC,CAAC,GAAKC,EAAO,CACpE,OAAAH,EAAU,MAAME,CAAkC,EACzDF,EAAU,MAAQ,CAChB,GAAGA,EAAU,KACf,EACA,MAAA,CAEFA,EAAU,MAAQ,CAChB,GAAGA,EAAU,MACb,CAACE,CAAG,EAAGC,GAAS,MAClB,EACF,EAEME,EAAAX,EAAgBS,GAAU,CACzBA,IACLH,EAAU,MAA+B,CAAC,EAE1CM,EAAY,MAAQH,GAAA,YAAAA,EAAO,YAC3BI,EAAqB,MAAQJ,GAAA,YAAAA,EAAO,qBACpCK,EAAqB,MAAQL,GAAA,YAAAA,EAAO,qBACpCM,EAAc,MAAQN,GAAA,YAAAA,EAAO,cAC7BO,EAAa,MAAQP,GAAA,YAAAA,EAAO,aAC5BQ,EAAa,MAAQR,GAAA,YAAAA,EAAO,aAC5BS,EAAgB,MAAQT,GAAA,YAAAA,EAAO,gBAC/BU,EAAgB,MAAQV,GAAA,YAAAA,EAAO,gBAC/BW,EAAc,MAAQX,GAAA,YAAAA,EAAO,cAC7BL,EAAM,MAAQ,GAAA,CACf,EAEDiB,EAAU,IAAM,uBACTrB,EAAc,QACnBM,EAAU,MAA+B,CAAC,EAE9BM,EAAA,OAAQU,EAAAtB,EAAc,QAAd,YAAAsB,EAAqB,YACpBT,EAAA,OAAQU,EAAAvB,EAAc,QAAd,YAAAuB,EAAqB,qBAC7BT,EAAA,OAAQU,EAAAxB,EAAc,QAAd,YAAAwB,EAAqB,qBACpCT,EAAA,OAAQU,EAAAzB,EAAc,QAAd,YAAAyB,EAAqB,cAC9BT,EAAA,OAAQU,EAAA1B,EAAc,QAAd,YAAA0B,EAAqB,aAC7BT,EAAA,OAAQU,EAAA3B,EAAc,QAAd,YAAA2B,EAAqB,aAC1BT,EAAA,OAAQU,EAAA5B,EAAc,QAAd,YAAA4B,EAAqB,gBAC7BT,EAAA,OAAQU,EAAA7B,EAAc,QAAd,YAAA6B,EAAqB,gBAC/BT,EAAA,OAAQU,EAAA9B,EAAc,QAAd,YAAA8B,EAAqB,cAC3C1B,EAAM,MAAQ,GAAA,CACf,EAED,MAAMQ,EAAcP,IAAsBiB,EAAAtB,EAAc,QAAd,YAAAsB,EAAqB,cAAe,EAAE,EAC1EX,EAAAC,EAAcH,GAAU,CAC5BF,EAAY,cAAeE,CAAK,CAAA,CACjC,EAED,MAAMI,EAAuBR,IAAsBkB,EAAAvB,EAAc,QAAd,YAAAuB,EAAqB,uBAAwB,CAAC,EAC3FZ,EAAAE,EAAuBJ,GAAU,CACrCF,EAAY,uBAAwBE,CAAK,CAAA,CAC1C,EAED,MAAMK,EAAuBT,IAAsBmB,EAAAxB,EAAc,QAAd,YAAAwB,EAAqB,uBAAwB,CAAC,EAC3Fb,EAAAG,EAAuBL,GAAU,CACrCF,EAAY,uBAAwBE,CAAK,CAAA,CAC1C,EAED,MAAMM,EAAgBV,IAAsBoB,EAAAzB,EAAc,QAAd,YAAAyB,EAAqB,gBAAiB,CAAC,EAC7Ed,EAAAI,EAAgBN,GAAU,CAC9BF,EAAY,gBAAiBE,CAAK,CAAA,CACnC,EAED,MAAMO,EAAeX,IAAsBqB,EAAA1B,EAAc,QAAd,YAAA0B,EAAqB,eAAgB,CAAC,EAC3Ef,EAAAK,EAAeP,GAAU,CAC7BF,EAAY,eAAgBE,CAAK,CAAA,CAClC,EAED,MAAMQ,EAAeZ,IAAsBsB,EAAA3B,EAAc,QAAd,YAAA2B,EAAqB,eAAgB,CAAC,EAC3EhB,EAAAM,EAAeR,GAAU,CAC7BF,EAAY,eAAgBE,CAAK,CAAA,CAClC,EAED,MAAMS,EAAkBb,IAAsBuB,EAAA5B,EAAc,QAAd,YAAA4B,EAAqB,kBAAmB,CAAC,EACjFjB,EAAAO,EAAkBT,GAAU,CAChCF,EAAY,kBAAmBE,CAAK,CAAA,CACrC,EAED,MAAMW,EAAgBf,IAAsBwB,EAAA7B,EAAc,QAAd,YAAA6B,EAAqB,gBAAiB,CAAC,EAC7ElB,EAAAS,EAAgBX,GAAU,CAC9BF,EAAY,gBAAiBE,CAAK,CAAA,CACnC,EAED,MAAMU,EAAkBd,IAAsByB,EAAA9B,EAAc,QAAd,YAAA8B,EAAqB,kBAAmB,CAAC,EACjFnB,EAAAQ,EAAkBV,GAAU,CAChCF,EAAY,kBAAmBE,CAAK,CAAA,CACrC,EAEK,MAAAsB,EAAaC,EAAkB,IAAO,OAAO,KAAK1B,EAAU,KAAK,EAAE,OAAS,CAAE,EACpF,QAAQ,IAAIA,EAAU,MAAO,OAAO,KAAKA,EAAU,KAAK,CAAC,EAEnDK,EAAAL,EAAYG,GAAU,CAC1B,QAAQ,IAAIA,CAAK,CAAA,CAClB,EAED,MAAMwB,EAAQC,EAAe,EAEvBC,EAAO,IAAM,CACT,QAAA,IAAI7B,EAAU,KAAK,EAC3B8B,KACK,MAAM,2BAA4B9B,EAAU,KAAK,EACjD,KAAK,IAAM,CACCL,EAAA,EACXgC,EAAM,kBAAkB,CAAC,SAAU,CAAC,YAAY,EAAE,CAAA,CACnD,CACP"}