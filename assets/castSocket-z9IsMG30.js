import{Er as o,Hs as p,Yo as g,d as S,ec as u,f as r,ii as l,os as m,p as C,u as v}from"./index-zK1-WOQT.js";import{t as i}from"./HubConnection-A53UwK20.js";g();var n=u();const E=m(()=>n.value?.connection),a=u(!1);function t(){a.value=!0,console.log("Connected to Cast SignalR"),document.dispatchEvent(new Event("castHub-connected")),n.value?.connection&&(r(n.value?.connection),S(n.value?.connection))}function c(e){a.value=!1,console.log("Disconnected from Cast SignalR",e),document.dispatchEvent(new Event("castHub-disconnected"))}function d(e){a.value=!1,console.error("Cast SignalR Error:",e),document.dispatchEvent(new Event("castHub-error"))}p(o,async e=>{const s=l.value?.accessToken;e&&a.value&&(n.value?.connection?.stop().then(),n.value?.dispose(),n.value=new v(o.value.serverBaseUrl,s,"castHub"),n.value?.connection?.on("connected",t),n.value?.connection?.on("disconnected",c),await f().catch(d))});async function f(){if(n.value?.connection?.state!==i.Connected)return n.value?.connection?.start().then(t)}async function b(){try{return n.value?.connection?.state===i.Disconnected?void 0:n.value?.connection?.stop().then(c).catch(c)}catch(e){console.error("Error stopping Cast SignalR:",e),c()}}async function w(){const e=l.value?.accessToken;o.value&&(!n.value?.connection?.state||n.value?.connection?.state===i.Disconnected)&&(n.value=new v(o.value.serverBaseUrl,e,"castHub"),n.value?.connection?.on("connected",t),n.value?.connection?.on("disconnected",c),await f().catch(d),n.value?.connection?.onreconnecting(s=>{console.log("SignalR Disconnected.",s?.message),C(n.value?.connection),c()}),n.value?.connection?.onreconnected(()=>{console.log("SignalR Reconnected."),r(n.value?.connection),t()}))}export{b as i,E as n,w as r,a as t};
