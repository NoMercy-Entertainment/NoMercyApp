{"version":3,"mappings":";AACA,aAAAA,EAAA,MAAAC,EAAA,KAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,MAAA,4BAAMC,EAAST,EAAe,SAAU,CACpC,IAAK,IAAMC,EAAA,WAAO,mBAAO,4BAAE,KAAKS,GAAK,IAAIA,EAAE,SAAW,CAC1D,CAAC,ECKKC,EAAKT,EAAa,EACXU,EAAUT,EAAS,IAAMQ,EAAG,KAAK,EAExCE,EAAKX,EAAgB,EACdY,EAAaX,EAAS,IAAMU,EAAG,KAAK,EAE3CE,EAAKb,EAAiB,EACfc,EAAcb,EAAS,IAAMY,EAAG,KAAK,EAE5CE,EAAKf,EAAc,EACDC,EAAS,IAAMc,EAAG,KAAK,EAE/C,MAAMC,EAAYd,EAAW,EAEhBe,EAAajB,EAAI,EAAE,EACzB,SAASkB,EAAcC,EAAe,CAC5CF,EAAW,MAAQE,EACnBb,EAAY,IAAI,CAAC,IAAK,aAAc,MAAAa,CAAY,CAAC,EAAE,KAAK,CACzD,CACA,MAAMC,EAAgB,SAAY,CAC3BH,SAAc,MAAMX,EAAY,IAAI,CAAC,IAAK,aAAa,GAAG,OAASU,EAAU,SACnFE,EAAcD,CAAU,CACzB,EAEaI,EAAWrB,EAAI,EAAE,EACvB,SAASsB,EAAYH,EAAe,CAC1CE,EAAS,MAAQF,EACjBb,EAAY,IAAI,CAAC,IAAK,WAAY,MAAAa,CAAY,CAAC,EAAE,KAAK,CACvD,CACA,MAAMI,EAAc,SAAY,CACzBF,SAAY,MAAMf,EAAY,IAAI,CAAC,IAAK,WAAW,GAAG,OAASU,EAAU,SAC/EM,EAAYD,CAAQ,CACrB,GAEC,UACGV,EAAA,MAAQ,MAAMJ,EAAO,QAAQ,EAEhC,MAAMa,EAAc,EACpB,MAAMG,EAAY,EAEdpB,EAAW,WAAW,GAAKA,EAAW,SAAS,IAC/CM,EAAA,MAAQ,MAAMe,EAAQ,QAAQ,EAC9BX,EAAA,MAAQ,MAAMN,EAAO,eAAe,GAExC,MAAMiB,EAAQ,YAAY,iBAAmBC,GAAS,CACrDV,EAAG,MAAQU,CAAA,CACX,EAED,QAAQ,IAAI,CACX,QAASpB,EAAMK,EAAQ,KAAK,EAC5B,WAAYL,EAAMO,EAAW,KAAK,EAClC,YAAaP,EAAMS,EAAY,KAAK,EACpC","names":["registerPlugin","__vitePreload","ref","computed","createUUID","isPlatform","App","toRaw","Preferences","Device","m","ai","appInfo","di","deviceInfo","bi","batteryInfo","as","deviceUid","deviceName","setDeviceName","value","getDeviceName","deviceId","setDeviceId","getDeviceId","android","data"],"ignoreList":[0],"sources":["../../node_modules/@capacitor/device/dist/esm/index.js","../../src/store/deviceInfo.ts"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Device = registerPlugin('Device', {\n    web: () => import('./web').then(m => new m.DeviceWeb()),\n});\nexport * from './definitions';\nexport { Device };\n//# sourceMappingURL=index.js.map","import {computed, ref, toRaw} from 'vue';\n\nimport {App as android, type AppInfo, type AppState} from '@capacitor/app';\nimport {BatteryInfo, Device, DeviceInfo} from '@capacitor/device';\nimport { Preferences } from '@capacitor/preferences';\nimport {isPlatform} from '@ionic/vue';\nimport createUUID from \"@/lib/uuidHelper\";\n\nconst ai = ref<AppInfo>();\nexport const appInfo = computed(() => ai.value);\n\nconst di = ref<DeviceInfo>();\nexport const deviceInfo = computed(() => di.value);\n\nconst bi = ref<BatteryInfo>();\nexport const batteryInfo = computed(() => bi.value);\n\nconst as = ref<AppState>();\nexport const appState = computed(() => as.value);\n\nconst deviceUid = createUUID();\n\nexport const deviceName = ref('');\nexport function setDeviceName(value: string) {\n\tdeviceName.value = value;\n\tPreferences.set({key: 'deviceName', value: value}).then();\n}\nconst getDeviceName = async () => {\n\tconst deviceName = (await Preferences.get({key: 'deviceName'})).value ?? deviceUid.deviceId;\n\tsetDeviceName(deviceName);\n}\n\nexport const deviceId = ref('');\nexport function setDeviceId(value: string) {\n\tdeviceId.value = value;\n\tPreferences.set({key: 'deviceId', value: value}).then();\n}\nconst getDeviceId = async () => {\n\tconst deviceId = (await Preferences.get({key: 'deviceId'})).value ?? deviceUid.deviceId;\n\tsetDeviceId(deviceId);\n}\n\n(async () => {\n\tdi.value = await Device.getInfo();\n\n\tawait getDeviceName();\n\tawait getDeviceId();\n\n\tif (isPlatform('capacitor') && isPlatform('android')) {\n\t\tai.value = await android.getInfo();\n\t\tbi.value = await Device.getBatteryInfo();\n\t}\n\tawait android.addListener('appStateChange', (data) => {\n\t\tas.value = data;\n\t});\n\n\tconsole.log({\n\t\tappInfo: toRaw(appInfo.value),\n\t\tdeviceInfo: toRaw(deviceInfo.value),\n\t\tbatteryInfo: toRaw(batteryInfo.value)\n\t});\n\n})();\n"],"file":"assets/deviceInfo-CFM0PUX-.js"}