{"version":3,"file":"Carousel.vue_vue_type_script_setup_true_lang-C3mTNOIW.js","sources":["../../src/components/Carousel/Carousel.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {computed, onBeforeMount, PropType, ref} from 'vue';\nimport {useTranslation} from 'i18next-vue';\nimport {Swiper} from 'swiper';\nimport {Swiper as SwiperComponent} from 'swiper/vue';\nimport {register} from 'swiper/element/bundle';\n\nimport {mappedEntries} from '@/lib/stringArray';\nimport {Breakpoints, breakpoints, swiperConfig} from \"@/lib/swiper-config\";\n\nimport {showBackdrops} from '@/store/preferences';\n\nimport MoooomIcon from '@/components/Images/icons/MoooomIcon.vue';\nimport {isMobile} from '@/config/global';\n\nconst {t} = useTranslation();\n\nconst props = defineProps({\n    title: {\n        type: String,\n        required: false,\n    },\n    type: {\n        type: String as PropType<'poster' | 'backdrop'>,\n        required: false,\n        default: 'poster',\n    },\n    index: {\n        type: Number,\n        required: false,\n        default: 0,\n    },\n    limitCardCountBy: {\n        type: Number,\n        required: false,\n    },\n    moreLink: {\n        type: String,\n        required: false,\n    },\n    disableAutoAspect: {\n        type: Boolean,\n        required: false,\n        default: false,\n    }\n});\n\nconst backButtonEnabled = ref(false);\nconst nextButtonEnabled = ref(true);\nconst isLastSlide = ref(false);\nconst hasScroll = ref(false);\nconst swiper = ref<VueSwiperElement>();\n\nconst onProgress = (swiper: Swiper, progress: number) => {\n    swiper.progress = Math.floor(((progress * 100) + 1) / 100);\n\n    backButtonEnabled.value = !swiper.isBeginning;\n    nextButtonEnabled.value = swiper.progress < 1;\n    isLastSlide.value = swiper.progress === 1;\n    hasScroll.value = !swiper.isLocked;\n};\n\nconst onSlideChange = (swiper: Swiper) => {\n    swiper.progress = Math.floor(((swiper.progress * 100) + 1) / 100);\n\n    backButtonEnabled.value = !swiper.isBeginning;\n    nextButtonEnabled.value = swiper.progress < 1;\n    isLastSlide.value = swiper.progress === 1;\n    hasScroll.value = !swiper.isLocked;\n};\n\nconst afterInit = (swiper: Swiper) => {\n  setTimeout(() => {\n    swiper.el?.classList.remove('opacity-0');\n  }, 150 * props.index);\n};\n\nregister();\n\nconst reset = () => {\n    swiper.value?.$el?.swiper?.slideTo(0, 300);\n\n    hasScroll.value = true;\n};\n\nconst next = () => {\n    swiper.value?.$el?.swiper?.slideNext(300);\n};\n\nconst prev = () => {\n    swiper.value?.$el?.swiper?.slidePrev(300);\n};\n\nconst offsetBefore = window.innerWidth < 800\n    ? 24\n    : 20;\n\nconst bp = ref<Breakpoints>();\n\nconst backdropCards = computed(() => {\n    return showBackdrops && !props.disableAutoAspect\n})\n\nonBeforeMount(() => {\n    if (!props.limitCardCountBy) {\n        bp.value = breakpoints(backdropCards.value);\n        return;\n    }\n\n    const newBp: Breakpoints = <Breakpoints>{};\n\n    for (const [key, value] of mappedEntries(breakpoints(backdropCards.value))) {\n        newBp[key] = {\n          ...value,\n          slidesPerView: value.slidesPerView - props.limitCardCountBy,\n          slidesPerGroup: value.slidesPerGroup - props.limitCardCountBy\n        };\n    }\n\n    bp.value = newBp;\n});\n\n</script>\n\n<template>\n    <div\n        class=\"mb-1 flex w-auto flex-shrink-0 flex-grow-0 flex-col items-start justify-start gap-2 self-stretch text-left\"\n    >\n        <div class=\"flex w-available flex-1 flex-col gap-2\">\n            <div class=\"relative ml-2 flex flex-shrink-0 flex-grow-0 items-center self-stretch\">\n                <h3 v-if=\"title\" class=\"text-2xl font-bold text-auto-12 mr-2 ml-4 sm:ml-3 text-slate-dark-1 dark:text-slate-light-1\">\n                  {{ t(title ?? 'Continue watching') }}\n                </h3>\n                <slot v-else name=\"selector\"></slot>\n                <slot name=\"link\"></slot>\n                <div class=\"flex flex-shrink-0 flex-grow-0 items-start justify-start gap-2 pr-4 ml-auto\" v-if=\"!isMobile\">\n\n                    <button\n                        :class=\"`hidden sm:flex justify-center items-center p-1 rounded-lg bg-auto-alpha-7 active:scale-95 hover:bg-auto-alpha-9 transition-transform duration-300 ${backButtonEnabled ? '' : 'cursor-not-allowed opacity-50'}`\"\n                        :onclick=\"prev\" v-if=\"hasScroll\"\n                    >\n                        <MoooomIcon class=\"w-6\" icon=\"chevronLeft\"/>\n                    </button>\n\n                    <button\n                        :class=\"`hidden sm:flex justify-center items-center p-1 rounded-lg bg-auto-alpha-7 active:scale-95 hover:bg-auto-alpha-9 transition-transform duration-300 ${hasScroll ? '' : 'cursor-not-allowed opacity-50'}`\"\n                        :onclick=\"isLastSlide ? reset : next\" v-if=\"hasScroll\"\n                    >\n                        <MoooomIcon :class=\"`w-6 ${!nextButtonEnabled && isLastSlide ? 'opacity-0' : ''}`\"\n                                    icon=\"chevronRight\" v-if=\"hasScroll && !isLastSlide\"\n                        />\n                        <MoooomIcon :class=\"`w-6 ${ isLastSlide ? '' : 'opacity-0'}`\" icon=\"chevronLeftDouble\"\n                                    v-if=\"hasScroll && isLastSlide\"\n                        />\n                    </button>\n                </div>\n            </div>\n            <div class=\"gap-3 py-1 pr-0 w-available swiper\">\n                <SwiperComponent\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t v-bind=\"swiperConfig(backdropCards) as any\"\n                                 ref=\"swiper\"\n                                 :class=\"`swiper-${title?.replace(/[\\s&#]/gu, '-')} opacity-0`\"\n                                 :slidesOffsetBefore=\"offsetBefore\"\n                                 :breakpoints=\"bp\"\n                                 data-spatial-container=\"row\"\n                                 @progress=\"onProgress\"\n                                 @afterInit=\"afterInit\"\n                                 @slideChange=\"onSlideChange\">\n                    <slot/>\n                </SwiperComponent>\n            </div>\n        </div>\n    </div>\n</template>\n"],"names":["t","useTranslation","props","__props","backButtonEnabled","ref","nextButtonEnabled","isLastSlide","hasScroll","swiper","onProgress","progress","onSlideChange","afterInit","register","reset","_c","_b","_a","next","prev","offsetBefore","bp","backdropCards","computed","showBackdrops","onBeforeMount","breakpoints","newBp","key","value","mappedEntries"],"mappings":"ojCAeM,KAAA,CAAC,EAAAA,CAAC,EAAIC,EAAe,EAErBC,EAAQC,EA8BRC,EAAoBC,EAAI,EAAK,EAC7BC,EAAoBD,EAAI,EAAI,EAC5BE,EAAcF,EAAI,EAAK,EACvBG,EAAYH,EAAI,EAAK,EACrBI,EAASJ,EAAsB,EAE/BK,EAAa,CAACD,EAAgBE,IAAqB,CACrDF,EAAO,SAAW,KAAK,OAAQE,EAAW,IAAO,GAAK,GAAG,EAEvCP,EAAA,MAAQ,CAACK,EAAO,YAChBH,EAAA,MAAQG,EAAO,SAAW,EAChCF,EAAA,MAAQE,EAAO,WAAa,EAC9BD,EAAA,MAAQ,CAACC,EAAO,QAC9B,EAEMG,EAAiBH,GAAmB,CACtCA,EAAO,SAAW,KAAK,OAAQA,EAAO,SAAW,IAAO,GAAK,GAAG,EAE9CL,EAAA,MAAQ,CAACK,EAAO,YAChBH,EAAA,MAAQG,EAAO,SAAW,EAChCF,EAAA,MAAQE,EAAO,WAAa,EAC9BD,EAAA,MAAQ,CAACC,EAAO,QAC9B,EAEMI,EAAaJ,GAAmB,CACpC,WAAW,IAAM,QACfA,EAAAA,EAAO,KAAPA,MAAAA,EAAW,UAAU,OAAO,YAAW,EACtC,IAAMP,EAAM,KAAK,CACtB,EAESY,EAAA,EAET,MAAMC,EAAQ,IAAM,YAChBC,GAAAC,GAAAC,EAAAT,EAAO,QAAP,YAAAS,EAAc,MAAd,YAAAD,EAAmB,SAAnB,MAAAD,EAA2B,QAAQ,EAAG,KAEtCR,EAAU,MAAQ,EACtB,EAEMW,EAAO,IAAM,YACfH,GAAAC,GAAAC,EAAAT,EAAO,QAAP,YAAAS,EAAc,MAAd,YAAAD,EAAmB,SAAnB,MAAAD,EAA2B,UAAU,IACzC,EAEMI,EAAO,IAAM,YACfJ,GAAAC,GAAAC,EAAAT,EAAO,QAAP,YAAAS,EAAc,MAAd,YAAAD,EAAmB,SAAnB,MAAAD,EAA2B,UAAU,IACzC,EAEMK,EAAe,OAAO,WAAa,IACnC,GACA,GAEAC,EAAKjB,EAAiB,EAEtBkB,EAAgBC,EAAS,IACpBC,GAAiB,CAACvB,EAAM,iBAClC,EAED,OAAAwB,EAAc,IAAM,CACZ,GAAA,CAACxB,EAAM,iBAAkB,CACtBoB,EAAA,MAAQK,EAAYJ,EAAc,KAAK,EAC1C,MAAA,CAGJ,MAAMK,EAAkC,CAAC,EAE9B,SAAA,CAACC,EAAKC,CAAK,IAAKC,EAAcJ,EAAYJ,EAAc,KAAK,CAAC,EACrEK,EAAMC,CAAG,EAAI,CACX,GAAGC,EACH,cAAeA,EAAM,cAAgB5B,EAAM,iBAC3C,eAAgB4B,EAAM,eAAiB5B,EAAM,gBAC/C,EAGJoB,EAAG,MAAQM,CAAA,CACd"}