{"version":3,"file":"Desktop-CVa31a9X.js","sources":["../../src/views/Dashboard/System/Libraries/Desktop.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { IonPage, IonContent } from '@ionic/vue';\n\nimport type { LibrariesResponse, StatusResponse } from '@/types/api/base/library';\nimport type { Library } from '@/types/api/dashboard/server';\n\nimport { queryClient } from '@/config/tanstack-query';\nimport serverClient from '@/lib/clients/serverClient';\nimport useServerClient from '@/lib/clients/useServerClient';\nimport { currentServer } from '@/store/currentServer';\n\nimport DashboardLayout from '@/Layout/Desktop/DashboardLayout.vue';\nimport LibraryCard from './components/LibraryCard.vue';\n\nconst { data: libraries, error } = useServerClient<LibrariesResponse[]>({\n  path: 'dashboard/libraries',\n  queryKey: ['dashboard', 'libraries', currentServer.value?.serverBaseUrl],\n});\n\nconst handleCreateLibrary = () => {\n  serverClient()\n    .post<StatusResponse<Library>>('dashboard/libraries')\n    .then(({ data }) => {\n      queryClient.invalidateQueries({\n        queryKey: ['dashboard', 'libraries', currentServer.value?.serverBaseUrl],\n      });\n    });\n};\n\nconst loadingRefresh = ref(false);\nconst handleRefresh = () => {\n  loadingRefresh.value = true;\n\n  serverClient()\n    .post<{\n      message: string,\n      status: string,\n      args: string[];\n    }>('dashboard/libraries/refresh')\n    .then(({ data }) => {\n      loadingRefresh.value = false;\n      // showNotification({\n      // \ttitle: translate(data.message, ...data.args),\n      // \ttype: data.status == 'ok'\n      // \t\t? TYPE.SUCCESS\n      // \t\t: TYPE.ERROR,\n      // \tvisibleOnly: true,\n      // \tduration: 2000,\n      // });\n    })\n    .catch(() => {\n      loadingRefresh.value = false;\n      // showNotification({\n      // \ttitle: translate('An error occurred while rescanning the libraries'),\n      // \ttype: TYPE.ERROR,\n      // \tvisibleOnly: true,\n      // \tduration: 2000,\n      // });\n    });\n};\n\nconst loadingRescan = ref(false);\nconst handleRescan = () => {\n  loadingRescan.value = true;\n\n  serverClient()\n    .post<{\n      message: string,\n      status: string,\n      args: string[];\n    }>('dashboard/libraries/rescan')\n    .then(({ data }) => {\n      loadingRescan.value = false;\n      // showNotification({\n      // \ttitle: translate(data.message, ...data.args),\n      // \ttype: data.status == 'ok'\n      // \t\t? TYPE.SUCCESS\n      // \t\t: TYPE.ERROR,\n      // \tvisibleOnly: true,\n      // \tduration: 2000,\n      // });\n    })\n    .catch(() => {\n      loadingRescan.value = false;\n      // showNotification({\n      // \ttitle: translate('An error occurred while rescanning the libraries'),\n      // \ttype: TYPE.ERROR,\n      // \tvisibleOnly: true,\n      // \tduration: 2000,\n      // });\n    });\n};\n\n</script>\n\n<template>\n  <ion-page>\n    <ion-content :fullscreen=\"true\">\n      <DashboardLayout :error=\"error\" :gridStyle=\"1\" title=\"Libraries\"\n        description=\"Manage your media libraries and their content here.\">\n        <template v-slot:cta>\n          <Button id=\"newLibrary\" color=\"theme\" startIcon=\"folderAdd\" @click=\"handleCreateLibrary\">\n            {{ $t('New library') }}\n          </Button>\n        </template>\n\n        <template v-for=\"profile in libraries ?? []\" :key=\"profile.id\">\n          <LibraryCard :data=\"profile\" />\n        </template>\n\n        <template v-slot:actions>\n\n          <Button type=\"button\" id=\"refresh\" variant=\"text\" startIcon=\"folderSwap\" :disabled=\"loadingRefresh\"\n            :class=\"loadingRefresh ? 'first:children:animate-spin cursor-not-allowed' : ''\" @click=\"handleRefresh\">\n            {{ $t('Refresh all libraries') }}\n          </Button>\n          <Button type=\"button\" id=\"rescan\" variant=\"text\" startIcon=\"folderSwap\" :disabled=\"loadingRefresh\"\n            :class=\"loadingRefresh ? 'first:children:animate-spin cursor-not-allowed' : ''\" @click=\"handleRescan\">\n            {{ $t('Rescan all libraries') }}\n          </Button>\n        </template>\n\n      </DashboardLayout>\n    </ion-content>\n  </ion-page>\n</template>\n"],"names":["libraries","error","useServerClient","_a","currentServer","handleCreateLibrary","serverClient","data","queryClient","loadingRefresh","ref","handleRefresh","loadingRescan","handleRescan"],"mappings":"q5CAeA,KAAM,CAAE,KAAMA,EAAW,MAAAC,CAAA,EAAUC,EAAqC,CACtE,KAAM,sBACN,SAAU,CAAC,YAAa,aAAaC,EAAAC,EAAc,QAAd,YAAAD,EAAqB,aAAa,CAAA,CACxE,EAEKE,EAAsB,IAAM,CACnBC,EAAA,EACV,KAA8B,qBAAqB,EACnD,KAAK,CAAC,CAAE,KAAAC,KAAW,OAClBC,EAAY,kBAAkB,CAC5B,SAAU,CAAC,YAAa,aAAaL,EAAAC,EAAc,QAAd,YAAAD,EAAqB,aAAa,CAAA,CACxE,CAAA,CACF,CACL,EAEMM,EAAiBC,EAAI,EAAK,EAC1BC,EAAgB,IAAM,CAC1BF,EAAe,MAAQ,GAEVH,EAAA,EACV,KAIE,6BAA6B,EAC/B,KAAK,CAAC,CAAE,KAAAC,KAAW,CAClBE,EAAe,MAAQ,EAAA,CASxB,EACA,MAAM,IAAM,CACXA,EAAe,MAAQ,EAAA,CAOxB,CACL,EAEMG,EAAgBF,EAAI,EAAK,EACzBG,EAAe,IAAM,CACzBD,EAAc,MAAQ,GAETN,EAAA,EACV,KAIE,4BAA4B,EAC9B,KAAK,CAAC,CAAE,KAAAC,KAAW,CAClBK,EAAc,MAAQ,EAAA,CASvB,EACA,MAAM,IAAM,CACXA,EAAc,MAAQ,EAAA,CAOvB,CACL"}