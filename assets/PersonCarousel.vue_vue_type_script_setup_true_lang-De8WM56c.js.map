{"version":3,"file":"PersonCarousel.vue_vue_type_script_setup_true_lang-De8WM56c.js","sources":["../../src/components/Cards/ImageCard.vue","../../src/components/Carousel/ImageCarousel.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {type PropType, ref} from 'vue';\n\nimport type {MediaItem} from '@/types/api/base/info';\n\nimport {scrollIntoView} from '@/lib/utils';\nimport {pickPaletteColor} from '@/lib/colorHelper';\n\nimport TMDBImage from '@/components/Images/TMDBImage.vue';\n\nconst props = defineProps({\n  data: {\n    type: Object as PropType<MediaItem> | undefined,\n    required: true,\n  },\n  aspect: {\n    type: String as PropType<'poster' | 'backdrop'>,\n    required: false,\n    default: 'poster',\n  },\n  setData: {\n    type: Function as PropType<(data: MediaItem) => void>,\n    required: true,\n  },\n  limitCardCountBy: {\n    type: Number,\n    required: false,\n  },\n});\n\nconst ringColor = ref(pickPaletteColor(props.data?.color_palette?.image)\n    ?.replace('rgb(', '')\n    .replace(')', '')\n    .replace(/,/gu, ' ') ?? 'var(--color-primary)');\n\n\n</script>\n\n<template>\n  <button v-if=\"data\"\n          :onfocus=\"scrollIntoView\"\n          @click=\"setData(data)\"\n          :style=\"`--color-focus: ${ringColor};`\"\n          data-card=\"true\"\n          class=\"frosting border-0 border-[rgb(var(--color-focus))] flex flex-col h-auto items-center focus-shift focus-outline transition-all duration-300 relative !rounded-lg select-none shadow-[0px_0px_0_1px_rgb(var(--color-focus,var(--color-theme-6))/70%)] w-full z-0 bg-auto-1/8\">\n            <span class=\"relative h-auto w-full cursor-pointer overflow-clip rounded-lg\"\n                  :class=\"aspect == 'poster' ? ' aspect-poster' : 'aspect-backdrop'\">\n                <TMDBImage className=\"inset-0 h-full w-full overflow-clip rounded-lg\"\n                           class=\"!relative\"\n                           :aspect=\"aspect\"\n                           :path=\"data?.src\"\n                           type=\"image\"\n                           :title=\"data?.name\"\n                           :colorPalette=\"data?.color_palette?.image\"\n                           :size=\"aspect == 'poster' ? 162 : 660\"/>\n            </span>\n  </button>\n</template>\n","<script setup lang=\"ts\">\nimport {computed, onMounted, PropType, ref, toRaw, watch} from 'vue';\nimport {SwiperSlide} from 'swiper/vue';\nimport {createGesture, Gesture, GestureDetail} from '@ionic/vue';\nimport {useEventListener} from '@vueuse/core';\n\nimport type {MediaItem} from '@/types/api/base/info';\nimport type {ColorPalettes} from '@/types/api/shared';\n\nimport {\n  currentType,\n  newIndex,\n  setCurrentType,\n  setImageModalData,\n  setImageModalOpen, setNewIndex,\n  setTemp,\n  showImageModal, temp,\n} from '@/store/imageModal';\nimport {colorPalette} from '@/store/ui';\n\nimport Carousel from '@/components/Carousel/Carousel.vue';\nimport ImageCard from '@/components/Cards/ImageCard.vue';\n\nconst props = defineProps({\n  data: {\n    type: Array as PropType<Array<MediaItem>> | undefined,\n    required: true,\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n  type: {\n    type: String as PropType<'poster' | 'backdrop'>,\n    required: false,\n    default: 'poster',\n  },\n});\n\nconst isPlaying = ref(false);\nconst gesture = ref<Gesture>();\n\nconst setData = (data: MediaItem) => {\n\n  setImageModalData({\n    ...data,\n    color_palette: toRaw(data.color_palette)\n        ? toRaw(data.color_palette)\n        : {image: toRaw(colorPalette.value)} as ColorPalettes,\n    aspectRatio: props.type == 'poster'\n        ? '2/3'\n        : '16/9',\n  });\n\n  setTemp({\n    type: props.type,\n    index: props.data.indexOf(data),\n  });\n\n  setCurrentType(props.type);\n\n  setImageModalOpen(true);\n};\n\nconst handleLeft = () => {\n  const item = props.data[newIndex.value - 1];\n  if (!item) return;\n\n  setTemp({\n    index: newIndex.value - 1,\n    type: temp.value.type,\n  });\n  setNewIndex(newIndex.value - 1);\n\n  setImageModalData({\n    ...item,\n    color_palette: item.color_palette\n        ? toRaw(item.color_palette)\n        : {image: toRaw(colorPalette.value)} as ColorPalettes,\n    aspectRatio: props.type == 'poster'\n        ? '2/3'\n        : '16/9',\n  });\n};\n\nconst handleRight = () => {\n  const item = props.data[newIndex.value + 1];\n  if (!item) return;\n\n  setTemp({\n    index: newIndex.value + 1,\n    type: temp.value.type,\n  });\n\n  setNewIndex(newIndex.value + 1);\n\n  setImageModalData({\n    ...item,\n    color_palette: item.color_palette\n        ? toRaw(item.color_palette)\n        : {image: toRaw(colorPalette.value)} as ColorPalettes,\n    aspectRatio: props.type == 'poster'\n        ? '2/3'\n        : '16/9',\n  });\n};\n\nconst timeout = ref<NodeJS.Timeout>();\nconst handlePlay = () => {\n  clearInterval(timeout.value);\n\n  timeout.value = setInterval(() => {\n    const item = props.data[newIndex.value + 1];\n\n    if (!item) {\n      setTemp({\n        index: 0,\n        type: props.type,\n      });\n    }\n\n    handleRight();\n  }, 15 * 1000);\n};\n\nconst handleStop = () => {\n  clearInterval(timeout.value);\n};\n\nwatch(showImageModal, value => {\n  if (!value) {\n    handleStop();\n    gesture.value?.destroy();\n  } else {\n    gesture.value?.enable();\n  }\n});\n\nuseEventListener(window, 'keyup', (event) => {\n  if (document.activeElement!.nodeName == 'TEXTAREA') return;\n  if (document.activeElement!.nodeName == 'INPUT') return;\n  if (event.key == 'Enter' && showImageModal.value) return;\n\n  if (currentType.value != props.type) return;\n\n  if (event.key == 'ArrowLeft') {\n    handleStop();\n    handleLeft();\n  }\n  if (event.key == 'ArrowRight') {\n    handleStop();\n    handleRight();\n  }\n\n  if (event.key == ' ') {\n    if (isPlaying.value) {\n      handleStop();\n    } else {\n      handlePlay();\n    }\n  }\n\n  if (event.key == 'Escape' || event.key == 'Backspace') {\n    setImageModalData(null);\n    setImageModalOpen(false);\n    handleStop();\n  }\n});\n\nonMounted(() => {\n  gesture.value = createGesture({\n    el: document.querySelector<HTMLDivElement>('#imageModal')!,\n    onStart: () => onStart(),\n    onMove: (detail) => onMove(detail),\n    onEnd: () => onEnd(),\n    gestureName: 'swipe',\n  });\n});\n\nconst onMove = ({velocityX}: GestureDetail) => {\n  if (currentType.value != props.type) return;\n\n  if  (velocityX > 0) {\n    handleLeft();\n  } else {\n    handleRight();\n  }\n};\n\nconst onStart = () => {\n};\n\nconst onEnd = () => {\n};\n\n</script>\n\n<template>\n  <Carousel :title=\"title + 's'\" :type=\"type\" :disableAutoAspect=\"type == 'poster'\">\n    <swiper-slide v-for=\"item in data\" :key=\"item.id\" class=\"flex\">\n      <ImageCard :data=\"item\" :aspect=\"type\" :setData=\"setData\"/>\n    </swiper-slide>\n  </Carousel>\n</template>\n"],"names":["ringColor","ref","_c","pickPaletteColor","_b","_a","__props","props","isPlaying","gesture","setData","data","setImageModalData","toRaw","colorPalette","setTemp","setCurrentType","setImageModalOpen","handleLeft","item","newIndex","temp","setNewIndex","handleRight","timeout","handlePlay","handleStop","watch","showImageModal","value","useEventListener","event","currentType","onMounted","createGesture","onStart","detail","onMove","onEnd","velocityX"],"mappings":"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"}