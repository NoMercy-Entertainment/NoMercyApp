{"version":3,"file":"Desktop-CSA8W_k1.js","sources":["../../src/views/Dashboard/System/General/Desktop.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onMounted, ref, Ref, toRaw, watch } from 'vue';\nimport { IonContent, IonPage } from '@ionic/vue';\nimport { useQueryClient } from '@tanstack/vue-query';\nimport { useDebounce } from '@vueuse/core';\nimport { InputNumber, InputText } from 'primevue';\n\nimport type { ConfigurationResponse } from '@/types/api/dashboard/server';\n\nimport serverClient from '@/lib/clients/serverClient';\n\nimport DashboardLayout from '@/Layout/Desktop/DashboardLayout.vue';\nimport useServerClient from '@/lib/clients/useServerClient';\nimport { Nullable } from 'vitest';\nimport Toggle from \"@/components/Forms/Toggle.vue\";\nimport { currentServer } from \"@/store/currentServer\";\nimport MoooomIcon from \"@/components/Images/icons/MoooomIcon.vue\";\n\nconst { data: configuration, refetch: invalidate, error } = useServerClient<ConfigurationResponse>({\n  path: '/dashboard/configuration',\n});\n\nconst ready = ref<boolean>(false);\nconst newConfig = ref<ConfigurationResponse>(configuration.value ?? <ConfigurationResponse>{});\n\nconst updateState = <T>(key: keyof T, value: any) => {\n  if (!configuration.value) return;\n\n  if (toRaw(configuration.value[key as keyof ConfigurationResponse]) == value) {\n    delete newConfig.value[key as keyof ConfigurationResponse];\n    newConfig.value = {\n      ...newConfig.value,\n    };\n    return;\n  }\n  newConfig.value = {\n    ...newConfig.value,\n    [key]: value ?? undefined,\n  };\n};\n\nwatch(configuration, (value) => {\n  if (!value) return;\n  newConfig.value = <ConfigurationResponse>{};\n\n  server_name.value = value?.server_name;\n  external_server_port.value = value?.external_server_port;\n  internal_server_port.value = value?.internal_server_port;\n  queue_workers.value = value?.queue_workers;\n  cron_workers.value = value?.cron_workers;\n  data_workers.value = value?.data_workers;\n  request_workers.value = value?.request_workers;\n  encoder_workers.value = value?.encoder_workers;\n  image_workers.value = value?.image_workers;\n  swagger.value = value?.swagger;\n  ready.value = true;\n});\n\nonMounted(() => {\n  if (!configuration.value) return;\n  newConfig.value = <ConfigurationResponse>{};\n\n  server_name.value = configuration.value?.server_name;\n  external_server_port.value = configuration.value?.external_server_port;\n  internal_server_port.value = configuration.value?.internal_server_port;\n  queue_workers.value = configuration.value?.queue_workers;\n  cron_workers.value = configuration.value?.cron_workers;\n  data_workers.value = configuration.value?.data_workers;\n  request_workers.value = configuration.value?.request_workers;\n  encoder_workers.value = configuration.value?.encoder_workers;\n  image_workers.value = configuration.value?.image_workers;\n  swagger.value = configuration.value?.swagger;\n  ready.value = true;\n});\n\nconst server_name = ref<string>(configuration.value?.server_name ?? '');\nwatch(server_name, (value) => {\n  updateState('server_name', value);\n});\n\nconst external_server_port = ref<number>(configuration.value?.external_server_port ?? 0);\nwatch(external_server_port, (value) => {\n  updateState('external_server_port', value);\n});\n\nconst internal_server_port = ref<number>(configuration.value?.internal_server_port ?? 0);\nwatch(internal_server_port, (value) => {\n  updateState('internal_server_port', value);\n});\n\nconst queue_workers = ref<number>(configuration.value?.queue_workers ?? 0);\nwatch(queue_workers, (value) => {\n  updateState('queue_workers', value);\n});\n\nconst cron_workers = ref<number>(configuration.value?.cron_workers ?? 0);\nwatch(cron_workers, (value) => {\n  updateState('cron_workers', value);\n});\n\nconst data_workers = ref<number>(configuration.value?.data_workers ?? 0);\nwatch(data_workers, (value) => {\n  updateState('data_workers', value);\n});\n\nconst request_workers = ref<number>(configuration.value?.request_workers ?? 0);\nwatch(request_workers, (value) => {\n  updateState('request_workers', value);\n});\n\nconst image_workers = ref<number>(configuration.value?.image_workers ?? 0);\nwatch(image_workers, (value) => {\n  updateState('image_workers', value);\n});\n\nconst encoder_workers = ref<number>(configuration.value?.encoder_workers ?? 0);\nwatch(encoder_workers, (value) => {\n  updateState('encoder_workers', value);\n});\n\nconst swagger = ref<boolean>(configuration.value?.swagger ?? false);\nwatch(swagger, (value) => {\n  updateState('swagger', value);\n});\n\nconst hasChanges = computed<boolean>(() => (Object.keys(newConfig.value).length > 0));\n\nwatch(newConfig, (value) => {\n  console.log(value);\n});\n\nconst query = useQueryClient();\n\nconst save = () => {\n  console.raw(newConfig.value);\n  serverClient()\n    .patch(`/dashboard/configuration`, newConfig.value)\n    .then(() => {\n      invalidate();\n      query.invalidateQueries({ queryKey: ['serverInfo'] });\n    });\n};\n\n</script>\n\n<template>\n  <ion-page>\n    <ion-content :fullscreen=\"true\">\n      <DashboardLayout :error=\"error\" :gridStyle=\"2\" title=\"General\" description=\"\">\n        <template v-slot:cta>\n\n        </template>\n\n        <div v-if=\"ready\" class=\"col-span-2 col-start-1 2xl:col-start-1\">\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"server_name\">Server name</label>\n            <InputText id=\"server_name\" v-model=\"server_name\" class=\"mb-4\" />\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"internal_server_port\">Secure internal port</label>\n            <InputNumber id=\"internal_server_port\" v-model=\"internal_server_port\" class=\"mb-4\" :useGrouping=\"false\"\n              showButtons :min=\"2000\" />\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"external_server_port\">Secure external port</label>\n            <InputNumber id=\"external_server_port\" v-model=\"external_server_port\" class=\"mb-4\" :useGrouping=\"false\"\n              showButtons :min=\"2000\" />\n          </div>\n        </div>\n\n        <div v-if=\"ready\" class=\"col-span-2 col-start-1 2xl:col-start-3\">\n          <!--          <div class=\"flex flex-col gap-2\">-->\n          <!--            <label for=\"cron_workers\">Cron workers</label>-->\n          <!--            <InputNumber-->\n          <!--                id=\"cron_workers\" v-model=\"cron_workers\" class=\"mb-4\"-->\n          <!--                 :useGrouping=\"false\" showButtons :min=\"0\"/>-->\n          <!--          </div>-->\n          <!--          <div class=\"flex flex-col gap-2\">-->\n          <!--            <label for=\"data_workers\">Data workers</label>-->\n          <!--            <InputNumber-->\n          <!--                id=\"data_workers\" v-model=\"data_workers\" class=\"mb-4\"-->\n          <!--                 :useGrouping=\"false\" showButtons :min=\"0\"/>-->\n          <!--          </div>-->\n          <!--          <div class=\"flex flex-col gap-2\">-->\n          <!--            <label for=\"request_workers\">Request workers</label>-->\n          <!--            <InputNumber id=\"request_workers\" v-model=\"request_workers\" class=\"mb-4\"-->\n          <!--                          :useGrouping=\"false\" showButtons :min=\"0\"/>-->\n          <!--          </div>-->\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"encoder_workers\">Encoder workers</label>\n            <InputNumber id=\"encoder_workers\" v-model=\"encoder_workers\" class=\"mb-4\" :useGrouping=\"false\" showButtons\n              :min=\"0\" />\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"image_workers\">Image workers</label>\n            <InputNumber id=\"image_workers\" v-model=\"image_workers\" class=\"mb-4\" :useGrouping=\"false\" showButtons\n              :min=\"0\" />\n          </div>\n          <div class=\"flex flex-col gap-2\">\n            <label for=\"queue_workers\">Queue workers</label>\n            <InputNumber id=\"queue_workers\" v-model=\"queue_workers\" class=\"mb-4\" :useGrouping=\"false\" showButtons\n              :min=\"0\" />\n          </div>\n        </div>\n\n        <div v-if=\"ready\" class=\"col-span-2 col-start-1 2xl:col-start-5\">\n          <div class=\"flex flex-col gap-2\">\n            <span class=\"flex gap-4\">\n              <label for=\"swagger\">Open API / Swagger Ui</label>\n              <a v-if=\"swagger && currentServer?.serverBaseUrl\" target=\"_blank\" :href=\"currentServer?.serverBaseUrl\"\n                class=\"flex gap-1 items-center underline underline-offset-4 h-4 text-sm\">\n                <span>{{ $t('Open') }}</span>\n                <MoooomIcon icon=\"shareSquare\" className=\"size-4\" color=\"theme\" />\n              </a>\n            </span>\n            <Toggle :model-value=\"swagger\" @update:model-value=\"swagger = $event\" />\n          </div>\n        </div>\n\n        <template v-slot:actions>\n\n          <Button type=\"submit\" id=\"save\" :disabled=\"!hasChanges\" color=\"theme\" class=\"ml-auto\" form=\"myForm\"\n            @click=\"save()\">\n            {{ $t('Save') }}\n          </button>\n        </template>\n\n      </DashboardLayout>\n    </ion-content>\n  </ion-page>\n</template>\n"],"names":["configuration","invalidate","error","useServerClient","ready","ref","newConfig","updateState","key","value","toRaw","watch","server_name","external_server_port","internal_server_port","queue_workers","cron_workers","data_workers","request_workers","encoder_workers","image_workers","swagger","onMounted","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","hasChanges","computed","query","useQueryClient","save","serverClient"],"mappings":"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"}