var u=Object.defineProperty;var y=(r,a,e)=>a in r?u(r,a,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[a]=e;var n=(r,a,e)=>y(r,typeof a!="symbol"?a+"":a,e);import{ab as c,R as g}from"./vue-ionic-Cv2or74p.js";import{P as d}from"./video-player-0s44mC2a.js";import{bJ as h,bK as m}from"./index-BmyAN7Ab.js";class P extends d{constructor(){super(...arguments);n(this,"player",{});n(this,"route",{})}async initialize(e){this.player=e}use(){this.player.on("lastTimeTrigger",this.lastTimeTrigger.bind(this)),this.player.on("back",this.ended.bind(this)),this.player.on("ended",this.ended.bind(this)),this.player.on("finished",this.ended.bind(this)),this.route=c()}dispose(){this.player.off("lastTimeTrigger",this.lastTimeTrigger.bind(this)),this.player.off("back",this.ended.bind(this)),this.player.off("ended",this.ended.bind(this)),this.player.off("finished",this.ended.bind(this))}lastTimeTrigger(){var i;const e=this.episodeData(),t=h();(i=t==null?void 0:t.invoke)==null||i.call(t,"SetTime",e)}ended(){var t,i;const e=this.player.getCurrentTime()/this.player.getDuration()*100;if(this.player.isLastPlaylistItem()&&((t=this.player.playlistItem())==null?void 0:t.playlist_type)==="tv"&&e>=90){const s=h();s==null||s.invoke("RemoveWatched",this.episodeData()).then()}else if(this.player.isLastPlaylistItem()&&((i=this.player.playlistItem())==null?void 0:i.playlist_type)==="movie"&&e>=80){const s=h();s==null||s.invoke("RemoveWatched",this.episodeData()).then()}this.dispose(),this.player.dispose()}episodeData(){var o;const e=this.player.playlistItem();let t=(o=this.route)==null?void 0:o.path;t||(t=window.location.hash.replace("#","")),t||(t=location.pathname);const i=t==null?void 0:t.split("/");let s,p,l=e==null?void 0:e.tmdb_id;return i.at(-3)==="specials"?s=i.at(-2):i.at(-3)==="collection"&&(p=i.at(-2),l=e.id),{video_id:e==null?void 0:e.video_id,tmdb_id:l,playlist_type:i.at(-3),special_id:s,collection_id:p,video_type:e==null?void 0:e.video_type,time:Math.floor(this.player.getCurrentTime()||0)}}}class b extends d{constructor(){super(...arguments);n(this,"player",{});n(this,"chapterSkipPatterns",[/^OP$/ui,/^ED$/ui,/^PV$/ui,/^NCOP$/ui,/^NCED$/ui,/^CM$/ui,/^Preview$/ui,/^Next Episode Preview$/ui,/^Next Time Preview$/ui,/^Outro$/ui,/^Opening$/ui,/^Ending$/ui,/^Opening/ui,/^Ending/ui,/^Opening Credits$/ui,/^Ending Credits$/ui,/^Opening Theme$/ui,/^Ending Theme$/ui,/^Opening Song$/ui,/^Ending Song$/ui,/^Prologue$/ui,/^Epilogue$/ui,/^ED+Cast$/ui,/^Avant$/ui,/^Yokoku$/ui]);n(this,"lastChapter","")}initialize(e){this.player=e,this.player.options.chapterSkipPatterns&&(this.chapterSkipPatterns=this.player.options.chapterSkipPatterns)}use(){this.player.on("time",this.checkChapters.bind(this))}dispose(){this.player.off("time",this.checkChapters.bind(this))}checkChapters(){if(!this.player.chapters||!this.player.chapters.cues||this.player.chapters.cues.length===0)return;if(this.player.chapters.errors.length>0){console.error("Error parsing chapters:",this.player.chapters.errors);return}const e=this.player.getVideoElement().currentTime;let t=this.getCurrentChapter(e);if(t)for(;this.lastChapter!=t.text&&this.shouldSkipChapter(t.text);){this.lastChapter=t.text;const i=this.getNextChapter(t.endTime);if(!i){this.player.next(),this.lastChapter="";return}t=i,this.player.seek(t.startTime)}}isFirstOrLastEpisodeOfSeason(){const e=this.player.playlistItem();if(e.episode==1)return!0;const t=this.player.getPlaylist().map(p=>g(p)),s=m(t,"season")[e.season];return s?s.at(-1)==e:!1}shouldSkipChapter(e){return this.player.getCurrentTime()<this.player.getDuration()/2&&this.player.getPlaylistIndex()==0||this.player.getCurrentTime()>this.player.getDuration()/2&&this.player.isLastPlaylistItem()||this.isFirstOrLastEpisodeOfSeason()?!1:this.chapterSkipPatterns.some(t=>t.test(e))}getCurrentChapter(e){return this.player.chapters.cues.find(t=>e>=t.startTime&&e<=t.endTime)}getNextChapter(e){return this.player.chapters.cues.find(t=>t.startTime>=e)}}export{b as A,P as S};
