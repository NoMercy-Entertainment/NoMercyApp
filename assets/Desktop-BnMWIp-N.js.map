{"version":3,"file":"Desktop-BnMWIp-N.js","sources":["../../src/views/Music/Start/Desktop.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { IonContent, IonPage } from '@ionic/vue';\n\nimport type { HomeDataItem } from '@/types/api/music';\nimport type { Component } from '@/lib/routerHelper';\n\nimport useServerClient from '@/lib/clients/useServerClient';\n\nimport ScrollContainer from '@/Layout/Desktop/components/ScrollContainer.vue';\nimport { onMounted } from 'vue';\nimport {setBackground, setColorPalette} from '@/store/ui';\nimport NotFound from \"@/Layout/Desktop/components/NotFound.vue\";\n\nconst { data, isError } = useServerClient<Component<HomeDataItem>[]>({\n  queryKey: ['music', 'home']\n});\n\nonMounted(() => {\n  setColorPalette(null);\n  setBackground(null);\n});\n\n</script>\n\n<template>\n  <ion-page>\n    <ion-content :fullscreen=\"true\">\n      <NotFound v-if=\"isError && !data\" />\n      <ScrollContainer v-else :autoHide=\"true\" :static=\"true\">\n        <template v-if=\"data\">\n          <component v-for=\"(render, index) in data ?? []\" :index=\"index\" :key=\"render.id\" :is=\"render.component\"\n            v-bind=\"render.props\" />\n        </template>\n      </ScrollContainer>\n    </ion-content>\n  </ion-page>\n</template>\n"],"names":["data","isError","useServerClient","onMounted","setColorPalette","setBackground"],"mappings":"oSAaA,KAAM,CAAE,KAAAA,EAAM,QAAAC,CAAQ,EAAIC,EAA2C,CACnE,SAAU,CAAC,QAAS,MAAM,CAAA,CAC3B,EAED,OAAAC,EAAU,IAAM,CACdC,EAAgB,IAAI,EACpBC,EAAc,IAAI,CAAA,CACnB"}