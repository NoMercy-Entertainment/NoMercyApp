import{Oi as t,Ps as f,Ss as g,d as S,gc as p,oa as u,u as r,wc as l}from"./index-DEPYcIyG.js";import{t as i}from"./HubConnection-klX5ssCm.js";g();var n=l();const C=f(()=>n.value?.connection),a=l(!1);function o(){a.value=!0,console.log("Connected to Cast SignalR"),document.dispatchEvent(new Event("castHub-connected")),n.value?.connection&&S(n.value?.connection)}function c(e){a.value=!1,console.log("Disconnected from Cast SignalR",e),document.dispatchEvent(new Event("castHub-disconnected"))}function v(e){a.value=!1,console.error("Cast SignalR Error:",e),document.dispatchEvent(new Event("castHub-error"))}p(t,async e=>{const s=u.value?.accessToken;e&&a.value&&(n.value?.connection?.stop().then(),n.value?.dispose(),n.value=new r(t.value.serverBaseUrl,s,"castHub"),n.value?.connection?.on("connected",o),n.value?.connection?.on("disconnected",c),await d().catch(v))});async function d(){if(n.value?.connection?.state!==i.Connected)return n.value?.connection?.start().then(o)}async function k(){try{return n.value?.connection?.state===i.Disconnected?void 0:n.value?.connection?.stop().then(c).catch(c)}catch(e){console.error("Error stopping Cast SignalR:",e),c()}}async function w(){const e=u.value?.accessToken;t.value&&(!n.value?.connection?.state||n.value?.connection?.state===i.Disconnected)&&(n.value=new r(t.value.serverBaseUrl,e,"castHub"),n.value?.connection?.on("connected",o),n.value?.connection?.on("disconnected",c),await d().catch(v),n.value?.connection?.onreconnecting(s=>{console.log("SignalR Disconnected.",s?.message),c()}),n.value?.connection?.onreconnected(()=>{console.log("SignalR Reconnected."),o()}))}export{k as i,C as n,w as r,a as t};
