{"version":3,"file":"Edit-DJ3mwrNd.js","sources":["../../src/views/Dashboard/System/EncoderProfiles/components/DeleteEncoderProfileModal.vue","../../src/views/Dashboard/System/EncoderProfiles/Edit.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { PropType } from 'vue';\nimport { useTranslation } from 'i18next-vue';\n\nimport { useQueryClient } from '@tanstack/vue-query';\n\nimport serverClient from '@/lib/clients/serverClient';\n\nconst props = defineProps({\n  open: {\n    type: Boolean,\n    required: true,\n  },\n  close: {\n    type: Function as PropType<() => any>,\n    required: true,\n  },\n  id: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  noRedirect: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst { t } = useTranslation();\nconst query = useQueryClient();\n\nconst handleDelete = () => {\n  serverClient()\n    .delete(`dashboard/encoderprofiles/${props.id}`)\n    .then(({ data }) => {\n\n      // showNotification({\n      // \ttitle: translate(data.message, ...data.args ?? []),\n      // \ttype: data.status == 'ok'\n      // \t\t? TYPE.SUCCESS\n      // \t\t: TYPE.ERROR,\n      // \tvisibleOnly: true,\n      // \tduration: 2000,\n      // });\n      query.invalidateQueries({ queryKey: ['dashboard', 'encoderProfiles'] });\n\n      if (props.noRedirect) return;\n      window.history.back();\n    });\n\n  props.close();\n};\n\n</script>\n<template>\n  <Modal :close=\"close\" :open=\"open\" maxWidth=\"max-w-xl\" :params=\"{ profile: props.name }\"\n    :title=\"`Delete encoder profile {{profile}}`\">\n\n    <div class=\"my-6 text-sm text-auto-10\">\n      {{ t('Are you sure you want to delete this encoder profile?') }}\n    </div>\n\n    <template v-slot:actions>\n      <Button id=\"yes\" :onclick=\"handleDelete\" endIcon=\"trash\" color=\"red\" type=\"button\" variant=\"contained\">\n        {{ t('Delete') }}\n      </button>\n      <Button id=\"no\" :onClick=\"close\" type=\"button\" color=\"text-auto-alpha-11\" variant=\"text\">\n        {{ t('Cancel') }}\n      </button>\n    </template>\n  </Modal>\n</template>\n","<script setup lang=\"ts\">\nimport { onMounted, ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\n\nimport type { EncoderProfile } from '@/types/api/base/library';\nimport type {\n  AvailableAudioCodec,\n  AvailableSubtitleCodec,\n  AvailableVideoCodec,\n  Container,\n  LabelValue\n} from '@/types/api/dashboard/server';\n\nimport useServerClient from '@/lib/clients/useServerClient';\n\nimport DeleteEncoderProfileModal from './components/DeleteEncoderProfileModal.vue';\nimport DashboardLayout from '@/Layout/Desktop/DashboardLayout.vue';\nimport { Nullable } from 'vitest';\n\nconst route = useRoute();\n\nconst { data: encoderProfiles, error } = useServerClient<EncoderProfile[]>({\n  path: 'dashboard/encoderProfiles',\n  queryKey: ['dashboard', 'encoderProfiles'],\n});\n\nconst { data: videoContainers } = useServerClient<Container[]>({\n  path: 'dashboard/encoderProfiles/containers',\n  queryKey: ['dashboard', 'videoContainers'],\n});\n\nconst settings = ref<EncoderProfile>();\nwatch(encoderProfiles, (value) => {\n  if (!value) return;\n  settings.value = value.find(l => l.id == route.params.id);\n});\n\nonMounted(() => {\n  if (!encoderProfiles.value) return;\n  settings.value = encoderProfiles.value.find(l => l.id == route.params.id);\n});\n\nconst deleteConfirmOpen = ref(false);\nconst openDeleteConfirm = () => {\n  deleteConfirmOpen.value = true;\n};\nconst closeDeleteConfirm = () => {\n  deleteConfirmOpen.value = false;\n};\n\nconst handleCancel = () => {\n  window.history.back();\n};\n\nconst handleSave = () => {\n};\n\n// const submitHandler = (e: any) => {\n//   console.log(e);\n// };\n\nconst mediaTypes = ref([\n  { label: 'audio', value: 'audio' },\n  { label: 'video', value: 'video' },\n  { label: 'image', value: 'image' },\n]);\nconst name = ref(settings.value?.name);\nconst mediaType = ref<{ label: string, value: string } | undefined>(mediaTypes.value?.find(type => type.value === settings.value?.type));\nconst container = ref<Container | undefined>(videoContainers.value?.find(ec => ec.type == settings.value?.type));\n\nconst videoCodecs = ref<AvailableVideoCodec[]>([]);\nconst resolutions = ref<LabelValue[]>([]);\nconst colorSpaces = ref<LabelValue[]>([]);\nconst crfs = ref<Nullable<number>[]>([]);\nconst widths = ref<Nullable<number>[]>([]);\nconst tunes = ref<LabelValue[]>([]);\nconst profiles = ref<LabelValue[]>([]);\nconst presets = ref<LabelValue[]>([]);\nconst playlistNames = ref<Nullable<string>[]>([]);\nconst segmentNames = ref<Nullable<string>[]>([]);\nconst bitrates = ref<Nullable<number>[]>([]);\n\nconst audioCodecs = ref<AvailableAudioCodec[]>([]);\nconst allowedAudioLanguages = ref<LabelValue[][]>([]);\n\nconst subtitleCodecs = ref<AvailableSubtitleCodec[]>([]);\nconst allowedSubtitleLanguages = ref<LabelValue[][]>([]);\n\nconst addVideoProfile = () => {\n  videoCodecs.value.push(<AvailableVideoCodec>{});\n};\n\nconst addAudioProfile = () => {\n  audioCodecs.value.push(<AvailableAudioCodec>{});\n};\n\nconst addSubtitleProfile = () => {\n  subtitleCodecs.value.push(<AvailableSubtitleCodec>{});\n};\n\nconst deleteVideoProfile = (index: number) => {\n  videoCodecs.value.splice(index, 1);\n};\n\nconst deleteAudioProfile = (index: number) => {\n  audioCodecs.value.splice(index, 1);\n};\n\nconst deleteSubtitleProfile = (index: number) => {\n  subtitleCodecs.value.splice(index, 1);\n};\n\nonMounted(() => {\n  mediaType.value = mediaTypes.value.find(type => type.value === settings.value?.type);\n  container.value = videoContainers.value?.find(ec => ec.type == settings.value?.type);\n});\n\nwatch(settings, (value) => {\n  if (!value) return;\n  name.value = value.name;\n});\n\nwatch(videoContainers, (value) => {\n  if (!value) return;\n  container.value = value.find(ec => ec.value == settings.value!.container);\n});\n\nconst setValues = (value?: Container) => {\n  if (!value) return;\n  console.raw('container', value, mediaTypes.value);\n\n  mediaType.value = mediaTypes.value.find(type => type.value === value.type);\n\n  // @ts-ignore\n  videoCodecs.value = settings.value!.videoProfiles\n    ?.map(vp => value.available_video_codecs.find(codec => codec.value == vp.codec)) ?? [];\n\n  // @ts-ignore\n  audioCodecs.value = settings.value!.audioProfiles\n    ?.map(ap => value.available_audio_codecs.find(codec => codec.value == ap.codec)) ?? [];\n\n  // @ts-ignore\n  subtitleCodecs.value = settings.value!.subtitleProfiles\n    ?.map(sp => value.available_subtitle_codecs.find(codec => codec.value == sp.codec)) ?? [];\n\n  // @ts-ignore\n  resolutions.value = settings.value!.videoProfiles\n    ?.map(vp => value.available_resolutions.find(res => res.width == vp.width)) ?? [];\n\n  // @ts-ignore\n  colorSpaces.value = settings.value.videoProfiles\n    .map(p => videoCodecs.value.find(vc => vc.value == p.codec)?.color_spaces.find(cs2 => cs2.value == p.colorSpace));\n\n  // @ts-ignore\n  tunes.value = settings.value!.videoProfiles\n    .map(p => videoCodecs.value.find(vc => vc.value == p.codec)?.tunes.find(t2 => t2.value == p.tune));\n\n  // @ts-ignore\n  profiles.value = settings.value!.videoProfiles\n    .map(p => videoCodecs.value.find(vc => vc.value == p.codec)?.profiles.find(p2 => p2.value == p.profile));\n\n  presets.value = settings.value!.videoProfiles\n    .map(p => videoCodecs.value.find(vc => vc.value == p.codec)?.presets.find(p2 => p2.value == p.preset));\n\n  console.log('presets', presets.value);\n\n  // @ts-ignore\n  allowedSubtitleLanguages.value = audioCodecs.value!.map(ac => ac?.available_languages ?? []);\n\n  // @ts-ignore\n  allowedAudioLanguages.value = subtitleCodecs.value!.map(sc => sc?.available_languages ?? []);\n\n  crfs.value = settings.value!.videoProfiles\n    ?.map(vp => vp.crf) ?? [];\n\n  bitrates.value = settings.value!.videoProfiles\n    ?.map(vp => vp.bitrate) ?? [];\n\n  playlistNames.value = settings.value!.videoProfiles\n    ?.map(vp => vp.playlistName) ?? [];\n\n  segmentNames.value = settings.value!.videoProfiles\n    ?.map(vp => vp.segmentName) ?? [];\n\n  widths.value = settings.value!.videoProfiles\n    ?.map(vp => vp.width) ?? [];\n\n};\n\nwatch(container, setValues);\n\nonMounted(() => {\n  setValues(container.value);\n\n  container.value = videoContainers.value?.find(ec => ec.value == settings.value!.container);\n});\n\nwatch(videoCodecs, value => {\n  if (!value) return;\n  console.log('videoCodecs', value);\n});\n\n</script>\n\n<template>\n  <DashboardLayout :gridStyle=\"4\" :error=\"error\" :title=\"`Encoder profile: {{name}}`\" :params=\"{ name: settings?.name }\">\n    <template v-slot:cta>\n    </template>\n\n    <span class=\"block whitespace-nowrap text-sm font-medium\">\n      {{ $t('Profiles settings') }}\n    </span>\n    <div class=\"grid w-full grid-cols-12 gap-4\" v-if=\"settings\">\n      <FloatLabel variant=\"on\" class=\"col-span-3\">\n        <InputText v-model=\"name\" id=\"name\" name=\"Name\" class=\"w-full\" />\n        <label for=\"name\">Name</label>\n      </FloatLabel>\n      <FloatLabel variant=\"on\" class=\"col-span-2\">\n        <Select v-model=\"mediaType\" id=\"type\" class=\"w-full\" :options=\"mediaTypes\" optionLabel=\"label\" />\n        <label for=\"type\">Media type</label>\n      </FloatLabel>\n      <FloatLabel variant=\"on\" class=\"col-span-2\">\n        <Select v-model=\"container\" id=\"container\" class=\"w-full\"\n          :options=\"videoContainers?.filter(vc => vc.type == mediaType?.value) ?? []\" optionLabel=\"label\" />\n        <label for=\"container\">Container</label>\n      </FloatLabel>\n    </div>\n\n    <div class=\"flex w-full flex-col\" v-if=\"settings\">\n\n      <div class=\"flex w-full justify-between\">\n        <span class=\"block whitespace-nowrap text-sm font-medium\">\n          {{ $t('Video Profiles') }}\n        </span>\n        <Button type=\"button\" @click=\"addVideoProfile\" id=\"addVideoProfile\">Add Video Profile</Button>\n      </div>\n      <template v-for=\"(profile, index) in videoCodecs\" :key=\"index\">\n        <div class=\"m-2 mt-2 ml-0 flex w-full rounded-md border-white/5 p-4 border-1 odd:bg-auto-1/5 even:bg-auto-2/2\">\n          <div class=\"grid h-auto w-full grid-cols-8 flex-wrap gap-2\">\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`videoProfiles_${index}`\" label=\"Codec\" class=\"col-span-2\" v-model=\"videoCodecs[index]\"\n                optionLabel=\"label\" :options=\"container?.available_video_codecs ?? []\" />\n              <label :for=\"`videoProfiles_${index}`\">Codec</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`resolutions_${index}`\" label=\"Resolution\" class=\"col-span-2\" v-model=\"resolutions[index]\"\n                optionLabel=\"name\" :options=\"container?.available_resolutions ?? []\" />\n              <label :for=\"`resolutions_${index}`\">Resolution</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`colorSpaces_${index}`\" class=\"col-span-2\" v-model=\"colorSpaces[index]\" optionLabel=\"label\"\n                :options=\"profile?.color_spaces ?? []\" />\n              <label :for=\"`colorSpaces_${index}`\">Colorspace</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`profiles_${index}`\" l class=\"col-span-2\" v-model=\"profiles[index]\" optionLabel=\"label\"\n                :options=\"profile?.profiles ?? []\" />\n              <label :for=\"`profiles_${index}`\">Profile</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`presets_${index}`\" l class=\"col-span-2\" v-model=\"presets[index]\" optionLabel=\"label\"\n                :options=\"profile?.presets ?? []\" />\n              <label :for=\"`presets_${index}`\">Preset</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`tunes_${index}`\" class=\"col-span-2\" v-model=\"tunes[index]\" optionLabel=\"label\"\n                :options=\"profile?.tunes ?? []\" />\n              <label for=\"`tunes_${index}`\">Tune</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <InputNumber :id=\"`crfs_${index}`\" type=\"number\" :min=\"0\" :max=\"51\" class=\"w-full\"\n                v-model=\"crfs[index]\" />\n              <label :for=\"`crfs_${index}`\">CRF</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <InputNumber :id=\"`bitrates_${index}`\" type=\"number\" :min=\"0\" :max=\"1000000\" class=\"w-full\"\n                v-model=\"bitrates[index]\" />\n              <label :for=\"`bitrates_${index}`\">Bitrate</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-4\">\n              <InputText :id=\"`segmentNames_${index}`\" class=\"w-full\" v-model=\"segmentNames[index]\" />\n              <label :for=\"`segmentNames_${index}`\">Segment name</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-4\">\n              <InputText :id=\"`playlistNames_${index}`\" class=\"w-full\" v-model=\"playlistNames[index]\" />\n              <label :for=\"`playlistNames_${index}`\">Playlist name</label>\n            </FloatLabel>\n          </div>\n          <Button type=\"button\" @click=\"() => deleteVideoProfile(index)\" id=\"addVideoProfile\" class=\"col-span-2\"\n            variant=\"text\" end-icon=\"trash\"></Button>\n        </div>\n      </template>\n\n      <div class=\"flex w-full justify-between\">\n        <span class=\"mt-2 block whitespace-nowrap text-sm font-medium\">\n          {{ $t('Audio Profiles') }}\n        </span>\n        <Button type=\"button\" @click=\"addAudioProfile\" id=\"addAudioProfile\">Add Audio Profile</Button>\n      </div>\n      <template v-for=\"(profile, index) in audioCodecs\" :key=\"index\">\n        <div class=\"m-2 mt-2 ml-0 flex w-full rounded-md border-white/5 p-4 border-1 odd:bg-auto-1/5 even:bg-auto-2/2\">\n          <div class=\"grid h-auto w-full grid-cols-8 flex-wrap gap-2\">\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select :id=\"`audioCodecs_${index}`\" class=\"col-span-2\" optionLabel=\"label\" v-model=\"audioCodecs[index]\"\n                :options=\"container?.available_audio_codecs ?? []\" />\n              <label :for=\"`audioCodecs_${index}`\">Codec</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <MultiSelect :id=\"`allowedAudioLanguages_${index}`\" class=\"col-span-2\" optionLabel=\"label\"\n                v-model=\"allowedAudioLanguages[index]\" :options=\"profile?.available_languages ?? []\" />\n              <label :for=\"`allowedAudioLanguages_${index}`\">Allowed languages</label>\n            </FloatLabel>\n          </div>\n          <Button type=\"button\" @click=\"() => deleteAudioProfile(index)\" id=\"addVideoProfile\" class=\"col-span-2\"\n            variant=\"text\" end-icon=\"trash\"></Button>\n        </div>\n      </template>\n\n      <div class=\"flex w-full justify-between\">\n        <span class=\"mt-2 block whitespace-nowrap text-sm font-medium\">\n          {{ $t('Subtitle Profiles') }}\n        </span>\n        <Button type=\"button\" @click=\"addSubtitleProfile\" id=\"addSubtitleProfile\">Add Subtitle Profile</Button>\n      </div>\n      <template v-for=\"(profile, index) in subtitleCodecs\" :key=\"index\">\n        <div class=\"m-2 mt-2 ml-0 flex w-full rounded-md border-white/5 p-4 border-1 odd:bg-auto-1/5 even:bg-auto-2/2\">\n          <div class=\"grid h-auto w-full grid-cols-8 flex-wrap gap-2\">\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <Select v-model=\"subtitleCodecs[index]\" id=\"subtitleProfiles\" optionLabel=\"label\" class=\"col-span-2\"\n                :options=\"container?.available_subtitle_codecs ?? []\" />\n              <label for=\"subtitleProfiles\">Codec</label>\n            </FloatLabel>\n            <FloatLabel variant=\"on\" class=\"col-span-2\">\n              <MultiSelect v-model=\"allowedSubtitleLanguages[index]\" :id=\"`allowedSubtitleLanguages_${index}`\"\n                class=\"col-span-2\" optionLabel=\"label\" :options=\"profile?.available_languages ?? []\" multiple />\n              <label :for=\"`allowedSubtitleLanguages_${index}`\">Allowed languages</label>\n            </FloatLabel>\n          </div>\n          <Button type=\"button\" @click=\"() => deleteSubtitleProfile(index)\" id=\"addVideoProfile\" class=\"col-span-2\"\n            variant=\"text\" end-icon=\"trash\"></Button>\n        </div>\n      </template>\n    </div>\n\n    <template v-slot:actions>\n      <Button type=\"button\" id=\"remove\" variant=\"text\"\n        class=\"children:text-gray-400 children:transition-colors children:duration-100 children:hover:text-red-dark-8\"\n        color=\"text-auto-alpha-11\" startIcon=\"folderRemove\" @click=\"openDeleteConfirm\">\n        {{ $t('Remove') }}\n      </button>\n      <Button type=\"button\" id=\"cancel\" variant=\"text\" color=\"white\" @click=\"handleCancel\">\n        {{ $t('Cancel') }}\n      </Button>\n      <Button type=\"submit\" id=\"save\" color=\"theme\" class=\"ml-auto\" form=\"myForm\" @click=\"handleSave\">\n        {{ $t('Save') }}\n      </button>\n    </template>\n\n    <DeleteEncoderProfileModal v-if=\"settings?.id\" :id=\"settings?.id ?? ''\" :name=\"settings?.name ?? ''\"\n      :close=\"closeDeleteConfirm\" :open=\"deleteConfirmOpen\" />\n  </DashboardLayout>\n</template>\n"],"names":["props","__props","t","useTranslation","query","useQueryClient","handleDelete","serverClient","data","route","useRoute","encoderProfiles","error","useServerClient","videoContainers","settings","ref","watch","value","l","onMounted","deleteConfirmOpen","openDeleteConfirm","closeDeleteConfirm","handleCancel","handleSave","mediaTypes","name","_a","mediaType","_b","type","container","_c","ec","videoCodecs","resolutions","colorSpaces","crfs","widths","tunes","profiles","presets","playlistNames","segmentNames","bitrates","audioCodecs","allowedAudioLanguages","subtitleCodecs","allowedSubtitleLanguages","addVideoProfile","addAudioProfile","addSubtitleProfile","deleteVideoProfile","index","deleteAudioProfile","deleteSubtitleProfile","setValues","codec","vp","ap","sp","_d","res","p","vc","cs2","t2","p2","ac","sc","_e","_f","_g","_h","_i"],"mappings":"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"}