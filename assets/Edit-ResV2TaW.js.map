{"version":3,"file":"Edit-ResV2TaW.js","sources":["../../src/components/FolderBrowser.vue","../../src/views/Dashboard/System/Libraries/components/NewFolderModal.vue","../../src/views/Dashboard/System/Libraries/components/DeleteLibraryModal.vue","../../src/views/Dashboard/System/Libraries/components/DeleteFolderModal.vue","../../src/views/Dashboard/System/Libraries/components/Folder.vue","../../src/components/Forms/Checkbox.vue","../../src/views/Dashboard/System/Libraries/components/FolderItem.vue","../../src/views/Dashboard/System/Libraries/components/AddContentModal.vue","../../src/views/Dashboard/System/Libraries/Edit.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport {onMounted, PropType, ref, watch} from 'vue';\nimport {useTranslation} from 'i18next-vue';\n\nimport type {DirectoryTreeItem, DirectoryTreeResponse} from \"@/types/api/dashboard/server\";\n\nimport serverClient from '@/lib/clients/serverClient';\nimport ScrollContainer from \"@/Layout/Desktop/components/ScrollContainer.vue\";\nimport MoooomIcon from \"@/components/Images/icons/MoooomIcon.vue\";\n\nconst {t} = useTranslation();\n\nconst props = defineProps({\n  selected: {\n    type: String,\n    required: true,\n  },\n  setSelected: {\n    type: Function as PropType<(value: string) => void>,\n    required: true,\n  },\n});\n\nwatch(props, (value) => {\n  path.value = value.selected;\n});\n\nconst path = ref(props.selected ?? '/');\nconst lock = ref(false);\nconst directorySeparator = ref('/');\n\nwatch(path, (newValue) => {\n  props.setSelected(newValue);\n\n  lock.value = false;\n});\n\nconst showFolders = ref<DirectoryTreeItem[]>([]);\nconst loading = ref(false);\n\nconst getFolders = (folder: string) => {\n  serverClient()\n      .post<DirectoryTreeResponse>('/dashboard/server/directorytree', {\n        folder: folder,\n      })\n      .then(({data}) => {\n        showFolders.value = data.data.filter(f => f.type == 'folder');\n        directorySeparator.value = data.data[0].full_path?.match(/[\\\\\\/]/gu)?.at(-1) ?? '/';\n      })\n      .then(() => loading.value = false);\n};\n\nwatch(path, (value) => {\n  if (!value) return;\n\n  getFolders(value ?? '');\n});\n\nconst handleGoUp = () => {\n  lock.value = true;\n  path.value = path.value.split(/[/\\\\]/gu).slice(0, -1).join(directorySeparator.value);\n\n  if (!path.value.match(/[/\\\\]/gu)?.length) {\n    path.value = '/';\n  }\n\n};\n\nconst handleClick = (folder: DirectoryTreeItem) => {\n  path.value = folder.full_path;\n};\n\nonMounted(() => {\n  getFolders(path.value ?? '');\n});\n\n</script>\n\n<template>\n  <div class=\"relative mt-1 w-full\">\n    <InputText id=\"folderName\"\n               name=\"\"\n               variant=\"filled\"\n               class=\"w-full\"\n               v-model=\"path\">\n    </InputText>\n  </div>\n  <div class=\"relative flex w-full flex-col overflow-clip h-[88%] even:text-lg\">\n    <div class=\"flex p-2 pt-4 border-b !bg-transparent text-sm select-none\">\n      <span class=\"\">\n        {{ t('Type') }}\n      </span>\n      <span class=\"mr-auto ml-4\">\n        {{ t('Name') }}\n      </span>\n    </div>\n    <div\n        class=\"relative flex w-full flex-col h-[85%]\">\n      <ScrollContainer :static=\"false\" :autoHide=\"false\" className=\"ml-2\">\n        <div @click=\"handleGoUp\"\n             class=\"bg-auto-6/4 hover:bg-auto-200 border-t-0 border-b border-solid border-[rgba(34,34,34,0.9)] contain flex items-center text-current cursor-pointer overflow-hidden py-1 px-2 align-middle h-10 min-h-10 leading-6 select-none\"\n             :class=\"path == '/' ? 'opacity-50' : ''\"\n        >\n          <MoooomIcon icon=\"returnPackage\" class=\"mt-1 h-5 w-5\"/>\n          <span class=\"mr-auto !ml-7\">...</span>\n        </div>\n        <div\n            class=\"relative w-full h-auto\">\n          <div v-for=\"folder in showFolders\"\n               :key=\"folder.full_path\"\n               @click=\"() => handleClick(folder)\"\n               class=\"even:bg-auto-6/2 odd:bg-auto-100 hover:bg-auto-200 border-t-0 border-b border-solid border-[rgba(34,34,34,0.9)] contain flex items-center bg-transparent text-current cursor-pointer overflow-hidden py-1 px-2 align-middle h-10 leading-6\">\n            <MoooomIcon icon=\"folder\" class=\"h-5 w-5\"/>\n            <span class=\"mr-auto !ml-7 text-sm select-none\">\n              {{ folder.path.replace(/[\\\\\\/]/u, '') }}\n            </span>\n          </div>\n        </div>\n      </ScrollContainer>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport {PropType} from 'vue';\nimport {useTranslation} from 'i18next-vue';\nimport {useRoute} from 'vue-router';\nimport {useQueryClient} from '@tanstack/vue-query';\n\nimport type {ServerLibrary} from '@/types/server';\n\nimport serverClient from '@/lib/clients/serverClient';\nimport FolderBrowser from '@/components/FolderBrowser.vue';\nimport Modal from '@/components/Modal.vue';\n\nconst props = defineProps({\n  open: {\n    type: Boolean,\n    required: true,\n  },\n  close: {\n    type: Function as PropType<() => any>,\n    required: true,\n  },\n  folder: {\n    type: String,\n    required: true,\n  },\n  setFolder: {\n    type: Function as PropType<(folder: string) => void>,\n    required: true,\n  },\n  library: {\n    type: Object as PropType<ServerLibrary>,\n    required: false,\n  },\n});\n\nconst route = useRoute();\nconst {t} = useTranslation();\nconst query = useQueryClient();\n\nconst handleCreateFolder = () => {\n  serverClient()\n      .post<{\n        message: string,\n        status: string,\n        args: string[];\n      }>(`dashboard/libraries/${route.params.id ?? props.library?.id}/folders`, {\n        path: props.folder,\n      })\n      .then(({data}) => {\n        query.invalidateQueries({queryKey: ['dashboard', 'libraries']});\n\n        // showNotification({\n        // \ttitle: translate(data.message, ...data.args),\n        // \ttype: data.status == 'ok'\n        // \t\t? TYPE.SUCCESS\n        // \t\t: TYPE.ERROR,\n        // \tvisibleOnly: true,\n        // \tduration: 2000,\n        // });\n\n        props.setFolder('/');\n\n        props.close();\n      });\n};\n\n</script>\n<template>\n  <Modal :close=\"close\"\n         :open=\"open\"\n         maxWidth=\"max-w-5xl\"\n         title=\"Add folder\">\n\n    <div class=\"mx-auto flex w-full flex-col h-[44vh]\">\n      <FolderBrowser :selected=\"folder\" :setSelected=\"setFolder\"/>\n    </div>\n\n    <template v-slot:actions>\n      <Button id=\"yes\"\n              :onClick=\"handleCreateFolder\"\n              color=\"theme\"\n              type=\"button\"\n              variant=\"contained\">\n        {{ t('Add') }}\n      </button>\n      <Button id=\"no\"\n              :onClick=\"close\"\n              type=\"button\"\n              color=\"text-auto-alpha-11\"\n              variant=\"text\">\n        {{ t('Cancel') }}\n      </button>\n    </template>\n  </Modal>\n</template>\n","<script lang=\"ts\" setup>\nimport {PropType} from 'vue';\nimport {useTranslation} from 'i18next-vue';\nimport {useQueryClient} from '@tanstack/vue-query';\n\nimport serverClient from '@/lib/clients/serverClient';\n\nimport Modal from '@/components/Modal.vue';\nimport Button from '@/components/Button.vue';\n\nconst props = defineProps({\n\topen: {\n\t\ttype: Boolean,\n\t\trequired: true,\n\t},\n\tclose: {\n\t\ttype: Function as PropType<() => any>,\n\t\trequired: true,\n\t},\n\tid: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tname: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n\tnoRedirect: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n});\n\nconst {t} = useTranslation();\nconst query = useQueryClient();\n\nconst handleDelete = () => {\n\tserverClient()\n\t\t.delete(`dashboard/libraries/${props.id}`)\n\t\t.then(({data}) => {\n\n\t\t\t// showNotification({\n\t\t\t// \ttitle: translate(data.message, ...data.args ?? []),\n\t\t\t// \ttype: data.status == 'ok'\n\t\t\t// \t\t? TYPE.SUCCESS\n\t\t\t// \t\t: TYPE.ERROR,\n\t\t\t// \tvisibleOnly: true,\n\t\t\t// \tduration: 2000,\n\t\t\t// });\n\t\t\tquery.invalidateQueries({queryKey: ['dashboard', 'libraries']});\n\n\t\t\tif (props.noRedirect) return;\n\t\t\twindow.history.back();\n\t\t});\n\n\tprops.close();\n};\n\n</script>\n<template>\n\t<Modal :close=\"close\"\n\t\t\t\t :open=\"open\"\n\t\t\t\t maxWidth=\"max-w-xl\"\n\t\t\t\t :params=\"{library: props.name}\"\n\t\t\t\t :title=\"`Delete library {{library}}`\">\n\n\t\t<div class=\"my-6 text-sm text-auto-10\">\n\t\t\t{{ t('Are you sure you want to delete this library?') }}\n\t\t</div>\n\n\t\t<template v-slot:actions>\n\t\t\t<Button id=\"yes\"\n\t\t\t\t\t\t\t:onclick=\"handleDelete\"\n\t\t\t\t\t\t\tendIcon=\"trash\"\n\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tvariant=\"contained\">\n\t\t\t\t{{ t('Delete') }}\n\t\t\t</button>\n\t\t\t<Button id=\"no\"\n\t\t\t\t\t\t\t:onClick=\"close\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tcolor=\"text-auto-alpha-11\"\n\t\t\t\t\t\t\tvariant=\"text\">\n\t\t\t\t{{ t('Cancel') }}\n\t\t\t</button>\n\t\t</template>\n\t</Modal>\n</template>\n","<script lang=\"ts\" setup>\nimport {PropType} from 'vue';\nimport {useTranslation} from 'i18next-vue';\nimport {useRoute} from 'vue-router';\nimport {useQueryClient} from '@tanstack/vue-query';\n\nimport serverClient from '@/lib/clients/serverClient';\n\nimport Modal from '@/components/Modal.vue';\n\nconst props = defineProps({\n  open: {\n    type: Boolean,\n    required: true,\n  },\n  close: {\n    type: Function as PropType<() => any>,\n    required: true,\n  },\n  id: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  noRedirect: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst {t} = useTranslation();\nconst query = useQueryClient();\nconst route = useRoute();\n\nconst handleDelete = () => {\n  serverClient()\n      .delete<{\n        message: string,\n        status: string,\n        args: string[];\n      }>(`dashboard/libraries/${route.params.id}/folders/${props.id}`)\n      .then(({data}) => {\n        query.invalidateQueries({queryKey: ['dashboard', 'libraries']});\n\n        // showNotification({\n        //     title: translate(data.message, ...data.args),\n        //     type: data.status == 'ok'\n        //         ? TYPE.SUCCESS\n        //         : TYPE.ERROR,\n        //     visibleOnly: true,\n        //     duration: 2000,\n        // });\n      });\n\n  props.close();\n};\n\n</script>\n<template>\n  <Modal :close=\"close\"\n         :open=\"open\"\n         maxWidth=\"max-w-xl\"\n         :params=\"{folder: props.name}\"\n         :title=\"`Delete folder {{folder}}`\">\n\n    <div class=\"my-6 text-sm text-auto-10\">\n      {{ t('Are you sure you want to delete this folder?') }}\n    </div>\n\n    <template v-slot:actions>\n      <Button id=\"yes\"\n              :onclick=\"handleDelete\"\n              endIcon=\"trash\"\n              color=\"red\"\n              type=\"button\"\n              variant=\"contained\">\n        {{ t('Delete') }}\n      </button>\n      <Button id=\"no\"\n              :onClick=\"close\"\n              type=\"button\"\n              color=\"text-auto-alpha-11\"\n              variant=\"text\">\n        {{ t('Cancel') }}\n      </button>\n    </template>\n  </Modal>\n</template>\n","<script setup lang='ts'>\nimport {computed, PropType, ref, toRaw, watch} from 'vue';\n\nimport type {EncoderProfile, FolderLibrary} from '@/types/api/base/library';\n\nimport useServerClient from \"@/lib/clients/useServerClient\";\n\nimport DeleteFolderModal from \"./DeleteFolderModal.vue\";\n\nconst props = defineProps({\n\thandleDeleteFolder: {\n\t\ttype: Function,\n\t\trequired: true,\n\t},\n\tfolder: {\n\t\ttype: Object as PropType<FolderLibrary>,\n\t\trequired: true,\n\t},\n\tsetEncoderQualities: {\n\t\ttype: Function as PropType<(FolderLibrary: FolderLibrary, profiles: EncoderProfile[]) => void>,\n\t\trequired: true,\n\t},\n\ttype: {\n\t\ttype: String,\n\t\trequired: true,\n\t},\n});\n\nconst {data: encoderProfiles} = useServerClient<EncoderProfile[]>({\n\tpath: 'dashboard/encoderProfiles',\n\tqueryKey: ['dashboard', 'encoderProfiles'],\n});\n\nconst availableQualities = computed(() => {\n\tswitch (props.type) {\n\t\tcase 'anime':\n\t\t\treturn encoderProfiles.value?.filter(encoderQualities => encoderQualities.container == 'm3u8').map(encoderQualities => toRaw(encoderQualities));\n\t\tcase 'movie':\n\t\t\treturn encoderProfiles.value?.filter(encoderQualities => encoderQualities.container == 'm3u8').map(encoderQualities => toRaw(encoderQualities));\n\t\tcase 'tv':\n\t\t\treturn encoderProfiles.value?.filter(encoderQualities => encoderQualities.container == 'm3u8').map(encoderQualities => toRaw(encoderQualities));\n\t\tcase 'music':\n\t\t\treturn [];\n\t\tdefault:\n\t\t\treturn [];\n\t}\n});\n\nconst encoderQualities = ref<EncoderProfile[]>(availableQualities.value?.filter((quality) => props.folder.folder.encoder_profiles?.some((profile) => profile.id === quality.id)) ?? []);\nwatch(availableQualities, (newVal) => {\n  if (!newVal) return;\n  encoderQualities.value = newVal.filter((quality) => props.folder.folder.encoder_profiles.some((profile) => profile.id === quality.id));\n});\n\nwatch(encoderQualities, (newVal) => {\n\tprops.setEncoderQualities(toRaw(props.folder), toRaw(newVal));\n});\n\nconst deleteConfirmOpen = ref(false);\nconst openDeleteConfirm = () => {\n\tdeleteConfirmOpen.value = true;\n};\nconst closeDeleteConfirm = () => {\n\tdeleteConfirmOpen.value = false;\n};\n\n</script>\n\n<template>\n\t<div\n\t\tclass='flex w-full flex-col items-center justify-between gap-2 rounded-md px-4 py-2 pr-2 odd:bg-auto-alpha-3 even:bg-auto-alpha-2 sm:flex-row'>\n\t\t<span class=\"mr-auto flex w-full flex-1 flex-grow\">\n\t\t\t{{ folder.folder.path }}\n\t\t</span>\n\n\t\t<div class=\"ml-auto flex w-full gap-2 sm:w-auto\">\n\t\t\t<MultiSelect\n\t\t\t\tid=\"encoderProfiles\"\n\t\t\t\tplaceholder=\"Select encoder profiles\"\n\t\t\t\tclass=\"w-full min-w-[200px] sm:w-auto\"\n\t\t\t\t:options=\"availableQualities\"\n        optionLabel=\"name\"\n\t\t\t\tv-model=\"encoderQualities\"\n\t\t\t/>\n\n\t\t\t<Button type=\"button\"\n\t\t\t\t\t\t\tid=\"yes\"\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\tclass=\"children:text-gray-400 children:transition-colors children:duration-100 children:hover:text-red-dark-8\"\n\t\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\t\tstartIcon=\"folderRemove\"\n\t\t\t\t\t\t\t@click=\"openDeleteConfirm\">\n\t\t\t</Button>\n\n\t\t\t<DeleteFolderModal\n\t\t\t\t:id=\"folder.folder.id\"\n\t\t\t\t:name=\"folder.folder.path\"\n\t\t\t\t:close=\"closeDeleteConfirm\"\n\t\t\t\t:open=\"deleteConfirmOpen\"\n\t\t\t/>\n\n\t\t</div>\n\t</div>\n\n</template>\n","<script setup lang=\"ts\">\n\nimport {computed, type PropType} from 'vue';\n\nconst props = defineProps({\n\tid: {\n\t\ttype: String,\n\t\trequired: false,\n\t},\n\tmodelValue: {\n\t\ttype: Boolean as PropType<false | null | true>,\n\t\trequired: false,\n\t\tdefault: null,\n\t},\n\tlabel: {\n\t\trequired: false,\n\t},\n\twidth: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: '18',\n\t},\n\theight: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: '18',\n\t},\n\tcolor: {\n\t\ttype: String,\n\t\trequired: false,\n\t\tdefault: '#5842C3',\n\t},\n\tonclick: {\n\t\ttype: Function as PropType<() => void>,\n\t\trequired: false,\n\t}\n});\n\nconst emit = defineEmits(['update:modelValue']);\n\nconst cycle = () => {\n\tif (props.onclick) {\n\t\tprops.onclick?.();\n\t\treturn;\n\t}\n\tlet newValue;\n\tif (props.modelValue === null) {\n\t\tnewValue = true;\n\t} else if (props.modelValue === true) {\n\t\tnewValue = false;\n\t} else {\n\t\tnewValue = null;\n\t}\n\temit('update:modelValue', newValue);\n};\n\nconst handleClick = () => {\n\tif (props.onclick) {\n\t\tprops.onclick?.();\n\t\treturn;\n\t}\n\tlet newValue;\n\tif (props.modelValue === null || props.modelValue === false) {\n\t\tnewValue = true;\n\t} else if (props.modelValue === true) {\n\t\tnewValue = false;\n\t}\n\temit('update:modelValue', newValue);\n};\n\nconst defs = computed(() => {\n\treturn `\n      <defs>\n        <linearGradient id=\"paint0_linear_4922_9259\" x1=\"9\" y1=\"0\" x2=\"9\" y2=\"18\" gradientUnits=\"userSpaceOnUse\" >\n          <stop stop-color=\"white\" stop-opacity=\"0.4\" offset=\"0\"></stop>\n          <stop offset=\"1\" stop-color=\"white\" stop-opacity=\"0\"></stop>\n        </linearGradient>\n      </defs>\n\t`;\n});\n\nconst svgPaths = computed(() => {\n\tif (props.modelValue === null) {\n\t\treturn `\n      <rect x=\"0.25\" y=\"0.25\" width=\"17.5\" height=\"17.5\" rx=\"3.75\" fill=\"${props.color}\" fill-opacity=\"0.29\" ></rect>\n      <rect x=\"0.25\" y=\"0.25\" width=\"17.5\" height=\"17.5\" rx=\"3.75\" stroke=\"#6F52FF\" stroke-opacity=\"0.73\" stroke-width=\"0.5\" ></rect>\n      <rect x=\"0.25\" y=\"0.25\" width=\"17.5\" height=\"17.5\" rx=\"3.75\" stroke=\"url(#paint0_linear_4922_9259)\" stroke-width=\"0.5\" ></rect>\n      <path d=\"M4.91675 9H13.0834\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" ></path>\n      ${defs.value}\n    `;\n\t}\n\telse if (props.modelValue) {\n\t\treturn `\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" fill=\"${props.color}\"></rect>\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" stroke=\"#E2F0FD\" stroke-opacity=\"0.08\" ></rect>\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" stroke=\"url(#paint0_linear_4922_9259)\" ></rect>\n      <path d=\"M13.6666 5.5L7.24992 11.9167L4.33325 9\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" ></path>\n      ${defs.value}\n    `;\n\t}\n\telse {\n\t\treturn `\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" class=\"fill-auto-1\" fill-opacity=\"1\"/>\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" fill=\"#DFEFFE\" fill-opacity=\"0.14\"/>\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" stroke=\"#E5F2FE\" stroke-opacity=\"0.26\"/>\n      <rect x=\"0.5\" y=\"0.5\" width=\"17\" height=\"17\" rx=\"3.5\" stroke=\"url(#paint0_linear_4922_9259)\"/>\n      ${defs.value}\n    `;\n\t}\n});\n\n</script>\n\n<template>\n\t<div\n\t\tclass=\"relative flex select-none items-center justify-start gap-2 self-stretch border border-transparent bg-transparent\"\n\t\t@click=\"handleClick\"\n\t>\n\t\t<input :id=\"id\" type=\"checkbox\" class=\"hidden item-selector\" model-value:checked=\"!!modelValue\" />\n\t\t<svg\n\t\t\t\t :id=\"id\"\n\t\t\t\t :width=\"width\"\n\t\t\t\t :height=\"height\"\n\t\t\t\t fill=\"none\"\n\t\t\t\t viewBox=\"0 0 18 18\"\n\t\t\t\t xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t class=\"relative w-[18px] h-[18px]\"\n\t\t\t\t preserveAspectRatio=\"xMidYMid meet\"\n\t\t>\n\t\t\t<g v-html=\"svgPaths\"></g>\n\t\t</svg>\n\t\t<div class=\"relative flex flex-grow items-center justify-center gap-2 px-2\" v-if=\"label\">\n\t\t\t<p class=\"w-full flex-grow text-sm font-medium\">\n\t\t\t\t{{ $t(label) }}\n\t\t\t</p>\n\t\t</div>\n\t\t<slot/>\n\t</div>\n</template>\n","<script setup lang=\"ts\">\nimport {nextTick, PropType, ref, watch} from 'vue';\n\nimport type {Episode, FileItem} from '@/types/api/dashboard/newContent';\n\nimport {humanFileSize, pad} from '@/lib/stringArray';\nimport {tmdbImageBaseUrl} from '@/config/config';\n\nimport Checkbox from '@/components/Forms/Checkbox.vue';\nimport MoooomIcon from '@/components/Images/icons/MoooomIcon.vue';\n\nconst props = defineProps({\n  manage: {\n    type: Boolean,\n    required: false,\n  },\n  data: {\n    type: Object as PropType<FileItem>,\n    required: true,\n  },\n  pushFile: {\n    type: Function,\n    required: true,\n  },\n  popFile: {\n    type: Function,\n    required: true,\n  },\n  files: {\n    type: Array as PropType<{ id: number, path: string }[]>,\n    required: true,\n  },\n});\n\nconst checked = ref(false);\nconst block = ref(false);\n\nwatch(checked, (value) => {\n  if (block.value) return;\n  if (value) {\n    props.pushFile(props.data);\n  } else {\n    props.popFile(props.data);\n  }\n});\n\nwatch(props, (value) => {\n  block.value = true;\n  checked.value = value.files.some(file => file.id == props.data?.match?.id);\n  nextTick(() => {\n    block.value = false;\n  });\n});\n\n</script>\n\n<template>\n  <div class=\"flex items-center justify-start gap-4 self-stretch text-left\">\n    <div\n        class=\"flex flex-grow flex-col items-start justify-start gap-2 rounded-xl p-2 bg-slate-lightA-3 dark:bg-slate-darkA-3\"\n    >\n      <div\n          class=\"relative flex items-start justify-start gap-2 self-stretch\"\n      >\n        <div\n            class=\"relative aspect-video h-auto w-60 min-w-60 select-none overflow-clip\">\n          <Checkbox\n              id=\"checked\"\n              class=\"absolute top-2 left-2 z-10\"\n              name=\"\"\n              v-model:modelValue=\"checked\">\n\n          </Checkbox>\n          <img alt=\"\" :src=\"`${tmdbImageBaseUrl}/w500${(data.match as Episode)?.still}`\"\n               class=\"absolute inset-0 z-0 h-auto max-h-full w-full rounded-md object-scale-down p-0.5\"/>\n        </div>\n        <div class=\"flex flex-grow flex-col items-start justify-start gap-1 tet-left\">\n          <div\n              class=\"relative flex flex-col items-start justify-center self-stretch gap-0.5\"\n          >\n\t\t\t\t\t\t<span class=\"self-stretch text-base font-semibold line-clamp-1 monospace w-[697px]\">\n\t\t\t\t\t\t\t{{ data?.parsed?.title }}\n\t\t\t\t\t\t\t<template\n                  v-if=\"(data.match as Episode)?.episode_number\"\n              >\n\t\t\t\t\t\t\t\tS{{ pad((data.match as Episode)?.season_number) }}E{{\n                  pad((data.match as Episode)?.episode_number)\n                }} - {{ data?.match?.title }}\n\t\t\t\t\t\t\t</template>\n              <template v-else-if=\"data?.parsed?.year\">\n                ({{ data?.parsed?.year }})\n              </template>\n\t\t\t\t\t\t</span>\n            <p\n                class=\"w-full self-stretch text-xs font-light leading-none text-slate-light-11 dark:text-slate-dark-11\"\n            >\n              {{ data.file }}\n            </p>\n          </div>\n          <div\n              class=\"relative flex items-center justify-start self-stretch gap-0.5 text-slate-light-11 dark:text-slate-dark-11\"\n          >\n            <MoooomIcon icon=\"server\" className=\"w-3.5\"/>\n            <p class=\"w-full flex-grow text-xs leading-none\">\n              {{ humanFileSize(data.size) }}\n            </p>\n          </div>\n          <div\n              class=\"relative flex items-center justify-start self-stretch gap-0.5 text-slate-light-11 dark:text-slate-dark-11\"\n          >\n            <MoooomIcon icon=\"film\" className=\"w-3.5\"/>\n            <p class=\"w-full flex-grow text-xs leading-none\">\n              <template v-for=\"(video, index) in data.streams.video\">\n                {{ video.width }}x{{ video.height }}{{ index < (data.streams.video.length - 1) ? ', ' : '' }}\n              </template>\n            </p>\n          </div>\n          <div\n              class=\"relative flex items-center justify-start self-stretch gap-0.5 text-slate-light-11 dark:text-slate-dark-11\"\n          >\n            <MoooomIcon icon=\"audioFile\" className=\"w-3.5\"/>\n            <p class=\"w-full flex-grow text-xs leading-none\">\n              <template v-for=\"(audio, index) in data.streams.audio\">\n                {{ audio.language }}{{ index < (data.streams.audio.length - 1) ? ', ' : '' }}\n              </template>\n            </p>\n          </div>\n          <div\n              class=\"relative flex items-center justify-start self-stretch gap-0.5 text-slate-light-11 dark:text-slate-dark-11\"\n          >\n            <MoooomIcon icon=\"chatBubble\" className=\"w-3.5\"/>\n            <p class=\"w-full flex-grow text-xs leading-none\">\n              <template v-for=\"(subtitle, index) in data.streams.subtitle\">\n                {{ subtitle.language }}{{ index < (data.streams.subtitle.length - 1) ? ', ' : '' }}\n              </template>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport {computed, onMounted, PropType, ref, watch} from 'vue';\nimport {useTranslation} from 'i18next-vue';\nimport {useRoute} from 'vue-router';\n\nimport type {FileItem, FileList} from '@/types/api/dashboard/newContent';\nimport type {LibrariesResponse} from '@/types/api/base/library';\n\nimport serverClient from '@/lib/clients/serverClient';\nimport useServerClient from '@/lib/clients/useServerClient';\nimport {checkboxValue} from '@/lib/stringArray';\nimport {currentServer} from '@/store/currentServer';\n\nimport Button from '@/components/Button.vue';\nimport Modal from '@/components/Modal.vue';\nimport NoResultImage from '@/components/Images/NoResultImage.vue';\nimport FolderBrowser from '@/components/FolderBrowser.vue';\n\nimport FolderItem from './FolderItem.vue';\nimport ScrollContainer from '@/Layout/Desktop/components/ScrollContainer.vue';\nimport Checkbox from '@/components/Forms/Checkbox.vue';\n\ninterface DestinationFolder {\n  id: string;\n  name: string,\n}\n\nconst route = useRoute();\nconst {t} = useTranslation();\n\nconst props = defineProps({\n  closeAddContentModal: {\n    type: Function as PropType<(e: Event) => any>,\n    required: true,\n  },\n  addContentModalOpen: {\n    type: Boolean,\n    required: true,\n  },\n  librarySettings: {\n    type: Object as PropType<LibrariesResponse>,\n    required: true,\n  },\n});\n\nconst fileList = ref<FileItem[]>([]);\nconst files = ref<{ id: number; path: string }[]>([]);\n\nconst folder = ref('/');\nconst showModal = ref<boolean>(false);\n\nconst currentLibrary = ref<LibrariesResponse>();\nconst destinationFolder = ref<DestinationFolder>();\nconst loading = ref(false);\n\nconst {data: libraries} = useServerClient<LibrariesResponse[]>({\n  path: 'dashboard/libraries',\n  queryKey: ['dashboard', 'libraries', currentServer.value?.serverBaseUrl],\n});\n\nonMounted(() => {\n  if (!libraries.value) return;\n  currentLibrary.value = libraries.value?.find(l => l.id == route.params.id);\n  destinationFolder.value = {\n    id: currentLibrary.value?.folder_library?.at(-1)?.folder_id ?? '',\n    name: currentLibrary.value?.folder_library.at(-1)?.folder.path ?? '',\n  };\n});\n\nwatch(libraries, (value) => {\n  if (!value) return;\n  currentLibrary.value = value?.find(l => l.id == route.params.id);\n  destinationFolder.value = {\n    id: currentLibrary.value?.folder_library?.at(-1)?.folder_id ?? '',\n    name: currentLibrary.value?.folder_library.at(-1)?.folder.path ?? '',\n  };\n});\n\nconst pushFile = (file: FileItem) => {\n  if (files.value?.some(f => f.path === file.file)) {\n    // files.value = files.value.filter(f => f.path !== file.file);\n  } else {\n    files.value = [...files.value, {id: file.match?.id ?? 0, path: file.file}];\n  }\n};\n\nconst popFile = (file: FileItem) => {\n  files.value = files.value.filter(f => f.path !== file.file);\n};\n\nconst getFileList = () => {\n  loading.value = true;\n  fileList.value = [];\n\n  serverClient()\n      .post<{ data: FileList }>('dashboard/server/filelist', {\n        folder: folder.value,\n        type: props.librarySettings.type,\n      })\n      .then(({data}) => {\n        fileList.value = data.data?.files ?? [];\n        files.value = [];\n      })\n      .catch((response) => {\n        // enqueueSnackbar(`${t(response.data.error)}`, {\n        // \tvariant: 'error',\n        // \tautoHideDuration: 3000,\n        // });\n        files.value = [];\n      })\n      .finally(() => {\n        loading.value = false;\n      });\n\n  showModal.value = false;\n};\n\nconst submit = () => {\n  loading.value = true;\n  serverClient()\n      .post('dashboard/server/addfiles', {\n        files: files.value,\n        library_id: props.librarySettings?.id,\n        folder_id: destinationFolder.value?.id,\n      })\n      .then(() => {\n        // enqueueSnackbar(`${t('New content added')}`, {\n        // \tvariant: 'success',\n        // \tautoHideDuration: 3000,\n        // });\n        files.value = [];\n      })\n      .catch((response) => {\n        // enqueueSnackbar(`${t(response.data.error)}`, {\n        // \tvariant: 'error',\n        // \tautoHideDuration: 3000,\n        // });\n        files.value = [];\n      })\n      .finally(() => {\n        loading.value = false;\n      });\n};\n\nconst openModal = () => {\n  showModal.value = true;\n};\nconst closeModal = () => {\n  showModal.value = false;\n};\n\nconst setFolder = (value: string) => {\n  folder.value = value;\n};\n\nconst checkboxState = computed(() => {\n  return checkboxValue(files.value, fileList.value);\n});\n\nconst handleSelectAll = () => {\n  if (checkboxState.value) {\n    files.value = [];\n  } else {\n    files.value = fileList.value.map(f => ({id: f.match?.id ?? 0, path: f.file}));\n  }\n};\n\nconst continueAvailable = computed(() => {\n  return files.value?.length == 0 || destinationFolder.value?.id == null;\n});\n\n</script>\n\n<template>\n  <Modal :close=\"closeAddContentModal\"\n         :open=\"addContentModalOpen\"\n         maxWidth=\"max-w-5xl\"\n         title=\"Add new content\">\n\n    <div class=\"flex w-full flex-col overflow-clip h-[65vh]\">\n      <div class=\"mt-4 flex h-auto w-full flex-col items-start gap-4 sm:flex-row\">\n        <div class=\"flex w-full flex-auto sm:w-64 gap-2\">\n          <div class=\"flex flex-col gap-2 flex-1 \">\n            <label for=\"source_folder\">Source folder</label>\n            <InputText id='source_folder'\n                   class='w-full'\n                   variant=\"filled\"\n                   :onclick=\"openModal\"\n                   v-model=\"folder\">\n            </InputText>\n          </div>\n\n          <div class=\"flex flex-col gap-2 ml-4 w-1/3\">\n            <label for=\"destination_folder\">Destination folder</label>\n            <Select\n                id=\"destination_folder\"\n                placeholder=\"Select a destination folder\"\n                vairant=\"filled\"\n                v-if=\"destinationFolder\"\n                :options=\"(currentLibrary?.folder_library?.map((fl) => ({\n                  id: fl.folder_id,\n                  name: fl.folder.path,\n              })) as DestinationFolder[]) ?? []\"\n                optionLabel=\"name\"\n                v-model=\"destinationFolder\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-8 flex h-0 w-full flex-1 flex-col gap-2 overflow-clip\">\n        <div class=\"relative flex h-full w-full flex-col overflow-clip\">\n          <ScrollContainer :static=\"false\" :autoHide=\"false\" className=\"ml-2\">\n            <div class=\"flex flex-col gap-2 pb-2\"\n                 v-if=\"fileList.length > 0\">\n              <FolderItem v-for=\"file in fileList ?? []\"\n                          :key=\"file.file\"\n                          :data=\"file\"\n                          :files=\"files\"\n                          :pushFile=\"pushFile\"\n                          :popFile=\"popFile\"\n              />\n            </div>\n            <div v-else-if=\"!loading\" class=\"absolute inset-0 flex h-auto w-full items-center justify-center\">\n              <div class=\"flex flex-col items-center gap-2\">\n                <NoResultImage />\n                <span>\n                    {{ $t('No results') }}\n                </span>\n              </div>\n            </div>\n\n            <div v-if=\"loading\" class=\"absolute inset-0 flex h-full w-full items-center justify-center\">\n              <div class=\"text-center\">\n                <div role=\"status\">\n                  <svg aria-hidden=\"true\" class=\"inline h-10 w-10 animate-spin text-auto-11 fill-focus dark:text-auto-1\"\n                       viewBox=\"0 0 100 101\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n                        fill=\"currentColor\"/>\n                    <path\n                        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n                        fill=\"currentFill\"/>\n                  </svg>\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            </div>\n          </ScrollContainer>\n        </div>\n      </div>\n    </div>\n\n    <template v-slot:actions>\n\n      <Button\n          id=\"Add\"\n          color=\"theme\"\n          variant=\"default\"\n          class=\"\"\n          :onClick=\"submit\"\n          :disabled=\"continueAvailable\"\n      >\n        {{ t('Add selection') }}\n      </Button>\n\n      <Checkbox\n          id=\"checked\"\n          class=\"mr-auto ml-4\"\n          name=\"Select all\"\n          :modelValue=\"checkboxState\"\n          @click=\"handleSelectAll\"\n      >\n\t\t\t\t\t<span class=\"whitespace-pre-wrap text-sm font-semibold text-contrast\">\n\t\t\t\t\t\t\t{{ $t('Select all') }}\n\t\t\t\t\t</span>\n      </Checkbox>\n\n    </template>\n\n    <Modal :open=\"showModal\"\n           :close=\"closeModal\"\n           maxWidth=\"max-w-5xl\"\n           title=\"Add folder\">\n      <div class=\"mx-auto flex w-full flex-col h-[45vh]\">\n        <FolderBrowser :selected=\"folder\" :setSelected=\"setFolder\"/>\n      </div>\n      <template v-slot:actions>\n        <Button type=\"button\"\n                id=\"no\"\n                variant=\"default\"\n                color=\"theme\"\n                :onClick=\"getFileList\">\n          {{ t('Select') }}\n        </button>\n      </template>\n    </Modal>\n  </Modal>\n</template>\n","<script setup lang=\"ts\">\nimport {onBeforeMount, onMounted, ref, toRaw, watch} from 'vue';\nimport {useRoute} from 'vue-router';\nimport {useTranslation} from 'i18next-vue';\n\nimport {useQueryClient} from '@tanstack/vue-query';\n\nimport type {EncoderProfile, FolderLibrary, LibrariesResponse} from '@/types/api/base/library';\nimport type {Language} from '@/types/api/shared';\nimport type {Library, NameVal} from '@/types/api/dashboard/server';\n\nimport useServerClient from '@/lib/clients/useServerClient';\nimport serverClient from '@/lib/clients/serverClient';\nimport {currentServer} from '@/store/currentServer';\nimport {media_types} from '@/config/global';\n\nimport DashboardLayout from '@/Layout/Desktop/DashboardLayout.vue';\nimport LanguageSelect from '@/components/Forms/LanguageSelect.vue';\nimport NewFolderModal from './components/NewFolderModal.vue';\nimport DeleteLibraryModal from './components/DeleteLibraryModal.vue';\nimport Folder from './components/Folder.vue';\nimport AddContentModal from '@/views/Dashboard/System/Libraries/components/AddContentModal.vue';\nimport {IonContent, IonPage} from '@ionic/vue';\n\nconst route = useRoute();\nconst query = useQueryClient();\nconst {t} = useTranslation();\n\nconst {data: libraries, error, refetch} = useServerClient<LibrariesResponse[]>({\n  path: 'dashboard/libraries',\n  queryKey: ['dashboard', 'libraries', currentServer.value?.serverBaseUrl],\n});\n\nconst {data: languages} = useServerClient<Language[]>({\n  path: '/dashboard/configuration/languages',\n});\n\nconst settings = ref<LibrariesResponse>();\n\nonBeforeMount(() => {\n  refetch();\n});\n\nconst title = ref<Library['title']>('');\nconst media_type = ref<NameVal | undefined>();\nconst specialName = ref<Library['specialSeasonName']>('');\nconst subtitleLanguages = ref<Language[]>([]);\nconst autoRefreshInterval = ref<Library['autoRefreshInterval']>(0);\nconst image = ref<Library['image']>('');\nconst perfectSubtitleMatch = ref<Library['perfectSubtitleMatch']>(false);\nconst realtime = ref<Library['realtime']>(false);\nconst folders = ref<FolderLibrary[]>([]);\nconst folder = ref<string>('/');\n\nonMounted(() => {\n  if (!libraries.value) return;\n  settings.value = libraries.value.find(l => l.id == route.params.id)!;\n});\n\nwatch(libraries, (value) => {\n  if (!value) return;\n  settings.value = value.find(l => l.id == route.params.id)!;\n});\n\nwatch(libraries, (value) => {\n  if (!value) return;\n  subtitleLanguages.value = languages.value?.filter(l => settings.value?.subtitles?.includes(l.iso_639_1)) ?? [];\n});\n\nwatch(settings, (value) => {\n  if (!value) return;\n\n  title.value = value.title;\n  media_type.value = media_types.find(m => m.value == value.type);\n  specialName.value = value.specialSeasonName;\n  autoRefreshInterval.value = value.autoRefreshInterval ?? 0;\n  image.value = value.image ?? '';\n  perfectSubtitleMatch.value = value.perfectSubtitleMatch ?? false;\n  realtime.value = value.realtime ?? false;\n  folders.value = value.folder_library ?? [];\n});\n\nconst newModalOpen = ref(false);\nconst openNewFolderModal = () => {\n  newModalOpen.value = true;\n};\nconst closeNewModal = () => {\n  newModalOpen.value = false;\n};\n\nconst addModalOpen = ref(false);\nconst openAddContentModal = () => {\n  addModalOpen.value = true;\n};\nconst closeAddModal = () => {\n  addModalOpen.value = false;\n};\n\nconst setFolder = (value: string) => {\n  folder.value = value;\n};\n\nconst deleteConfirmOpen = ref(false);\nconst openDeleteConfirm = () => {\n  deleteConfirmOpen.value = true;\n};\nconst closeDeleteConfirm = () => {\n  deleteConfirmOpen.value = false;\n};\n\nconst loadingRefresh = ref(false);\nconst handleRefresh = () => {\n\n  loadingRefresh.value = true;\n\n  serverClient()\n      .post<{\n        message: string,\n        status: string,\n        args: string[];\n      }>(`dashboard/libraries/${route.params.id}/refresh`)\n      .then(({data}) => {\n        console.log(data.status == 'ok');\n        loadingRefresh.value = false;\n        // showNotification({\n        //     title: translate(data.message, ...data.args),\n        //     type: data.status == 'ok'\n        //         ? TYPE.SUCCESS\n        //         : TYPE.ERROR,\n        //     visibleOnly: true,\n        //     duration: 2000,\n        // });\n      })\n      .catch(() => {\n        console.log('error');\n        loadingRefresh.value = false;\n        // showNotification({\n        //     title: translate('An error occurred while rescanning the library folders'),\n        //     type: TYPE.ERROR,\n        //     visibleOnly: true,\n        //     duration: 2000,\n        // });\n      });\n};\n\n\nconst loadingRescan = ref(false);\nconst handleRescan = () => {\n\n  loadingRescan.value = true;\n\n  serverClient()\n      .post<{\n        message: string,\n        status: string,\n        args: string[];\n      }>(`dashboard/libraries/${route.params.id}/rescan`)\n      .then(({data}) => {\n        console.log(data.status == 'ok');\n        loadingRescan.value = false;\n        // showNotification({\n        //     title: translate(data.message, ...data.args),\n        //     type: data.status == 'ok'\n        //         ? TYPE.SUCCESS\n        //         : TYPE.ERROR,\n        //     visibleOnly: true,\n        //     duration: 2000,\n        // });\n      })\n      .catch(() => {\n        console.log('error');\n        loadingRescan.value = false;\n        // showNotification({\n        //     title: translate('An error occurred while rescanning the library folders'),\n        //     type: TYPE.ERROR,\n        //     visibleOnly: true,\n        //     duration: 2000,\n        // });\n      });\n};\n\nconst handleCancel = () => {\n  window.history.back();\n};\n\nconst handleSave = () => {\n  serverClient()\n      .patch<{\n        message: string,\n        status: string,\n        args: string[];\n      }>(`dashboard/libraries/${route.params.id}`, {\n        id: route.params.id,\n        title: title.value,\n        type: media_type.value?.value,\n        specialSeasonName: specialName.value,\n        subtitles: subtitleLanguages.value.map(l => l.iso_639_1),\n        autoRefreshInterval: autoRefreshInterval.value,\n        image: image.value,\n        perfectSubtitleMatch: perfectSubtitleMatch.value,\n        realtime: realtime.value,\n        folder_library: folders.value,\n      })\n      .then(({data}) => {\n        query.invalidateQueries({queryKey: ['dashboard', 'libraries']});\n\n        // showNotification({\n        //     title: translate(data.message, ...data.args),\n        //     type: data.status == 'ok'\n        //         ? TYPE.SUCCESS\n        //         : TYPE.ERROR,\n        //     visibleOnly: true,\n        //     duration: 2000,\n        // });\n\n        handleCancel();\n      });\n};\n\nconst setEncoderQualities = (folder: FolderLibrary, profiles: EncoderProfile[]) => {\n  if (!settings.value) return;\n\n  settings.value = {\n    ...settings.value,\n    folder_library: toRaw(settings.value)?.folder_library.map((f) => {\n      if (f.folder_id == folder.folder_id) {\n        f.folder.encoder_profiles = profiles.map(p => toRaw(p));\n      }\n      return f;\n    }),\n  };\n};\n\nconst handleDeleteFolder = (folder: FolderLibrary) => {\n  if (!settings.value) return;\n\n  settings.value = {\n    ...settings.value,\n    folder_library: toRaw(settings.value)?.folder_library.filter(f => f.folder_id != folder.folder_id),\n  };\n};\n\n</script>\n\n<template>\n  <ion-page>\n    <ion-content :fullscreen=\"true\">\n      <DashboardLayout :error=\"error\" :title=\"`Library: {{title}}`\"\n                       :params=\"{title: settings?.title}\"\n                       :back=\"true\"\n                       v-model=\"addModalOpen\"\n      >\n        <template v-slot:cta>\n        </template>\n\n        <div class=\"flex w-full flex-col p-4 sm:w-full\">\n          <div class=\"flex w-full text-md\">\n            {{\n              t('Changes to metadata or artwork downloading settings will only apply to new content added to your newLibrary.')\n            }}\n            <br>\n            {{ t('To apply the changes to existing titles, you\\'ll need to refresh their metadata manually.') }}\n          </div>\n          <div class=\"mt-4 flex w-full flex-col gap-8 pr-2 min-h-[50vh] sm:flex-row\">\n            <div class=\"flex w-full flex-col sm:w-1/3\">\n              <div class=\"mt-4 flex h-11 w-full\">\n                <h3 class=\"text-xl\">\n                  {{ t('Library settings') }}:\n                </h3>\n              </div>\n              <div class=\"flex flex-col gap-2\">\n\n                <div class=\"flex flex-col gap-2\">\n                  <label for=\"special_name\">Library name</label>\n                  <InputText type=\"text\"\n                             tabindex=\"-1\"\n                             id=\"special_name\"\n                             v-model=\"title\"\n                             @change=\"title = $event.target.value\"\n                  />\n                </div>\n\n                <div class=\"flex flex-col gap-2\">\n                  <label for=\"media_types\">Media Type</label>\n                  <Select\n                      id=\"media_types\"\n                      placeholder=\"Select a media type\"\n                      v-if=\"media_types\"\n                      optionLabel=\"title\"\n                      :options=\"media_types ?? []\"\n                      v-model=\"media_type\"\n                  />\n                </div>\n\n                <template v-if=\"media_type && !['music', 'image', 'audiobook'].includes(media_type.value)\">\n\n                  <div class=\"flex flex-col gap-2\">\n                    <label for=\"special_name\">Special season display name</label>\n                    <InputText\n                        tabindex=\"-1\"\n                        id=\"special_name\"\n                        v-model=\"specialName\"\n                        @change=\"specialName = $event.target.value\"\n                    />\n                  </div>\n\n                  <LanguageSelect\n                      v-if=\"languages\"\n                      id=\"subtitleLanguages\"\n                      name=\"Subtitle download languages\"\n                      class=\"mb-4\"\n                      multiple\n                      :items=\"languages\"\n                      v-model=\"subtitleLanguages\"\n                      :setSelected=\"(value: typeof subtitleLanguages) => {\n                                    if (Array.isArray(value)) {\n                                        subtitleLanguages = value;\n                                        return;\n                                    }\n                                }\"/>\n                </template>\n              </div>\n            </div>\n            <div class=\"flex w-full flex-col sm:w-2/3\">\n              <div class=\"mt-4 flex h-16 w-full gap-2\">\n                <h3 class=\"text-xl\">\n                  {{ t('Folders') }}:\n                </h3>\n\n                <Button type=\"button\"\n                        id=\"yes\"\n                        variant=\"text\"\n                        color=\"white\"\n                        class=\"ml-auto\"\n                        startIcon=\"folderAdd\"\n                        :onClick=\"openNewFolderModal\"\n                >\n                  {{ t('Add new folder') }}\n                </Button>\n              </div>\n              <div class=\"flex w-full flex-col gap-1\">\n                <template v-if=\"settings?.folder_library\">\n                  <template\n                      v-for=\"folderLibrary in settings?.folder_library\"\n                      :key=\"folderLibrary.folder_id\">\n                    <Folder\n                        :folder=\"folderLibrary\"\n                        :type=\"settings.type\"\n                        :setEncoderQualities=\"setEncoderQualities\"\n                        :handleDeleteFolder=\"handleDeleteFolder\"/>\n                  </template>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <template v-slot:actions>\n          <Button type=\"button\"\n                  id=\"refresh\"\n                  variant=\"text\"\n                  startIcon=\"folderSwap\"\n                  :disabled=\"loadingRefresh\"\n                  color=\"auto\"\n                  :class=\"loadingRefresh ? 'first:children:animate-spin !cursor-not-allowed' : ''\"\n                  @click=\"handleRefresh\">\n            {{ t('Refresh') }}\n          </button>\n          <Button type=\"button\"\n                  id=\"rescan\"\n                  variant=\"text\"\n                  startIcon=\"folderSwap\"\n                  :disabled=\"loadingRescan\"\n                  color=\"auto\"\n                  :class=\"loadingRescan ? 'first:children:animate-spin !cursor-not-allowed' : ''\"\n                  @click=\"handleRescan\">\n            {{ t('Rescan') }}\n          </button>\n          <Button type=\"button\"\n                  id=\"remove\"\n                  variant=\"text\"\n                  class=\"children:text-gray-400 children:transition-colors children:duration-100 children:hover:text-red-dark-8\"\n                  startIcon=\"folderRemove\"\n                  color=\"red\"\n                  @click=\"openDeleteConfirm\">\n            {{ t('Remove') }}\n          </button>\n          <Button type=\"button\"\n                  id=\"add\"\n                  variant=\"text\"\n                  class=\"mr-auto\"\n                  color=\"auto\"\n                  startIcon=\"folderAdd\"\n                  @click=\"openAddContentModal\">\n            {{ t('Add content') }}\n          </button>\n          <Button type=\"button\"\n                  id=\"cancel\"\n                  variant=\"text\"\n                  color=\"white\"\n                  @click=\"handleCancel\">\n            {{ t('Cancel') }}\n          </Button>\n          <Button type=\"button\"\n                  id=\"save\"\n                  variant=\"default\"\n                  color=\"theme\"\n                  @click=\"handleSave\">\n            {{ t('Save') }}\n          </button>\n        </template>\n\n        <NewFolderModal\n            :close=\"closeNewModal\"\n            :folder=\"folder\"\n            :open=\"newModalOpen\"\n            :setFolder=\"setFolder\"\n        />\n\n        <DeleteLibraryModal\n            v-if=\"settings?.id\"\n            :id=\"settings?.id\"\n            :name=\"settings?.title\"\n            :close=\"closeDeleteConfirm\"\n            :open=\"deleteConfirmOpen\"\n        />\n\n        <AddContentModal\n            v-if=\"settings\"\n            :closeAddContentModal=\"closeAddModal\"\n            :addContentModalOpen=\"addModalOpen\"\n            :librarySettings=\"settings\"\n        />\n      </DashboardLayout>\n    </ion-content>\n  </ion-page>\n</template>\n"],"names":["t","useTranslation","props","__props","watch","value","path","ref","lock","directorySeparator","newValue","showFolders","loading","getFolders","folder","serverClient","data","f","_b","_a","handleGoUp","handleClick","onMounted","route","useRoute","query","useQueryClient","handleCreateFolder","handleDelete","encoderProfiles","useServerClient","availableQualities","computed","encoderQualities","toRaw","_c","quality","profile","newVal","deleteConfirmOpen","openDeleteConfirm","closeDeleteConfirm","emit","__emit","defs","svgPaths","checked","block","file","nextTick","fileList","files","showModal","currentLibrary","destinationFolder","libraries","currentServer","l","_d","_f","_e","pushFile","popFile","getFileList","response","submit","openModal","closeModal","setFolder","checkboxState","checkboxValue","handleSelectAll","continueAvailable","error","refetch","languages","settings","onBeforeMount","title","media_type","specialName","subtitleLanguages","autoRefreshInterval","image","perfectSubtitleMatch","realtime","folders","media_types","m","newModalOpen","openNewFolderModal","closeNewModal","addModalOpen","openAddContentModal","closeAddModal","loadingRefresh","handleRefresh","loadingRescan","handleRescan","handleCancel","handleSave","setEncoderQualities","profiles","p","handleDeleteFolder"],"mappings":"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"}