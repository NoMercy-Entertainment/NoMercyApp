{"version":3,"file":"ThemeColors.vue_vue_type_script_setup_true_lang-Bth0ajh-.js","sources":["../../src/views/Preferences/Display/components/DeviceName.vue","../../src/views/Preferences/Display/components/DisplayLanguage.vue","../../src/views/Preferences/Display/components/CardStylePicker.vue","../../src/views/Preferences/Display/components/ColorIndication.vue","../../src/views/Preferences/Display/components/AutoColorTheming.vue","../../src/views/Preferences/Display/components/ScreensaverSettings.vue","../../src/views/Preferences/Display/components/SchemePicker.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\";\nimport { refDebounced } from \"@vueuse/core\";\n\nimport { deviceName, setDeviceName } from \"@/store/deviceInfo\";\n\nconst name = ref(deviceName.value);\nconst debouncedName = refDebounced(name, 1000);\nwatch(debouncedName, (value) => {\n  setDeviceName(value);\n});\n</script>\n\n<template>\n  <div class=\"xl:col-start-1 2xl:col-span-2 2xl:col-start-1\">\n    <div class=\"flex flex-col gap-2\">\n      <label for=\"name\">{{ $t('Device name') }}</label>\n      <InputText id=\"name\" v-model=\"name\" class=\"mb-4 w-full\" placeholder=\"...\" />\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\nimport {refDebounced} from \"@vueuse/core\";\n\nimport { Language } from \"@/types/api/shared\";\n\nimport {displayLanguage, setDisplayLanguage} from \"@/store/preferences\";\nimport {languages} from \"@/config/i18next\";\n\nimport LanguageSelect from \"@/components/Forms/LanguageSelect.vue\";\n\nconst language = ref<Language>(languages?.find(l => l.iso_639_1 == displayLanguage.value)\n    ?? { iso_639_1: 'en', name: 'English', english_name: 'English' });\nconst debouncedName = refDebounced(language, 100);\nwatch(debouncedName, (value) => {\n  if (!value) return;\n  setDisplayLanguage(value?.iso_639_1);\n});\n\n</script>\n\n<template>\n\t<div class=\"xl:col-start-1 2xl:col-span-2 2xl:col-start-1\">\n\t\t<LanguageSelect v-if=\"languages\" id=\"language\" :languages=\"languages\" v-model=\"language\" class=\"mb-4\" name=\"Display language\" />\n\t</div>\n</template>\n","<script setup lang='ts'>\nimport { watch } from 'vue';\nimport { useTranslation } from 'i18next-vue';\nimport MoooomIcon from \"@/components/Images/icons/MoooomIcon.vue\";\nimport { setShowBackdrops, showBackdrops } from \"@/store/preferences\";\nimport { useToggle } from \"@vueuse/core\";\n\nconst [value, toggle] = useToggle(showBackdrops.value);\n\nconst { t } = useTranslation();\n\nwatch(value, (newVal) => {\n\tsetShowBackdrops(newVal);\n});\n\n</script>\n\n<template>\n\t<div class='mb-8 flex select-none flex-col gap-3'>\n\t\t<div class='flex items-center justify-between'>\n\t\t\t<p class='font-bold'>{{ t('Card style') }}</p>\n\t\t</div>\n\t\t<div\n\t\t\tclass='relative mr-2 flex h-12 items-center justify-between rounded-lg border-4 border-transparent py-2 ring-1 transition-transform duration-300 bg-auto-1 ring-auto-12'>\n\t\t\t<div class=\"\n          absolute z-0 h-10 w-1/2 transition-all duration-300 bg-gradient-to-b rounded-[4px] button-filled\n\n          from-[rgb(var(--color-slate-11))]\n          dark:from-[rgb(var(--color-slate-7))]\n\n          to-[rgb(var(--color-slate-10))]\n          dark:to-[rgb(var(--color-slate-5))]\n\n          shadow-[0_1px_0_0_rgba(255,255,255,0.20)_inset,0_-1px_0_0_rgba(var(--background-auto-2)/60%)_inset,0_22px_30px_-4px_rgba(var(--background-auto-2)/70%)]\n          dark:shadow-[0_1px_0_0_rgba(255,255,255,0.20)_inset,0_-1px_0_0_rgba(var(--background-auto-2)/60%)_inset,0_22px_30px_-4px_rgba(var(--background-auto-2)/70%)]\n      \"\n\t\t\t\t:class=\"value ? 'translate-x-full' : ''\">\n\t\t\t</div>\n\t\t\t<button class='pointer-events-auto z-10 flex w-1/2 items-center gap-2 px-4 py-1' @click=\"() => value = false\">\n\t\t\t\t<span class='flex h-5 w-5 items-center'>\n\t\t\t\t\t<MoooomIcon icon=\"portrait\" class=\"h-5 w-5\" />\n\t\t\t\t</span>\n\t\t\t\t<span>Poster</span>\n\t\t\t</button>\n\t\t\t<button class='pointer-events-auto z-10 flex w-1/2 items-center gap-2 px-5 py-1' @click=\"() => value = true\">\n\t\t\t\t<span class='flex h-5 w-5 items-center'>\n\t\t\t\t\t<MoooomIcon icon=\"landscape\" class=\"h-5 w-5\" />\n\t\t\t\t</span>\n\t\t\t\t<span>Backdrop</span>\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\";\nimport { setUsePercentageColors, usePercentageColors } from \"@/store/preferences\";\nimport Toggle from \"@/components/Forms/Toggle.vue\";\n\nconst value = ref(usePercentageColors.value);\n\nwatch(usePercentageColors, (v) => {\n\tvalue.value = v;\n});\n\nwatch(value, (value) => {\n\tsetUsePercentageColors(value);\n});\n\n</script>\n\n<template>\n\t<div class=\"mb-8 flex select-none flex-col gap-3\">\n\t\t<div class=\"flex flex-col\">\n\t\t\t<p class=\"font-bold\">{{ $t(\"Color indication\") }}</p>\n\t\t\t<p class=\"text-sm\">\n\t\t\t\t{{ $t(\"Easily visualize the percentage of episodes you have at your disposal.\") }}\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"flex flex-col duration-150 transition-color\">\n\t\t\t<div class=\"flex duration-150 transition-color\"\n\t\t\t\t:class=\"value ? 'justify-between' : 'justify-around'\">\n\t\t\t\t<template v-if=\"value\">\n\t\t\t\t\t<span>0%</span>\n\t\t\t\t\t<span>25%</span>\n\t\t\t\t\t<span>50%</span>\n\t\t\t\t\t<span>100%</span>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<span>&lt;10%</span>\n\t\t\t\t\t<span>&lt;50%</span>\n\t\t\t\t\t<span>&gt;50%</span>\n\t\t\t\t\t<span>100%</span>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t\t<span v-if=\"value\" class=\"h-2 w-full duration-150 transition-color\"\n\t\t\t\tstyle=\"background: linear-gradient(to right, rgb(255, 0, 0) 0%, rgb(255, 255, 0) 45%, rgb(0, 255, 0) 80%, rgb(0, 92, 0) 100%);\"></span>\n\t\t\t<span v-else class=\"h-2 w-full duration-150 transition-color\"\n\t\t\t\tstyle=\"background: linear-gradient(to right, rgb(238, 85, 68) 0%, rgb(238, 85, 68) 25%, rgb(255, 187, 51) 25%, rgb(255, 187, 51) 50%, rgb(68, 187, 68) 50%, rgb(68, 187, 68) 75%, rgb(153, 68, 255) 75%, rgb(153, 68, 255) 100%);\"></span>\n\t\t</div>\n\n\t\t<div class=\"flex w-full gap-2\">\n\t\t\t<Toggle id=\"usePercentageColors\" label=\"Manage\" v-model=\"value\" class=\"mr-2\" />\n\t\t\t<div class=\"flex flex-col justify-center\">\n\t\t\t\t<span class=\"whitespace-pre-wrap text-sm font-semibold\">{{ $t(\"Extended\") }}</span>\n\t\t\t\t<span class=\"h-5 whitespace-pre-wrap text-sm empty:hidden\"></span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n","<script setup lang='ts'>\nimport { ref, watch } from 'vue';\nimport { setUseAutoThemeColors, useAutoThemeColors } from \"@/store/preferences\";\nimport Toggle from \"@/components/Forms/Toggle.vue\";\n\nconst value = ref(useAutoThemeColors.value);\n\nwatch(useAutoThemeColors, (v) => {\n\tvalue.value = v;\n});\n\nwatch(value, (value) => {\n\tsetUseAutoThemeColors(value);\n});\n\n\n</script>\n\n<template>\n\t<div class='mb-8 flex select-none flex-col gap-3'>\n\t\t<div class='flex flex-col'>\n\t\t\t<p class='font-bold'>\n\t\t\t\t{{ $t('Auto theme') }}\n\t\t\t</p>\n\t\t\t<p class='text-sm'>\n\t\t\t\t{{ $t('Enables setting theme colors when loading shows or movies based on the backdrop image') }}.\n\t\t\t</p>\n\t\t</div>\n\t\t<div class='flex transition-transform duration-150'>\n\t\t\t<Toggle id=\"autoTheme\" label=\"Auto theme\" v-model=\"value\" class=\"mr-2\" />\n\t\t\t<div class=\"flex flex-col justify-center\">\n\t\t\t\t<span class=\"whitespace-pre-wrap text-sm font-semibold\">\n\t\t\t\t\t{{ $t('Enabled') }}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"h-5 whitespace-pre-wrap text-sm empty:hidden\"></span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n","<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\n\nimport { screensaverDelay, setScreensaverDelay } from \"@/store/preferences\";\n\nconst delay = ref(screensaverDelay.value);\nwatch(delay, (value) => {\n  setScreensaverDelay(value);\n});\n\n</script>\n\n<template>\n  <div class=\"flex flex-col gap-2\">\n    <label for=\"delay\">{{ $t('Screensaver delay') }}</label>\n    <div\n      class=\"mr-2 lg:col-start-1 lg:row-start-3 xl:col-start-3 xl:row-start-1 2xl:col-span-2 2xl:col-start-5 2xl:row-start-1\">\n      <InputNumber id=\"delay\" v-model=\"delay\" class=\"mb-4 w-full\" placeholder=\"...\" type=\"number\" />\n    </div>\n  </div>\n</template>\n","<script setup lang='ts'>\nimport { watch } from 'vue';\n\nimport { useColorMode } from '@vueuse/core';\nimport {darkMode, setColorScheme} from \"@/store/colorScheme\";\nimport {ColorScheme} from \"@/types/config\";\n\nconst scheme = useColorMode({\n    attribute: 'class',\n    modes: {\n        light: 'light',\n        system: 'system',\n        dark: 'dark',\n    }\n});\n\nwatch(darkMode, (value) => {\n  console.log(value);\n    if (value) {\n        changeTheme('dark');\n    } else {\n        changeTheme('light');\n    }\n});\n\nconst changeTheme = (value: ColorScheme) => {\n  scheme.value = value;\n\n  setColorScheme(value);\n};\n\n</script>\n\n<template>\n    <div class=\"flex select-none flex-col gap-3\">\n        <p class=\"font-bold\">\n            {{ $t('Scheme') }}\n        </p>\n        <div class=\"flex flex-row gap-2\">\n            <div class=\"flex flex-shrink-0 flex-grow-0 items-center justify-center gap-2\">\n                <button id=\"light\" title=\"Light\" @click=\"changeTheme('light')\"\n                    class=\"relative flex h-8 w-8 flex-shrink-0 flex-grow-0 items-center justify-center rounded-3xl outline border-2\"\n                    :class=\"scheme == 'light'\n                        ? 'outline-[#6e56cf]'\n                        : 'outline-transparent'\">\n                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                        class=\"flex-shrink-0 flex-grow-0\" preserveAspectRatio=\"xMidYMid meet\">\n                        <circle cx=\"15.0002\" cy=\"15\" r=\"15\" fill=\"#EEECEC\"></circle>\n                    </svg>\n                </button>\n<!--                <button id=\"auto\" title=\"System default\" @click=\"changeTheme('system')\"-->\n<!--                    class=\"relative flex h-8 w-8 flex-shrink-0 flex-grow-0 items-center justify-center rounded-3xl outline outline-2\"-->\n<!--                    :class=\"scheme == 'system'-->\n<!--                        ? 'outline-[#6e56cf]'-->\n<!--                        : 'outline-transparent'\">-->\n<!--                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"-->\n<!--                        class=\"flex-shrink-0 flex-grow-0 opacity-80\" preserveAspectRatio=\"xMidYMid meet\">-->\n<!--                        <circle opacity=\"0.8\" cx=\"15.0005\" cy=\"15\" r=\"15\" fill=\"url(#paint0_linear_4609_14480)\">-->\n<!--                        </circle>-->\n<!--                        <defs>-->\n<!--                            <linearGradient id=\"paint0_linear_4609_14480\" x1=\"0.333822\" y1=\"0.333333\" x2=\"30.3338\"-->\n<!--                                y2=\"30.3333\" gradientUnits=\"userSpaceOnUse\">-->\n<!--                                <stop offset=\"0.479993\" stop-color=\"#EEECEC\"></stop>-->\n<!--                                <stop offset=\"0.480523\" stop-color=\"rgb(var(&#45;&#45;color-slate-1))\"></stop>-->\n<!--                            </linearGradient>-->\n<!--                        </defs>-->\n<!--                    </svg>-->\n<!--                </button>-->\n                <button id=\"dark\" title=\"Dark\" @click=\"changeTheme('dark')\"\n                    class=\"relative flex h-8 w-8 flex-shrink-0 flex-grow-0 items-center justify-center rounded-3xl outline outline-2\"\n                    :class=\"scheme == 'dark'\n                        ? 'outline-[#6e56cf]'\n                        : 'border-transparent'\">\n                    <svg width=\"32\" height=\"32\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"\n                        class=\"flex-shrink-0 flex-grow-0 opacity-80\" preserveAspectRatio=\"xMidYMid meet\">\n                        <circle opacity=\"0.8\" cx=\"15.0005\" cy=\"15\" r=\"15\" fill=\"rgb(var(--color-slate-1))\"></circle>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n"],"names":["name","ref","deviceName","debouncedName","refDebounced","watch","value","setDeviceName","language","_a","languages","l","displayLanguage","setDisplayLanguage","toggle","useToggle","showBackdrops","t","useTranslation","newVal","setShowBackdrops","usePercentageColors","v","setUsePercentageColors","useAutoThemeColors","setUseAutoThemeColors","delay","screensaverDelay","setScreensaverDelay","scheme","useColorMode","darkMode","changeTheme","setColorScheme"],"mappings":"+lBAMM,MAAAA,EAAOC,EAAIC,EAAW,KAAK,EAC3BC,EAAgBC,EAAaJ,EAAM,GAAI,EACvC,OAAAK,EAAAF,EAAgBG,GAAU,CAC9BC,EAAcD,CAAK,CAAA,CACpB,wWCCD,MAAME,EAAWP,IAAcQ,EAAAC,IAAA,YAAAD,EAAW,KAAKE,GAAKA,EAAE,WAAaC,EAAgB,SAC5E,CAAE,UAAW,KAAM,KAAM,UAAW,aAAc,UAAW,EAC9DT,EAAgBC,EAAaI,EAAU,GAAG,EAC1C,OAAAH,EAAAF,EAAgBG,GAAU,CACzBA,GACLO,EAAmBP,GAAA,YAAAA,EAAO,SAAS,CAAA,CACpC,ioBCVD,KAAM,CAACA,EAAOQ,CAAM,EAAIC,EAAUC,EAAc,KAAK,EAE/C,CAAE,EAAAC,CAAE,EAAIC,EAAe,EAEvB,OAAAb,EAAAC,EAAQa,GAAW,CACxBC,EAAiBD,CAAM,CAAA,CACvB,s6DCRK,MAAAb,EAAQL,EAAIoB,EAAoB,KAAK,EAErC,OAAAhB,EAAAgB,EAAsBC,GAAM,CACjChB,EAAM,MAAQgB,CAAA,CACd,EAEKjB,EAAAC,EAAQA,GAAU,CACvBiB,EAAuBjB,CAAK,CAAA,CAC5B,+xCCRK,MAAAA,EAAQL,EAAIuB,EAAmB,KAAK,EAEpC,OAAAnB,EAAAmB,EAAqBF,GAAM,CAChChB,EAAM,MAAQgB,CAAA,CACd,EAEKjB,EAAAC,EAAQA,GAAU,CACvBmB,EAAsBnB,CAAK,CAAA,CAC3B,46BCRK,MAAAoB,EAAQzB,EAAI0B,EAAiB,KAAK,EAClC,OAAAtB,EAAAqB,EAAQpB,GAAU,CACtBsB,EAAoBtB,CAAK,CAAA,CAC1B,kfCDD,MAAMuB,EAASC,EAAa,CACxB,UAAW,QACX,MAAO,CACH,MAAO,QACP,OAAQ,SACR,KAAM,MAAA,CACV,CACH,EAEKzB,EAAA0B,EAAWzB,GAAU,CACzB,QAAQ,IAAIA,CAAK,EAEX0B,EADA1B,EACY,OAEA,OAFM,CAGtB,CACH,EAEK,MAAA0B,EAAe1B,GAAuB,CAC1CuB,EAAO,MAAQvB,EAEf2B,EAAe3B,CAAK,CACtB;;;;;;"}