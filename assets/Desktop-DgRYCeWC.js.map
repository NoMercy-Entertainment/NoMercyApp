{"version":3,"mappings":"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","names":["registerPlugin","__vitePreload","ref","useRoute","onMounted","onUnmounted","user","router","defineComponent","resolveComponent","openBlock","createElementBlock","createBaseVNode","unref","toDisplayString","createVNode","_sfc_main$2","createBlock","withCtx","IonContent","IonPage","_sfc_main$3","Chromecast","m","useChromecast","_a","_b","castContext","currentDevice","castSession","currentMedia","isCasting","isConnected","event","startCasting","onRequestSessionSuccess","onLaunchError","stopCasting","sendMedia","onMediaDiscovered","media","onMediaError","error","contentId","type","mediaInfo","config","request"],"ignoreList":[0],"sources":["../../node_modules/@gameleap/capacitor-chromecast/dist/esm/index.js","../../src/hooks/useChromeCast.ts","../../src/components/Buttons/Chromecast.vue"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Chromecast = registerPlugin('Chromecast', {\n    web: () => import('./web').then(m => new m.ChromecastWeb()),\n});\nexport * from './definitions';\nexport { Chromecast };\n//# sourceMappingURL=index.js.map","// @ts-nocheck\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport {CastContext, CastDevice, CastSession, MediaInfo} from \"@/vite-env\";\nimport {user} from \"@/store/user\";\nimport router from \"@/router\";\nimport {useRoute} from \"vue-router\";\n\nexport function useChromecast() {\n    const castContext = ref<CastContext>(window.cast?.framework.CastContext.getInstance());\n    const currentDevice = ref<CastDevice | null>(null);\n    const castSession = ref<CastSession | null>();\n    const currentMedia = ref<MediaInfo | null>();\n\n    const isCasting = ref(false);\n    const isConnected = ref(false);\n\n    const route = useRoute();\n\n    onMounted(() => {\n        if (!castContext.value) return;\n\n        castContext.value.setOptions({\n            receiverApplicationId: '925B4C3C',\n            autoJoinPolicy: window.chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED\n        });\n\n        console.raw('useChromecast', castContext.value);\n\n        castContext.value.addEventListener(\n            window.cast.framework.CastContextEventType.CONNECTED,\n            function(event) {\n                console.log('CastContext: CastState connected', event);\n            });\n\n        castContext.value.addEventListener(\n            window.cast.framework.CastContextEventType.DISCONNECTED,\n            function(event) {\n                console.log('CastContext: CastState disconnected', event);\n            });\n\n        castContext.value.addEventListener(\n            window.cast.framework.CastContextEventType.CAST_STATE_CHANGED,\n            function(event) {\n                console.log(`CastContext: CastState changed: ${event.castState}`);\n            });\n\n        castContext.value.addEventListener(\n            window.cast.framework.CastContextEventType.SESSION_STATE_CHANGED,\n            function(event) {\n                console.log(`CastContext: SessionState changed: ${event.sessionState}`, event);\n                switch (event.sessionState) {\n                    case window.cast.framework.SessionState.SESSION_STARTED:\n                    case window.cast.framework.SessionState.SESSION_RESUMED:\n                        castContext.value = window.cast.framework.CastContext.getInstance();\n                        castSession.value = event.session;\n                        isConnected.value = event.sessionState === window.cast.framework.SessionState.SESSION_RESUMED;\n                        isCasting.value = !!event.session;\n                        currentDevice.value = event.session.getCastDevice();\n                        currentMedia.value = event.session.getMediaSession();\n                        break;\n                    case window.cast.framework.SessionState.SESSION_ENDED:\n                        castContext.value = window.cast.framework.CastContext.getInstance();\n                        castSession.value = null;\n                        isConnected.value = false;\n                        isCasting.value = false;\n                        currentDevice.value = null;\n                        currentMedia.value = null;\n                        break;\n                }\n            })\n    });\n\n    const startCasting = () => {\n        console.raw('startCasting', castContext.value);\n        castSession.value = null;\n        window.chrome.cast.requestSession(onRequestSessionSuccess, onLaunchError);\n    };\n\n    const stopCasting = () => {\n        console.raw('stopCasting', castContext.value);\n\n        window.cast.framework.CastContext.getInstance().endCurrentSession(true);\n\n        castSession.value = null;\n    };\n\n    onUnmounted(() => {\n\n    });\n\n    function onRequestSessionSuccess(e: CastSession): void {\n        castSession.value = e;\n        console.log('onRequestSessionSuccess', e);\n        isConnected.value = true;\n        isCasting.value = true;\n        currentDevice.value = e?.receiver;\n\n        sendMedia('7Xdu1sAAAAASUVORK5CYII', 'video');\n    }\n\n    function onLaunchError(e: typeof window.cast.Error): void {\n        console.error(e);\n    }\n\n    function onMediaDiscovered(media: MediaInfo): void {\n        console.log('onMediaDiscovered', media);\n        currentMedia.value = media;\n    }\n\n    function onMediaError(error: any): void {\n        console.error('onMediaError', error);\n    }\n\n    function sendMedia(contentId: string, type: string) {\n        console.log('sendMedia', contentId, type);\n\n        const mediaInfo = new window.chrome.cast.media.MediaInfo(contentId, type);\n        mediaInfo.customData = config;\n\n        const request = new window.chrome.cast.media.LoadRequest(mediaInfo);\n        castSession.value?.loadMedia(request,\n            onMediaDiscovered,\n            onMediaError);\n    }\n\n    const config = {\n        refreshToken: user.value?.refreshToken ?? localStorage.getItem('refresh_token'),\n        redirectUrl: router.resolve({name: 'Watch', params: {id: 60808, type: 'tv' }}).path,\n    };\n\n    return {\n        isCasting,\n        isConnected,\n        currentDevice,\n        config,\n        startCasting,\n        stopCasting,\n        sendMedia\n    };\n}","<script setup lang=\"ts\">\nimport {onMounted} from \"vue\";\nimport {Chromecast} from \"@gameleap/capacitor-chromecast\";\n\nimport {useChromecast} from \"@/hooks/useChromeCast\";\nimport MoooomIcon from \"@/components/Images/icons/MoooomIcon.vue\";\n\nconst { currentDevice, isCasting, config, startCasting, stopCasting } = useChromecast();\n\n\nonMounted(() => {\n  console.log('mounted', config);\n  // initChromeCast();\n});\n\n</script>\n\n<template>\n  <div>\n    <h1>Chromecast Demo</h1>\n\n    <div class=\"flex flex-col gap-4\">\n      <div v-if=\"!currentDevice\"><h2>No device connected</h2></div>\n      <div v-else>\n        <h2>Connected to: {{ currentDevice?.friendlyName }}</h2>\n      </div>\n\n      <div class=\"flex gap-4\">\n        <google-cast-launcher></google-cast-launcher>\n\n        <button class=\"flex gap-2 items-center\" @click=\"startCasting()\" :disabled=\"isCasting\">\n          <MoooomIcon icon=\"chromecast\" className=\"m-2 h-6 w-auto\"/>\n          <span>Start Casting</span>\n        </button>\n\n        <button class=\"flex gap-2 items-center\" @click=\"stopCasting()\" :disabled=\"!isCasting\">\n          <MoooomIcon icon=\"stop\" className=\"m-2 h-6 w-auto\"/>\n          <span>Stop Casting</span>\n        </button>\n      </div>\n\n      <div class=\"flex gap-4\">\n\n        <button class=\"flex gap-2 items-center\" :onclick=\"() => Chromecast.requestSession()\">\n          <MoooomIcon icon=\"chromecast\" className=\"m-2 h-6 w-auto\"/>\n          <span>Start Casting</span>\n        </button>\n        <button class=\"flex gap-2 items-center\" :onclick=\"() => Chromecast.loadMedia({\n            contentId: '7Xdu1sAAAAASUVORK5CYII',\n            type: 'video',\n            customData: config,\n        })\">\n          <MoooomIcon icon=\"play\" className=\"m-2 h-6 w-auto\"/>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n\n</style>"],"file":"assets/Desktop-DgRYCeWC.js"}