{"version":3,"file":"CardIndicator.vue_vue_type_script_setup_true_lang-CGW-t_PT.js","sources":["../../src/components/Cards/CardIndicator.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, PropType } from 'vue';\n\nimport type { InfoResponse } from \"@/types/api/base/info\";\n\nimport { useTranslation } from \"i18next-vue\";\nimport { episodeCounter } from \"@/lib/utils\";\nimport { getColorFromPercent, percentColors } from \"@/lib/colorHelper\";\n\nconst { t } = useTranslation();\n\ninterface Indicator {\n    have_items: number,\n    number_of_items: number,\n}\n\nconst props = defineProps({\n    data: {\n        type: Object as PropType<Indicator & any>,\n        required: true,\n    },\n});\n\nconst { number_of_items, have_items } = episodeCounter(props.data);\n\nconst percent = have_items && number_of_items ? (have_items / number_of_items) * 100 : 0;\nconst color = getColorFromPercent(percent, percentColors);\n\nconst isMovie = computed(() => {\n    return (props.data as InfoResponse).type === 'movie';\n});\n\nconst value = computed(() => {\n    if (have_items == null && number_of_items == null) {\n        return;\n    }\n    if (have_items == 0 && number_of_items == 0) {\n        return;\n    }\n\n    return `${have_items} ${t('of')} ${number_of_items}`;\n});\n\n\n</script>\n\n<template>\n    <span v-if=\"isMovie\"\n        class=\"absolute top-4 left-0 z-50 flex h-5 w-2 sm:w-4 place-items-center items-center justify-center overflow-hidden whitespace-nowrap rounded-tr-md rounded-br-md border-r border-b border-gray-900/50 px-1 text-xs text-transparent duration-300 animate-[grow_.3] pill shadow-pill lg:-left-2 lg:text-transparent\"\n        :class=\"{\n            'bg-[#94f]': number_of_items == 1,\n        }\" :style=\"`\n            background-image: ${percentColors\n                ? `linear-gradient(90deg, ${color} 0%, ${color} 100%)`\n                : ''};\n\t\t\t\t`\">\n    </span>\n    <span v-else-if=\"value\"\n        class=\"absolute text-white sm:text-transparent w-[var(--width)] sm:w-4 items-center h-5 z-50 left-0 lg:-left-2 top-4 rounded-tr-md rounded-br-md overflow-hidden flex px-1 text-xs whitespace-nowrap animate-[grow_.3] duration-300 place-items-center justify-center border-r border-b border-gray-900/50 pill shadow-pill lg:text-transparent lg:group-hover/card:text-white lg:group-focus/card:text-white group-hover/card:left-0 group-focus-within/card:left-0 group-focus-visible/card:left-0 group-hover/card:w-[var(--width)] group-focus-within/card:w-[var(--width)] group-focus-visible/card:w-[var(--width)] tv:text-white transition-all\"\n        :class=\"{\n            'bg-[#94f] group-hover/card:text-white': percent == 100,\n            'bg-[#4b4] group-hover/card:text-white': percent >= 70 && percent < 100,\n            '!text-black sm:!text-transparent group-hover/card:!text-black group-focus-within/card:!text-black font-semibold': percent > 40 && percent < 80,\n            'bg-[#fb3] sm:group-hover/card:text-white': percent > 0 && percent < 70,\n            'bg-[#f44]': percent == 0,\n        }\" :style=\"`\n            background-image: ${percentColors\n                ? `linear-gradient(90deg, ${color} 0%, ${color} 100%)`\n                : ''};\n            color: ${have_items == null ? 'transparent' : ''};\n          --width: calc(${value?.length} * 1ch);\n          max-width: calc(${value?.length} * 1ch);\n      `\">\n        {{ value }}\n    </span>\n</template>\n"],"names":["t","useTranslation","props","__props","number_of_items","have_items","episodeCounter","percent","color","getColorFromPercent","percentColors","isMovie","computed","value"],"mappings":"sNASM,KAAA,CAAE,EAAAA,CAAE,EAAIC,EAAe,EAOvBC,EAAQC,EAOR,CAAE,gBAAAC,EAAiB,WAAAC,CAAA,EAAeC,EAAeJ,EAAM,IAAI,EAE3DK,EAAUF,GAAcD,EAAmBC,EAAaD,EAAmB,IAAM,EACjFI,EAAQC,EAAoBF,EAASG,CAAa,EAElDC,EAAUC,EAAS,IACbV,EAAM,KAAsB,OAAS,OAChD,EAEKW,EAAQD,EAAS,IAAM,CACrB,GAAA,EAAAP,GAAc,MAAQD,GAAmB,OAGzC,EAAAC,GAAc,GAAKD,GAAmB,GAI1C,MAAO,GAAGC,CAAU,IAAIL,EAAE,IAAI,CAAC,IAAII,CAAe,EAAA,CACrD;;;;;;;"}