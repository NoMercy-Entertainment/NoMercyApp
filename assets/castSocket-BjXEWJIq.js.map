{"version":3,"file":"castSocket-BjXEWJIq.js","sources":["../../src/lib/clients/castSocket.ts"],"sourcesContent":["import { computed, type Ref, ref, watch } from 'vue';\nimport { HubConnectionState } from '@microsoft/signalr/src/HubConnection';\n\nimport SocketClient from '@/lib/clients/socketClient/SocketClient';\nimport { connect, onConnect, onDisconnect } from '@/lib/clients/socketClient/events';\nimport { currentServer } from '@/store/currentServer';\nimport { user } from '@/store/user';\n\nconst castSocket: Ref<SocketClient | undefined> = ref();\nexport const connection = computed(() => castSocket.value?.connection);\nexport const castSocketIsConnected = ref(false);\n\nconst connected = () => {\n\tcastSocketIsConnected.value = true;\n\tconsole.log('Connected to Cast SignalR');\n\tdocument.dispatchEvent(new Event('castHub-connected'));\n\n\tif (castSocket.value?.connection) {\n\t\tonConnect(castSocket.value?.connection);\n\t\tconnect(castSocket.value?.connection);\n\t}\n};\n\nconst disconnected = (err?: Event | void) => {\n\tcastSocketIsConnected.value = false;\n\tconsole.log('Disconnected from Cast SignalR', err);\n\tdocument.dispatchEvent(new Event('castHub-disconnected'));\n};\n\nconst error = (err: Error) => {\n\tcastSocketIsConnected.value = false;\n\tconsole.error('Cast SignalR Error:', err);\n\tdocument.dispatchEvent(new Event('castHub-error'));\n}\n\nwatch(currentServer, async (newServer) => {\n\tconst accessToken = user.value?.accessToken;\n\n\tif (newServer && castSocketIsConnected.value) {\n\t\tcastSocket.value?.connection?.stop().then();\n\t\tcastSocket.value?.dispose();\n\t\tcastSocket.value = new SocketClient(currentServer.value!.serverBaseUrl!, accessToken, 'castHub');\n\n\t\tcastSocket.value?.connection?.on('connected', connected);\n\t\tcastSocket.value?.connection?.on('disconnected', disconnected);\n\n\t\tawait connectToHub()\n\t\t\t.catch(error);\n\t}\n});\n\nconst connectToHub = async () => {\n\tif (castSocket.value?.connection?.state === HubConnectionState.Connected) return;\n\n\treturn castSocket.value?.connection?.start()\n\t\t.then(connected);\n};\n\nexport const stopCastSocket = async () => {\n\ttry {\n\t\tif (castSocket.value?.connection?.state === HubConnectionState.Disconnected) return;\n\n\t\treturn castSocket.value?.connection?.stop()\n\t\t\t.then(disconnected)\n\t\t\t.catch(disconnected);\n\n\t} catch (err) {\n\t\tconsole.error('Error stopping Cast SignalR:', err);\n\t\tdisconnected();\n\t}\n}\n\nexport const startCastSocket = async () => {\n\tconst accessToken = user.value?.accessToken;\n\n\tif (currentServer.value && (!castSocket.value?.connection?.state || castSocket.value?.connection?.state === HubConnectionState.Disconnected)) {\n\t\tcastSocket.value = new SocketClient(currentServer.value.serverBaseUrl, accessToken, 'castHub');\n\n\t\tcastSocket.value?.connection?.on('connected', connected);\n\t\tcastSocket.value?.connection?.on('disconnected', disconnected);\n\n\t\tawait connectToHub()\n\t\t\t.catch(error);\n\n\t\tcastSocket.value?.connection?.onreconnecting((error: Error | undefined) => {\n\t\t\tconsole.log('SignalR Disconnected.', error?.message);\n\t\t\tonDisconnect(castSocket.value?.connection);\n\t\t\tdisconnected();\n\t\t});\n\t\tcastSocket.value?.connection?.onreconnected(() => {\n\t\t\tconsole.log('SignalR Reconnected.');\n\t\t\tonConnect(castSocket.value?.connection);\n\t\t\tconnected();\n\t\t});\n\t}\n}\n"],"names":["castSocket","ref","connection","computed","_a","castSocketIsConnected","connected","onConnect","_b","connect","_c","disconnected","err","error","watch","currentServer","newServer","accessToken","user","_d","SocketClient","_f","_e","_h","_g","connectToHub","HubConnectionState","stopCastSocket","startCastSocket","_i","_k","_j","onDisconnect","_m","_l"],"mappings":"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"}