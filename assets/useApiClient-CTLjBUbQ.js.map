{"version":3,"file":"useApiClient-CTLjBUbQ.js","sources":["../../src/lib/clients/useApiClient.ts"],"sourcesContent":["import {ComputedRef, Ref, ref, toRaw, UnwrapRef} from 'vue';\nimport {QueryKey, useQuery, UseQueryReturnType} from '@tanstack/vue-query';\n\nimport apiClient from './apiClient';\nimport {AxiosError} from 'axios';\nimport {ErrorResponse} from '@/types/server';\nimport {queryKey} from '@/lib/clients/useInfiniteServerClient';\nimport router from '@/router';\n\nexport interface ServerClientProps {\n\tpath?: string;\n\tdata?: any;\n\tparams?: any;\n\tcacheKey?: string;\n\tkeepForever?: boolean;\n\tenabled?: Ref<boolean> | ComputedRef<boolean> | boolean;\n\trefetchInterval?: number;\n\tdelay?: number;\n\tqueryKey?: QueryKey | unknown[];\n\ttype?: 'get' | 'post' | 'put' | 'patch' | 'delete' | 'head';\n\tsuspense?: Ref<UnwrapRef<boolean>>\n\tlimit?: number;\n}\n\ntype Return<T> = UseQueryReturnType<T, AxiosError<ErrorResponse>> extends {\n\tsetLetter: (value: string) => void;\n} ? UseQueryReturnType<T, AxiosError<ErrorResponse>> : UseQueryReturnType<T, AxiosError<ErrorResponse>> & {\n\tsetLetter: (value: string) => void;\n};\n\nconst useApiClient = <T, >(options?: ServerClientProps): Return<T> => {\n\n\tconst letter = ref<string>(router.currentRoute.value.params?.letter as string || '_');\n\n\tconst setLetter = (value: string) => {\n\t\tletter.value = value;\n\t\t// queryClient.refetch();\n\t};\n\n\trouter.afterEach( () => {\n\t\tsetLetter(router.currentRoute.value.params.letter as string);\n\t});\n\n\tconst getDataValues = () => {\n\t\treturn Object.keys(options?.data ?? {})\n\t\t\t.reduce((acc, key) => {\n\t\t\t\tacc[key] = toRaw(options?.data![key].value);\n\t\t\t\treturn acc;\n\t\t\t}, {} as Record<string | number, any>);\n\t}\n\n\tconst type = ref<'get' | 'post' | 'put' | 'patch' | 'delete' | 'head'>(options?.type ?? 'get');\n\n\tconst useQueryC = useQuery({\n\t\t...options,\n\t\tqueryKey: queryKey(options),\n\t\t// enabled: !!currentServer.value?.id && options?.enabled,\n\t\tenabled: true,\n\t\tretry: 0,\n\t\t// initialData: () => {\n\t\t// \tget(queryKey(options) as IDBKeyRange | IDBValidKey)\n\t\t// \t\t.then(value => {\n\t\t// \t\t\tqueryClient.setQueryData(queryKey(options),value);\n\t\t// \t\t});\n\t\t// \treturn {\n\t\t// \t}\n\t\t// },\n\t\trefetchOnMount: true,\n\t\trefetchOnWindowFocus: false,\n\t\tnetworkMode: 'offlineFirst',\n\t\tstaleTime: options?.keepForever\n\t\t\t? Infinity\n\t\t\t: 1000 * 60 * 5,\n\t\tqueryFn: () => {\n\t\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\t\tconst controller = new AbortController();\n\n\t\t\t\tsetTimeout(() => {\n\n\t\t\t\t\tlet promise;\n\n\t\t\t\t\tif ((options?.path ?? router.currentRoute.value.fullPath).includes('undefined')) return Promise.reject();\n\n\t\t\t\t\tif (type.value == 'get') {\n\t\t\t\t\t\tpromise = apiClient<T>()\n\t\t\t\t\t\t\t.get<T>(\n\t\t\t\t\t\t\t\toptions?.path ?? router.currentRoute.value.fullPath,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\t\t\t\tletter: letter.value,\n\t\t\t\t\t\t\t\t\t\t...options?.params,\n\t\t\t\t\t\t\t\t\t\t...getDataValues(),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\treturn response.data?.data ?? response.data;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(reject);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (type.value == 'post') {\n\n\t\t\t\t\t\tpromise = apiClient<T>()\n\t\t\t\t\t\t\t.post<T>(options?.path ?? router.currentRoute.value.fullPath,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tletter: router.currentRoute.value.params.letter ?? undefined,\n\t\t\t\t\t\t\t\t\t...options?.data,\n\t\t\t\t\t\t\t\t\t...getDataValues(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(({data}) => {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\treturn data?.data ?? data;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(reject);\n\n\t\t\t\t\t}\n\t\t\t\t\telse if (type.value == 'put') {\n\t\t\t\t\t\tpromise = apiClient<T>()\n\t\t\t\t\t\t\t.put<T>(options?.path ?? router.currentRoute.value.fullPath,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tletter: router.currentRoute.value.params.letter ?? undefined,\n\t\t\t\t\t\t\t\t\t...options?.data,\n\t\t\t\t\t\t\t\t\t...getDataValues(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(({data}) => {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\treturn data?.data ?? data;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(reject);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type.value == 'patch') {\n\t\t\t\t\t\tpromise = apiClient<T>()\n\t\t\t\t\t\t\t.patch<T>(options?.path ?? router.currentRoute.value.fullPath,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tletter: router.currentRoute.value.params.letter ?? undefined,\n\t\t\t\t\t\t\t\t\t...options?.data,\n\t\t\t\t\t\t\t\t\t...getDataValues(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(({data}) => {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\treturn data?.data ?? data;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(reject);\n\t\t\t\t\t}\n\t\t\t\t\telse if (type.value == 'delete') {\n\t\t\t\t\t\tpromise = apiClient<T>()\n\t\t\t\t\t\t\t.delete<T>(options?.path ?? router.currentRoute.value.fullPath,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tletter: router.currentRoute.value.params.letter ?? undefined,\n\t\t\t\t\t\t\t\t\t...options?.data,\n\t\t\t\t\t\t\t\t\t...getDataValues(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsignal: controller.signal,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(({data}) => {\n\t\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t\treturn data?.data ?? data;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(reject);\n\t\t\t\t\t}\n\n\t\t\t\t\t// promise!.then(async (value) => {\n\t\t\t\t\t// \tawait set(queryKey(options) as IDBKeyRange | IDBValidKey, value);\n\t\t\t\t\t// });\n\n\t\t\t\t\treturn resolve(promise as Promise<T>);\n\n\t\t\t\t}, options?.delay ?? 0);\n\t\t\t});\n\t\t},\n\t}) as UseQueryReturnType<T, AxiosError<ErrorResponse>>;\n\n\treturn {\n\t\t...useQueryC,\n\t\tsetLetter,\n\t};\n\n};\n\nexport default useApiClient;\n"],"names":["ref","router","useQuery","queryKey","apiClient","toRaw","useApiClient","options","_a","letter","setLetter","value","getDataValues","acc","key","type","resolve","reject","controller","promise","response","data"],"mappings":"AA8BM,OAAA,KAAAA,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,MAAA,sBAAA,MAAAC,EAAqBC,GAA2C,CAAhE,IAAAC,EAEL,MAAMC,EAAST,IAAYQ,EAAAP,EAAO,aAAa,MAAM,SAA1B,YAAAO,EAAkC,SAAoB,GAAG,EAE9EE,EAAaC,GAAkB,CACpCF,EAAO,MAAQE,CAEhB,EAEAV,EAAO,UAAW,IAAM,CACvBS,EAAUT,EAAO,aAAa,MAAM,OAAO,MAAgB,CAAA,CAC3D,EAED,MAAMW,EAAgB,IACd,OAAO,MAAKL,GAAA,YAAAA,EAAS,OAAQ,CAAE,CAAA,EACpC,OAAO,CAACM,EAAKC,KACbD,EAAIC,CAAG,EAAIT,EAAME,GAAA,YAAAA,EAAS,KAAMO,GAAK,KAAK,EACnCD,GACL,EAAkC,EAGjCE,EAAOf,GAA0DO,GAAA,YAAAA,EAAS,OAAQ,KAAK,EAsItF,MAAA,CACN,GArIiBL,EAAS,CAC1B,GAAGK,EACH,SAAUJ,EAASI,CAAO,EAE1B,QAAS,GACT,MAAO,EASP,eAAgB,GAChB,qBAAsB,GACtB,YAAa,eACb,UAAWA,GAAA,MAAAA,EAAS,YACjB,IACA,IAAO,GAAK,EACf,QAAS,IACD,IAAI,QAAW,CAACS,EAASC,IAAW,CACpC,MAAAC,EAAa,IAAI,gBAEvB,WAAW,IAAM,CAEZ,IAAAC,EAEJ,QAAKZ,GAAA,YAAAA,EAAS,OAAQN,EAAO,aAAa,MAAM,UAAU,SAAS,WAAW,EAAU,QAAQ,OAAO,GAEnGc,EAAK,OAAS,MACjBI,EAAUf,IACR,KACAG,GAAA,YAAAA,EAAS,OAAQN,EAAO,aAAa,MAAM,SAC3C,CACC,OAAQ,CACP,OAAQQ,EAAO,MACf,GAAGF,GAAA,YAAAA,EAAS,OACZ,GAAGK,EAAc,CAClB,EACA,OAAQM,EAAW,MAAA,CACpB,EAEA,KAAME,GAAa,CAlErB,IAAAZ,EAoES,QAAAA,EAAAY,EAAS,OAAT,YAAAZ,EAAe,OAAQY,EAAS,IAAA,CACvC,EACA,MAAMH,CAAM,EAGNF,EAAK,OAAS,OAEtBI,EAAUf,IACR,MAAQG,GAAA,YAAAA,EAAS,OAAQN,EAAO,aAAa,MAAM,SACnD,CACC,OAAQA,EAAO,aAAa,MAAM,OAAO,QAAU,OACnD,GAAGM,GAAA,YAAAA,EAAS,KACZ,GAAGK,EAAc,CAClB,EACA,CACC,OAAQM,EAAW,MAAA,CACpB,EACA,KAAK,CAAC,CAAC,KAAAG,MAEAA,GAAA,YAAAA,EAAM,OAAQA,CACrB,EACA,MAAMJ,CAAM,EAGNF,EAAK,OAAS,MACtBI,EAAUf,IACR,KAAOG,GAAA,YAAAA,EAAS,OAAQN,EAAO,aAAa,MAAM,SAClD,CACC,OAAQA,EAAO,aAAa,MAAM,OAAO,QAAU,OACnD,GAAGM,GAAA,YAAAA,EAAS,KACZ,GAAGK,EAAc,CAClB,EACA,CACC,OAAQM,EAAW,MAAA,CACpB,EACA,KAAK,CAAC,CAAC,KAAAG,MAEAA,GAAA,YAAAA,EAAM,OAAQA,CACrB,EACA,MAAMJ,CAAM,EAENF,EAAK,OAAS,QACtBI,EAAUf,IACR,OAASG,GAAA,YAAAA,EAAS,OAAQN,EAAO,aAAa,MAAM,SACpD,CACC,OAAQA,EAAO,aAAa,MAAM,OAAO,QAAU,OACnD,GAAGM,GAAA,YAAAA,EAAS,KACZ,GAAGK,EAAc,CAClB,EACA,CACC,OAAQM,EAAW,MAAA,CACpB,EACA,KAAK,CAAC,CAAC,KAAAG,MAEAA,GAAA,YAAAA,EAAM,OAAQA,CACrB,EACA,MAAMJ,CAAM,EAENF,EAAK,OAAS,WACtBI,EAAUf,IACR,QAAUG,GAAA,YAAAA,EAAS,OAAQN,EAAO,aAAa,MAAM,SACrD,CACC,OAAQA,EAAO,aAAa,MAAM,OAAO,QAAU,OACnD,GAAGM,GAAA,YAAAA,EAAS,KACZ,GAAGK,EAAc,CAClB,EACA,CACC,OAAQM,EAAW,MAAA,CACpB,EACA,KAAK,CAAC,CAAC,KAAAG,MAEAA,GAAA,YAAAA,EAAM,OAAQA,CACrB,EACA,MAAMJ,CAAM,GAORD,EAAQG,CAAqB,EAAA,GAElCZ,GAAA,YAAAA,EAAS,QAAS,CAAC,CAAA,CACtB,CACF,CACA,EAIA,UAAAG,CACD,CAED"}