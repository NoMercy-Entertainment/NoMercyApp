import{k as p,av as m}from"./index-C_qNKMWs.js";/*!
  * vue-keycloak-js v2.4.0
  * @license ISC
  */function R(o,n,r,e){function u(l){return l instanceof r?l:new r(function(t){t(l)})}return new(r||(r=Promise))(function(l,t){function i(s){try{a(e.next(s))}catch(c){t(c)}}function k(s){try{a(e.throw(s))}catch(c){t(c)}}function a(s){s.done?l(s.value):u(s.value).then(i,k)}a((e=e.apply(o,[])).next())})}let d=!1;const g=Symbol("keycloak");var v={install:function(o,n={}){return R(this,void 0,void 0,function*(){if(d)return;d=!0;const r={config:window.__BASEURL__?`${window.__BASEURL__}/config`:"/config",init:{onLoad:"login-required"}},e=Object.assign({},r,n);if(y(e).hasError)throw new Error(`Invalid options given: ${y(e).error}`);const u=yield A(o,h());b(e.config).then(l=>{E(l,u,e)}).catch(l=>{console.log(l)})})},KeycloakSymbol:g};function h(){return{ready:!1,authenticated:!1,userName:null,fullName:null,token:null,tokenParsed:null,logoutFn:null,loginFn:null,login:null,createLoginUrl:null,createLogoutUrl:null,createRegisterUrl:null,register:null,accountManagement:null,createAccountUrl:null,loadUserProfile:null,subject:null,idToken:null,idTokenParsed:null,realmAccess:null,resourceAccess:null,refreshToken:null,refreshTokenParsed:null,timeSkew:null,responseMode:null,responseType:null,hasRealmRole:null,hasResourceRole:null,keycloak:null}}function A(o,n){return new Promise((r,e)=>{if(o.prototype)try{const u=o.observable(n);Object.defineProperty(o.prototype,"$keycloak",{get(){return u}}),r(u)}catch(u){e(u)}else{const u=p(n);o.config.globalProperties.$keycloak=u,o.provide(g,u),r(u)}})}function E(o,n,r){const e=new m(o),{updateInterval:u}=r;e.onReady=function(t){l(t),n.ready=!0,typeof r.onReady=="function"&&r.onReady(e,n)},e.onAuthSuccess=function(){const t=setInterval(()=>e.updateToken(60).catch(()=>{e.clearToken()}),u??1e4);n.logoutFn=()=>{clearInterval(t),e.logout(r.logout)}},e.onAuthRefreshSuccess=function(){l(!0),typeof r.onAuthRefreshSuccess=="function"&&r.onAuthRefreshSuccess(e)},e.onAuthRefreshError=function(){l(!1),typeof r.onAuthRefreshError=="function"&&r.onAuthRefreshError(e)},e.onAuthLogout=function(){l(!1),typeof r.onAuthLogout=="function"&&r.onAuthLogout(e)},e.init(r.init).then(t=>{l(t),typeof r.onInitSuccess=="function"&&r.onInitSuccess(t)}).catch(t=>{l(!1);const i=Error("Failure during initialization of keycloak-js adapter");typeof r.onInitError=="function"?r.onInitError(i,t):console.error(i,t)});function l(t=!1){n.authenticated=t,n.loginFn=e.login,n.login=e.login,n.createLoginUrl=e.createLoginUrl,n.createLogoutUrl=e.createLogoutUrl,n.createRegisterUrl=e.createRegisterUrl,n.register=e.register,n.keycloak=e,t&&(n.accountManagement=e.accountManagement,n.createAccountUrl=e.createAccountUrl,n.hasRealmRole=e.hasRealmRole,n.hasResourceRole=e.hasResourceRole,n.loadUserProfile=e.loadUserProfile,n.token=e.token,n.subject=e.subject,n.idToken=e.idToken,n.idTokenParsed=e.idTokenParsed,n.realmAccess=e.realmAccess,n.resourceAccess=e.resourceAccess,n.refreshToken=e.refreshToken,n.refreshTokenParsed=e.refreshTokenParsed,n.timeSkew=e.timeSkew,n.responseMode=e.responseMode,n.responseType=e.responseType,n.tokenParsed=e.tokenParsed,n.userName=e.tokenParsed.preferred_username,n.fullName=e.tokenParsed.name)}}function y(o){const{config:n,init:r,onReady:e,onInitError:u,onAuthRefreshError:l,onAuthLogout:t}=o;return typeof n!="string"&&!f(n)?{hasError:!0,error:`'config' option must be a string or an object. Found: '${n}'`}:!f(r)||typeof r.onLoad!="string"?{hasError:!0,error:`'init' option must be an object with an 'onLoad' property. Found: '${r}'`}:e&&typeof e!="function"?{hasError:!0,error:`'onReady' option must be a function. Found: '${e}'`}:u&&typeof u!="function"?{hasError:!0,error:`'onInitError' option must be a function. Found: '${u}'`}:l&&typeof l!="function"?{hasError:!0,error:`'onAuthRefreshError' option must be a function. Found: '${l}'`}:t&&typeof t!="function"?{hasError:!0,error:`'onAuthLogout' option must be a function. Found: '${t}'`}:{hasError:!1,error:null}}function f(o){return o!==null&&typeof o=="object"&&Object.prototype.toString.call(o)!=="[object Array]"}function b(o){return f(o)?Promise.resolve(o):new Promise((n,r)=>{const e=new XMLHttpRequest;e.open("GET",o),e.setRequestHeader("Accept","application/json"),e.onreadystatechange=()=>{e.readyState===4&&(e.status===200?n(JSON.parse(e.responseText)):r(Error(e.statusText)))},e.send()})}export{v as default};
