import{ax as T,K as w,dI as C,de as E,ba as g,dJ as H,dK as x,dL as R,dM as B,L as I}from"./index-DUI5FZI0.js";const n=w(),L=T(()=>{var e;return(e=n.value)==null?void 0:e.connection}),p=w(!1),S=()=>{var e,o,c;p.value=!0,console.log("Connected to Cast SignalR"),document.dispatchEvent(new Event("castHub-connected")),(e=n.value)!=null&&e.connection&&(R((o=n.value)==null?void 0:o.connection),B((c=n.value)==null?void 0:c.connection))},l=e=>{p.value=!1,console.log("Disconnected from Cast SignalR",e),document.dispatchEvent(new Event("castHub-disconnected"))},y=e=>{p.value=!1,console.error("Cast SignalR Error:",e),document.dispatchEvent(new Event("castHub-error"))};I(g,async e=>{var c,t,a,i,u,v,r,d;const o=(c=E.value)==null?void 0:c.accessToken;e&&p.value&&((a=(t=n.value)==null?void 0:t.connection)==null||a.stop().then(),(i=n.value)==null||i.dispose(),n.value=new H(g.value.serverBaseUrl,o,"castHub"),(v=(u=n.value)==null?void 0:u.connection)==null||v.on("connected",S),(d=(r=n.value)==null?void 0:r.connection)==null||d.on("disconnected",l),await D().catch(y))});const D=async()=>{var e,o,c,t;if(((o=(e=n.value)==null?void 0:e.connection)==null?void 0:o.state)!==C.Connected)return(t=(c=n.value)==null?void 0:c.connection)==null?void 0:t.start().then(S)},U=async()=>{var e,o,c,t;try{return((o=(e=n.value)==null?void 0:e.connection)==null?void 0:o.state)===C.Disconnected||(t=(c=n.value)==null?void 0:c.connection)==null?void 0:t.stop().then(l).catch(l)}catch(a){console.error("Error stopping Cast SignalR:",a),l()}},J=async()=>{var o,c,t,a,i,u,v,r,d,f,h,b,k;const e=(o=E.value)==null?void 0:o.accessToken;g.value&&(!((t=(c=n.value)==null?void 0:c.connection)!=null&&t.state)||((i=(a=n.value)==null?void 0:a.connection)==null?void 0:i.state)===C.Disconnected)&&(n.value=new H(g.value.serverBaseUrl,e,"castHub"),(v=(u=n.value)==null?void 0:u.connection)==null||v.on("connected",S),(d=(r=n.value)==null?void 0:r.connection)==null||d.on("disconnected",l),await D().catch(y),(h=(f=n.value)==null?void 0:f.connection)==null||h.onreconnecting(s=>{var m;console.log("SignalR Disconnected.",s==null?void 0:s.message),x((m=n.value)==null?void 0:m.connection),l()}),(k=(b=n.value)==null?void 0:b.connection)==null||k.onreconnected(()=>{var s;console.log("SignalR Reconnected."),R((s=n.value)==null?void 0:s.connection),S()}))};export{J as a,p as b,L as c,U as s};
