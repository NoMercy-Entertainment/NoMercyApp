{"version":3,"file":"MediaCarousel.vue_vue_type_script_setup_true_lang-twOmbszD.js","sources":["../../src/components/Carousel/MediaCarousel.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { computed, type PropType, ref } from 'vue';\nimport { SwiperSlide } from 'swiper/vue';\n\nimport type { KnownFor } from '@/types/api/base/person';\nimport type { InfoResponse } from '@/types/api/base/info';\nimport type { Collection } from '@/types/api/base/collection';\nimport type { ContinueWatching, HomeItem } from '@/types/api/base/home';\nimport type { LibraryResponse } from '@/types/api/base/library';\nimport type { ColorPalettes } from '@/types/api/shared';\nimport type { MenuItem } from 'primevue/menuitem';\n\nimport { setBackground, setColorPalette, setPoster, setTitle } from '@/store/ui';\n\nimport Carousel from '@/components/Carousel/Carousel.vue';\nimport MediaCard from '@/components/Cards/MediaCard.vue';\nimport { showBackdrops } from '@/store/preferences';\nimport MoooomIcon from '@/components/Images/icons/MoooomIcon.vue';\n\nconst props = defineProps({\n  data: {\n    type: Array as PropType<Array<LibraryResponse | InfoResponse | HomeItem | ContinueWatching | Collection | KnownFor>>,\n    required: true,\n  },\n  title: {\n    type: String,\n    required: true,\n  },\n  moreLink: {\n    type: String,\n    required: false,\n  },\n  type: {\n    type: String as PropType<'poster' | 'backdrop'>,\n    required: false,\n  },\n  suffix: {\n    type: String,\n    required: false,\n    default: '',\n  },\n  index: {\n    type: Number,\n    required: false,\n    default: 0,\n  },\n  limitCardCountBy: {\n    type: Number,\n    required: false,\n  },\n  disableAutoAspect: {\n    type: Boolean,\n    required: false,\n    default: false,\n  },\n  menuItems: {\n    type: Array as PropType<MenuItem[]>,\n    required: false,\n    default: () => [],\n  },\n  onRightClick: {\n    type: Function as PropType<(event: MouseEvent, item: any) => void>,\n    required: false,\n  },\n  // cardMenu: {\n  // \ttype: Object as PropType<Ref>,\n  // \trequired: false,\n  // },\n  colorPalette: {\n    type: Object as PropType<ColorPalettes | undefined>,\n    required: false,\n  },\n});\n\nconst handleClick = (item: any) => {\n  if (item?.backdrop) {\n    setBackground(item?.backdrop);\n  }\n  if (item?.poster) {\n    setPoster(item.poster);\n  }\n  if (item.title) {\n    setTitle(item.title);\n  }\n  if (item.color_palette) {\n    setColorPalette(item.color_palette.poster);\n  }\n};\n\nconst backdropCards = computed(() => {\n  return showBackdrops.value && props.type !== 'poster';\n});\n\nconst cardMenu = ref();\n\nconst onRightClick = (event: MouseEvent, item: any) => {\n  if (props.onRightClick) {\n    props.onRightClick(event, item);\n    cardMenu.value.show(event);\n  }\n};\n\n</script>\n\n<template>\n  <!--  <ContextMenu v-if=\"menuItems\" ref=\"cardMenu\" :model=\"menuItems\"/>-->\n\n  <Carousel :index=\"index\" :limitCardCountBy=\"limitCardCountBy\" :title=\"title\" class=\"\"\n    :type=\"!backdropCards ? 'backdrop' : 'poster'\" :disableAutoAspect=\"!backdropCards\">\n    <template v-slot:link>\n      <RouterLink v-if=\"moreLink\" :to=\"moreLink\"\n        class=\"text-base text-slate-dark-9 dark:text-slate-light-9 flex items-center ml-auto mr-2\">\n        <span>{{ $t('See more') }}</span>\n        <MoooomIcon icon=\"chevronRight\" className=\"w-6 mt-1\" />\n      </RouterLink>\n    </template>\n\n    <template v-for=\"(item, itemIndex) in data\" :key=\"item?.id\">\n      <swiper-slide v-if=\"item?.id\" class=\"flex\">\n        <MediaCard :id=\"`item-${title}-${item.id}`\" :data=\"item\" :index=\"itemIndex\"\n          :onclick=\"() => handleClick(item as LibraryResponse | InfoResponse | HomeItem | ContinueWatching | Collection | KnownFor)\"\n          :watch=\"suffix == '/watch'\" :disableAutoAspect=\"!backdropCards\" :type=\"!backdropCards ? 'backdrop' : 'poster'\"\n          @contextmenu=\"onRightClick($event, item)\" class=\"\" />\n      </swiper-slide>\n    </template>\n  </Carousel>\n</template>\n"],"names":["props","__props","handleClick","item","setBackground","setPoster","setTitle","setColorPalette","backdropCards","computed","showBackdrops","cardMenu","ref","onRightClick","event"],"mappings":"0yBAmBA,MAAMA,EAAQC,EAuDRC,EAAeC,GAAc,CAC7BA,GAAA,MAAAA,EAAM,UACRC,EAAcD,GAAA,YAAAA,EAAM,QAAQ,EAE1BA,GAAA,MAAAA,EAAM,QACRE,EAAUF,EAAK,MAAM,EAEnBA,EAAK,OACPG,EAASH,EAAK,KAAK,EAEjBA,EAAK,eACSI,EAAAJ,EAAK,cAAc,MAAM,CAE7C,EAEMK,EAAgBC,EAAS,IACtBC,EAAc,OAASV,EAAM,OAAS,QAC9C,EAEKW,EAAWC,EAAI,EAEfC,EAAe,CAACC,EAAmBX,IAAc,CACjDH,EAAM,eACFA,EAAA,aAAac,EAAOX,CAAI,EACrBQ,EAAA,MAAM,KAAKG,CAAK,EAE7B"}