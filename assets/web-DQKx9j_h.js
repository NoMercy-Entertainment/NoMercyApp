import{bo as a}from"./index-Bfb4eeQA.js";class l extends a{constructor(){super({name:"ChromecastPlugin",platforms:["web"]})}onInitSuccess(){console.log("GCast initialization success")}onError(s){console.error("GCast initialization failed",s)}async initialize(s){const e=window.document.createElement("script");e.setAttribute("type","text/javascript"),e.setAttribute("src","https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"),window.document.body.appendChild(e),window.__onGCastApiAvailable=t=>{if(console.log("cast is available:",t),t){this.cast=window.chrome.cast;const i=new this.cast.SessionRequest(s||this.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID),o=new this.cast.ApiConfig(i,()=>{},n=>{this.cast.ReceiverAvailability.AVAILABLE});this.cast.initialize(o,this.onInitSuccess,this.onError)}}}async requestSession(){return console.log("request session called"),this.cast.requestSession(s=>{this.session=s})}async launchMedia(s){let e=new this.cast.media.MediaInfo(s),t=new this.cast.media.LoadRequest(e);return console.log("launch media with session",this.session),this.session?(this.session.loadMedia(t),!0):(window.open(s),!1)}}export{l as ChromecastWeb};
//# sourceMappingURL=web-DQKx9j_h.js.map
