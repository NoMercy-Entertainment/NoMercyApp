{"version":3,"file":"web-CC6zUkaI.js","sources":["../../node_modules/@gameleap/capacitor-chromecast/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class ChromecastWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'ChromecastPlugin',\n            platforms: ['web'],\n        });\n    }\n    onInitSuccess() {\n        console.log('GCast initialization success');\n    }\n    onError(err) {\n        console.error('GCast initialization failed', err);\n    }\n    async initialize(appId) {\n        const script = window['document'].createElement('script');\n        script.setAttribute('type', 'text/javascript');\n        script.setAttribute('src', 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1');\n        window['document'].body.appendChild(script);\n        window.__onGCastApiAvailable = (isAvailable) => {\n            console.log('cast is available:', isAvailable);\n            if (isAvailable) {\n                this.cast = window['chrome'].cast;\n                const sessionRequest = new this.cast.SessionRequest(appId || this.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID);\n                const apiConfig = new this.cast.ApiConfig(sessionRequest, () => { }, (status) => {\n                    if (status === this.cast.ReceiverAvailability.AVAILABLE) {\n                    }\n                });\n                this.cast.initialize(apiConfig, this.onInitSuccess, this.onError);\n            }\n        };\n    }\n    async requestSession() {\n        console.log('request session called');\n        return this.cast.requestSession((session) => {\n            this.session = session;\n        });\n    }\n    async launchMedia(media) {\n        let mediaInfo = new this.cast.media.MediaInfo(media);\n        let request = new this.cast.media.LoadRequest(mediaInfo);\n        console.log('launch media with session', this.session);\n        if (!this.session) {\n            window.open(media);\n            return false;\n        }\n        // this.session.loadMedia(request, this.onMediaDiscovered.bind(this, 'loadMedia'), this.onMediaError);\n        this.session.loadMedia(request);\n        return true;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["ChromecastWeb","WebPlugin","err","appId","script","isAvailable","sessionRequest","apiConfig","status","session","media","mediaInfo","request"],"mappings":"yCACO,MAAMA,UAAsBC,CAAU,CACzC,aAAc,CACV,MAAM,CACF,KAAM,mBACN,UAAW,CAAC,KAAK,CAC7B,CAAS,CACT,CACI,eAAgB,CACZ,QAAQ,IAAI,8BAA8B,CAClD,CACI,QAAQC,EAAK,CACT,QAAQ,MAAM,8BAA+BA,CAAG,CACxD,CACI,MAAM,WAAWC,EAAO,CACpB,MAAMC,EAAS,OAAO,SAAY,cAAc,QAAQ,EACxDA,EAAO,aAAa,OAAQ,iBAAiB,EAC7CA,EAAO,aAAa,MAAO,4EAA4E,EACvG,OAAO,SAAY,KAAK,YAAYA,CAAM,EAC1C,OAAO,sBAAyBC,GAAgB,CAE5C,GADA,QAAQ,IAAI,qBAAsBA,CAAW,EACzCA,EAAa,CACb,KAAK,KAAO,OAAO,OAAU,KAC7B,MAAMC,EAAiB,IAAI,KAAK,KAAK,eAAeH,GAAS,KAAK,KAAK,MAAM,6BAA6B,EACpGI,EAAY,IAAI,KAAK,KAAK,UAAUD,EAAgB,IAAM,GAAME,GAAW,CAC9D,KAAK,KAAK,qBAAqB,SAElE,CAAiB,EACD,KAAK,KAAK,WAAWD,EAAW,KAAK,cAAe,KAAK,OAAO,CAChF,CACS,CACT,CACI,MAAM,gBAAiB,CACnB,eAAQ,IAAI,wBAAwB,EAC7B,KAAK,KAAK,eAAgBE,GAAY,CACzC,KAAK,QAAUA,CAC3B,CAAS,CACT,CACI,MAAM,YAAYC,EAAO,CACrB,IAAIC,EAAY,IAAI,KAAK,KAAK,MAAM,UAAUD,CAAK,EAC/CE,EAAU,IAAI,KAAK,KAAK,MAAM,YAAYD,CAAS,EAEvD,OADA,QAAQ,IAAI,4BAA6B,KAAK,OAAO,EAChD,KAAK,SAKV,KAAK,QAAQ,UAAUC,CAAO,EACvB,KALH,OAAO,KAAKF,CAAK,EACV,GAKnB,CACA","x_google_ignoreList":[0]}