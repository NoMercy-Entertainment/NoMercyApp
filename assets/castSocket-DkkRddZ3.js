import{H as i}from"./HubConnection-CMQnVIkW.js";import{C as g,l as u,ah as l,R as o,cM as r,dw as p,dx as v,cN as C,w as S}from"./index-H-vD2rqS.js";const n=u(),w=g(()=>n.value?.connection),a=u(!1);function t(){a.value=!0,console.log("Connected to Cast SignalR"),document.dispatchEvent(new Event("castHub-connected")),n.value?.connection&&(v(n.value?.connection),C(n.value?.connection))}function c(e){a.value=!1,console.log("Disconnected from Cast SignalR",e),document.dispatchEvent(new Event("castHub-disconnected"))}function d(e){a.value=!1,console.error("Cast SignalR Error:",e),document.dispatchEvent(new Event("castHub-error"))}S(o,async e=>{const s=l.value?.accessToken;e&&a.value&&(n.value?.connection?.stop().then(),n.value?.dispose(),n.value=new r(o.value.serverBaseUrl,s,"castHub"),n.value?.connection?.on("connected",t),n.value?.connection?.on("disconnected",c),await f().catch(d))});async function f(){if(n.value?.connection?.state!==i.Connected)return n.value?.connection?.start().then(t)}async function k(){try{return n.value?.connection?.state===i.Disconnected?void 0:n.value?.connection?.stop().then(c).catch(c)}catch(e){console.error("Error stopping Cast SignalR:",e),c()}}async function b(){const e=l.value?.accessToken;o.value&&(!n.value?.connection?.state||n.value?.connection?.state===i.Disconnected)&&(n.value=new r(o.value.serverBaseUrl,e,"castHub"),n.value?.connection?.on("connected",t),n.value?.connection?.on("disconnected",c),await f().catch(d),n.value?.connection?.onreconnecting(s=>{console.log("SignalR Disconnected.",s?.message),p(n.value?.connection),c()}),n.value?.connection?.onreconnected(()=>{console.log("SignalR Reconnected."),v(n.value?.connection),t()}))}export{b as a,a as b,w as c,k as s};
