name: Deploy to GitHub Pages

on:
  push:
    paths-ignore: 
      - 'ios/**'
      - 'node_modules/**'
      - 'docs/**'
    branches:
      - master

permissions:
  contents: write
  id-token: write
  pull-requests: write
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install --force && npm install @rollup/rollup-linux-x64-gnu --save-dev --force

      - name: Build documentation
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          cname: app.nomercy.tv
          
      - name: Install Java
        uses: actions/setup-java@v5
        with:
          distribution: 'oracle'
          java-version: '21'

      # Sync the project
      - name: Sync Capacitor
        run: npx cap sync android

      # Build the Ionic app
      - name: Build Ionic App
        run: npm run build:android

      # Set version information
      - name: Set Version Information
        run: |
          echo "VERSION_CODE=$((GITHUB_RUN_NUMBER))" >> $GITHUB_ENV
          echo "VERSION_NAME=1.0.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV

      # Build the Android project
      - name: Build Android APK
        run: |
          cd ./android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew assembleDebug --stacktrace
          chmod 777 ./app/build/outputs/apk/debug/app-debug.apk

      - name: Decode keystore and create jks
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks

      - name: Sign APK
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore keystore.jks \
            -storepass ${{ secrets.KEYSTORE_PASSWORD }} \
            ./android/app/build/outputs/apk/debug/app-debug.apk ${{ secrets.KEY_ALIAS }}

      - name: Verify Signed APK
        run: |
          jarsigner -verify ./android/app/build/outputs/apk/debug/app-debug.apk

      # Rename the Signed APK:
      - name: Rename Signed APK
        run: |
          mv ./android/app/build/outputs/apk/debug/app-debug.apk \
          ./android/app/build/outputs/apk/debug/app-release.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Ionic Android APK Release
          body: |
            New APK release is ready for download.
            Version: 1.0.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Get Short SHA
        id: get_short_sha
        run: echo "::set-output name=short_sha::${GITHUB_SHA::7}"

      # Upload the APK to the release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./android/app/build/outputs/apk/debug/app-release.apk
          asset_name: app-release-1.0.${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive