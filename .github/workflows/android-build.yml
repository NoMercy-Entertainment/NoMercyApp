name: Build and Release Android App

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - Deploy to GitHub Pages
    types:
      - completed

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Build the Ionic app
      - name: Build Ionic App
        run: npm run build:android

      # Sync the project
      - name: Sync Capacitor
        run: npx cap sync android

      # Build the Android project
      - name: Build Android APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew clean
          ./gradlew assembleDebug

      # - name: Sign APK
      #   env:
      #     KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      #   run: |
      #     echo "${{ secrets.ANDROID_KEYSTORE }}" > release-key.jks
      #     jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
      #       -keystore release-key.jks \
      #       -storepass $KEYSTORE_PASSWORD \
      #       android/app/build/outputs/apk/release/app-release-unsigned.apk alias_name

      # - name: Verify Signed APK
      #   run: |
      #     jarsigner -verify android/app/build/outputs/apk/release/app-release-unsigned.apk

      # # Rename the Signed APK:
      # - name: Rename Signed APK
      #   run: |
      #     mv android/app/build/outputs/apk/release/app-release-unsigned.apk \
      #     android/app/build/outputs/apk/release/app-release.apk
      
      # Create a GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Ionic Android APK Release
          body: |
            New APK release is ready for download.
          draft: false
          prerelease: false

      - name: Get Short SHA
        id: get_short_sha
        run: echo "::set-output name=short_sha::${GITHUB_SHA::7}"

      # Upload the APK to the release
      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug-${{ steps.get_short_sha.outputs.short_sha }}.apk
          asset_content_type: application/vnd.android.package-archive